{"version":3,"sources":["components/Table.jsx","components/modals/ModalSolvedSale.jsx","components/modals/ModalDetailSale.jsx","pages/SaleDispatchPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","getCellProps","autoRemove","val","Table","ModalSolvedSale","dataToPay","props","useState","payment","turned","multiple_payment","efectivo","tarjeta","sumup","cheque","otros","status","voucher","setPayment","isOpenMultiple","setIsOpenMultiple","isReadOnlyPayment","setIsReadOnlyPayment","handleOnHide","onHide","setTypePayment","typePayment","Object","assign","paymentValue","includes","total","onChangeMultiple","newPaymentMultiple","name","checked","show","isShow","aria-labelledby","centered","Header","closeButton","Title","Body","Fragment","sm","md","lg","xs","inputEfectivo","handleChange","inputTarjeta","inputSumup","inputCheque","inputOtros","block","parseFloat","turnet_temporal","marginLeft","ref","fontSize","showPriceWithDecimals","config","sub_total","tax","inputPayment","handleKeyUp","readonly","inputTurned","Group","Check","custom","label","total_to_pay","toast","error","cartSale","route","isDispatch","axios","post","API_URL","then","result","success","catch","err","response","message","console","log","Footer","defaultProps","required","cols","step","messageErrors","ModalDetailSale","dataSale","client","name_client","phone","address","type_document","data_document","products","v","product","name_product","simbolo_moneda","price","quantity","description","type_method","parseInt","methodSaleHandle","method_sale","discount_recharge","discount_or_recharge","datos","amount_descuento","amount","displayTotal","total_discount_recharge","type_discount_recharge","type_percentaje_fixed_discount_recharge","tax_configuration","returnTypePayment","type_sale","handleStatus","user","email","saleColumns","optionsBar","responsive","maintainAspectRatio","animation","duration","hover","animationDuration","responsiveAnimationDuration","data_donut_ss_status","labels","datasets","hoverBackgroundColor","connect","id_branch_office","enterpriseSucursal","id_enterprise","configs","configStore","displayLoading","setDisplayLoading","sales","setSales","isOpenSolvedSale","setIsOpenSolvedSale","saleDataOption","setSaleDataOption","isOpenDetailSale","setIsOpenDetailSale","isOpenStatusDispatch","setIsOpenStatusDispatch","status_dispatch","description_dispatch","dispatch","formStatus","setFormStatus","validated","setValidated","redraw","setRedraw","stadistics","setStadistics","useEffect","fetchData","layoutHelpers","toggleCollapsed","resetChartData","handleDataDonutSsStatus","setTimeout","accessor","Cell","props1","original","placement","overlay","openModalStatusDispatch","val_status","status_payment_dispatch","moment","createdAt","format","title","Item","solvedSale","storageDispatch","printInvoice","seeDetails","forEach","push","ARRAY_COLORS","put","tokenExpired","handleOnHideFormStatus","onChangeStatusDispatch","window","open","promise","get","Promise","all","delivery","cleanFormStatusDelivery","options","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","noValidate"],"mappings":"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","file":"static/js/42.a18abc4e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n}\r\n\r\nexport default Table\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Modal,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Badge,\r\n  Dropdown,\r\n  DropdownButton\r\n} from 'react-bootstrap'\r\nimport { showPriceWithDecimals } from 'utils/functions'\r\nimport { toast } from 'react-toastify'\r\nimport { API_URL } from 'utils/constants'\r\nimport InputField from 'components/input/InputComponent'\r\nimport axios from 'axios'\r\n\r\nconst ModalSolvedSale = ({dataToPay, ...props}) => {\r\n\r\n  const [payment, setPayment] = useState({\r\n    payment: '',\r\n    turned: '',\r\n    type: 1,\r\n    multiple_payment: {\r\n      efectivo: 0,\r\n      tarjeta: 0,\r\n      sumup: 0,\r\n      cheque: 0,\r\n      otros: 0,\r\n      status: false\r\n    },\r\n    voucher: false,\r\n  })\r\n\r\n  const [isOpenMultiple,setIsOpenMultiple] = useState(false)\r\n  const [isReadOnlyPayment,setIsReadOnlyPayment] = useState(false)\r\n\r\n  const handleOnHide = () => {\r\n    props.onHide()\r\n  }\r\n\r\n  const setTypePayment = typePayment => {\r\n\r\n    let turned = Object.assign({},payment).turned\r\n    let paymentValue = Object.assign({},payment).payment\r\n\r\n    if(typePayment === 6){\r\n      setIsOpenMultiple(true)\r\n      setIsReadOnlyPayment(true)\r\n    }else{\r\n      if([2,3,4].includes(typePayment)){\r\n        turned = 0\r\n        paymentValue = dataToPay.total\r\n      }\r\n      setIsReadOnlyPayment(false)\r\n    }\r\n\r\n    setPayment({...payment, turned, payment: paymentValue, type: typePayment, multiple_payment: {\r\n      efectivo: 0,\r\n      tarjeta: 0,\r\n      sumup: 0,\r\n      cheque: 0,\r\n      otros: 0,\r\n      status: false\r\n    }})\r\n  }\r\n\r\n\r\n  const onChangeMultiple = e => {\r\n    let newPaymentMultiple = Object.assign({},payment.multiple_payment)\r\n    newPaymentMultiple[e.target.name] = e.target.value\r\n    setPayment({...payment, multiple_payment : newPaymentMultiple})\r\n\r\n  }\r\n\r\n  const handleFinishPayment = () => {\r\n\r\n    if(!payment.type){\r\n      toast.error('Debe escoger un método de pago')\r\n      return\r\n    }\r\n\r\n    if(!payment.payment){\r\n      toast.error('Debe ingresar un monto a pagar')\r\n      return\r\n    }\r\n\r\n    let total_to_pay = parseFloat(dataToPay.total)\r\n    let paymentTotal = parseFloat(payment.payment)\r\n    if(paymentTotal < total_to_pay){\r\n      toast.error('El monto pagado es inferior al total por pagar')\r\n    }else{\r\n      let cartSale = Object.assign({},dataToPay,{\r\n        payment\r\n      })\r\n      let route = props.isDispatch ? 'sale_dispatch_payment' : 'sale_fiao'\r\n      axios.post(API_URL+route,cartSale).then(result => {\r\n\r\n        toast.success('Proceso Completado')\r\n        props.onHide()\r\n\r\n      }).catch(err => {\r\n        if(err.response){\r\n          toast.error(err.response.data.message)\r\n        }else{\r\n          console.log(err)\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handlePaymentMultiple = () => {\r\n\r\n    let total = parseFloat( payment.multiple_payment.efectivo ) +\r\n                    parseFloat( payment.multiple_payment.tarjeta ) +\r\n                    parseFloat( payment.multiple_payment.sumup ) +\r\n                    parseFloat( payment.multiple_payment.cheque ) +\r\n                    parseFloat( payment.multiple_payment.otros )\r\n\r\n    let turnet_temporal =  total - dataToPay.total\r\n\r\n    if(turnet_temporal < 0 ){\r\n      turnet_temporal = 0\r\n    }\r\n\r\n    setPayment({...payment, turned: turnet_temporal, payment: total})\r\n    setIsOpenMultiple(false)\r\n  }\r\n\r\n\r\n  const onChange = e => {\r\n    if(e.target.id === \"voucherCheckbox\"){\r\n      setPayment({...payment, 'voucher' : e.target.checked})\r\n    }else if(e.target.name === \"type_delivery\"){\r\n      let val = e.target.value === \"true\" ? true : false\r\n      setPayment({...payment, [e.target.name] : val})\r\n    }else{\r\n      setPayment({...payment, [e.target.name] : e.target.value})\r\n    }\r\n  }\r\n\r\n  const onKeyUp = e => {\r\n    let total = parseFloat(e.target.value) - parseFloat(dataToPay.total)\r\n    if(total > 0){\r\n      setPayment({...payment, turned: [2,3,4].includes(payment.type) ? 0 : total})\r\n    }else{\r\n      setPayment({...payment, turned: 0})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={props.isShow}\r\n      onHide={handleOnHide}\r\n      size=\"xl\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton className=\"header_dark\">\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Pagar Factura\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isOpenMultiple ? (\r\n          <React.Fragment>\r\n            <div className=\"containerDiv\" style={{ marginLeft: '-8px'}}>\r\n              <Col sm={12} md={12} lg={12} xs={12}>\r\n                <h4 className=\"text-center\">Factura N° {dataToPay.ref}</h4>\r\n                <Row>\r\n                  <Col sm={4} md={4} lg={4} xs={12} className=\"text-center\">\r\n                    <h4>Sub Total: <Badge variant=\"primary\" style={{fontSize: '18px'}}>{ showPriceWithDecimals(props.config,dataToPay.sub_total) } </Badge></h4>\r\n                  </Col>\r\n                  <Col sm={4} md={4} lg={4} xs={12} className=\"text-center\">\r\n                    <h4>Tax: <Badge variant=\"primary\" style={{fontSize: '18px'}}>{ showPriceWithDecimals(props.config,dataToPay.tax) }</Badge></h4>\r\n                  </Col>\r\n                  <Col sm={4} md={4} lg={4} xs={12} className=\"text-center\">\r\n                    <h4>Total: <Badge variant=\"primary\" style={{fontSize: '18px'}}>{ showPriceWithDecimals(props.config,dataToPay.total) }</Badge></h4>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </div>\r\n            <div className=\"containerDiv\" style={{ marginLeft: '-8px'}}>\r\n              <Row className=\"justify-content-center\">\r\n                <InputField\r\n                  {...props.inputPayment}\r\n                  handleChange={onChange}\r\n                  value={payment.payment}\r\n                  handleKeyUp={onKeyUp}\r\n                  readonly={isReadOnlyPayment}\r\n                  />\r\n              </Row>\r\n              <Row className=\"justify-content-center\">\r\n                <InputField\r\n                  {...props.inputTurned}\r\n                  handleChange={onChange}\r\n                  value={payment.turned}\r\n                  />\r\n              </Row>\r\n            </div>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Form.Group>\r\n                  <Form.Check type=\"checkbox\"\r\n                    custom\r\n                    id={'voucherCheckbox'}\r\n                    label={'Venta sin Boleta'}\r\n                    value={payment.voucher}\r\n                    checked={payment.voucher}\r\n                    onChange={onChange} />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4}>\r\n                <b>Metodo de Pago: </b>{payment.type === 1 ? (\r\n                    <Badge variant=\"danger\" className=\"font-badge\">Efectivo</Badge>\r\n                  ) : payment.type === 2 ? (\r\n                    <Badge variant=\"danger\" className=\"font-badge\">Débito</Badge>\r\n                  ) : (\r\n                    <Badge variant=\"danger\" className=\"font-badge\">Crédito</Badge>\r\n                  )}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"containerDiv justify-content-center\" style={{ marginLeft: '-8px'}}>\r\n              <Col sm={4} md={4} lg={4} xs={12}>\r\n                <Button size=\"sm\" onClick={() => setTypePayment(1)} variant=\"dark\" block=\"true\">Efectivo</Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4} xs={12}>\r\n                <Button size=\"sm\" onClick={() => setTypePayment(2)} variant=\"dark\" block=\"true\">Tarjeta Debito</Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4} xs={12}>\r\n                <Button size=\"sm\" onClick={() => setTypePayment(3)} variant=\"dark\" block=\"true\">Tarjeta Crédito</Button>\r\n              </Col>\r\n              <br/><br/>\r\n              {/*\r\n              <Col sm={4} md={4} lg={4} xs={12}>\r\n                <Button size=\"sm\" onClick={() => setTypePayment(4)} variant=\"dark\" block=\"true\">Cheque</Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4} xs={12}>\r\n                <Button size=\"sm\" onClick={() => setTypePayment(5)} variant=\"dark\" block=\"true\">Otros</Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4} xs={12}>\r\n                <Button size=\"sm\" onClick={() => setTypePayment(6)} variant=\"dark\" block=\"true\">Pago multiple</Button>\r\n              </Col>\r\n              <div className=\"clearfix\"></div>\r\n              */}\r\n              <br/><br/>\r\n              <Col sm={6} md={6} lg={6} xs={12}>\r\n                <Button size=\"sm\" variant=\"secondary\" block=\"true\" onClick={handleFinishPayment}>Finalizar</Button>\r\n              </Col>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <div className=\"containerDiv\">\r\n            <Col sm={12} md={12} lg={12} xs={12}>\r\n              <Row>\r\n                <InputField\r\n                  {...props.inputEfectivo}\r\n                  value={payment.multiple_payment.efectivo}\r\n                  handleChange={onChangeMultiple}\r\n                />\r\n                <InputField\r\n                  {...props.inputTarjeta}\r\n                  value={payment.multiple_payment.tarjeta}\r\n                  handleChange={onChangeMultiple}\r\n                />\r\n              </Row>\r\n              <Row>\r\n                <InputField\r\n                  {...props.inputSumup}\r\n                  value={payment.multiple_payment.sumup}\r\n                  handleChange={onChangeMultiple}\r\n                />\r\n                <InputField\r\n                  {...props.inputCheque}\r\n                  value={payment.multiple_payment.cheque}\r\n                  handleChange={onChangeMultiple}\r\n                />\r\n              </Row>\r\n              <Row>\r\n                <InputField\r\n                  {...props.inputOtros}\r\n                  value={payment.multiple_payment.otros}\r\n                  handleChange={onChangeMultiple}\r\n                />\r\n              </Row>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <Button size=\"md\" variant=\"secondary\" block={true} onClick={handlePaymentMultiple}>Procesar</Button>\r\n                </Col>\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <Button size=\"md\" variant=\"danger\" block={true} onClick={()=> setIsOpenMultiple(false)}>Mostrar Sección de Pagos</Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </div>\r\n          </React.Fragment>\r\n        )}\r\n\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n          <Button size=\"md\" onClick={handleOnHide}>Cerrar</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nModalSolvedSale.propTypes = {\r\n  isShow: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  config: PropTypes.object.isRequired,\r\n  configStore: PropTypes.object.isRequired,\r\n  isDispatch: PropTypes.bool,\r\n}\r\n\r\nModalSolvedSale.defaultProps = {\r\n  inputPayment: {\r\n    type: 'number',\r\n    required: true,\r\n    name: 'payment',\r\n    label : '',\r\n    placeholder: 'Cantidad Recibida',\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\",\r\n    step: 'any',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputTurned: {\r\n    type: 'number',\r\n    required: true,\r\n    name: 'turned',\r\n    label : '',\r\n    placeholder: 'Vuelto',\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\",\r\n    step: 'any',\r\n    readonly: true,\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputEfectivo: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'efectivo',\r\n    label : 'Efectivo',\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\",\r\n    messageErrors: [\r\n\r\n    ],\r\n  },\r\n  inputTarjeta: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'tarjeta',\r\n    label : 'Tarjeta',\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\",\r\n    messageErrors: [\r\n\r\n    ],\r\n  },\r\n  inputSumup: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'sumup',\r\n    label : 'Sumup',\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\",\r\n    messageErrors: [\r\n\r\n    ],\r\n  },\r\n  inputCheque: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'cheque',\r\n    label : 'Cheque',\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\",\r\n    messageErrors: [\r\n\r\n    ],\r\n  },\r\n  inputOtros: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'otros',\r\n    label : 'Otros',\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\",\r\n    messageErrors: [\r\n\r\n    ],\r\n  }\r\n}\r\n\r\n\r\nexport default ModalSolvedSale\r\n","import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Modal,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Image,\r\n  Badge\r\n} from 'react-bootstrap'\r\nimport { API_URL } from 'utils/constants'\r\nimport * as moment from 'moment-timezone'\r\nimport { showPriceWithDecimals, returnTypePayment } from 'utils/functions'\r\nimport axios from 'axios'\r\n\r\nconst ModalDetailSale = ({dataSale, ...props}) => {\r\n\r\n  const methodSaleHandle = type_method => {\r\n    switch (parseInt(type_method,10)) {\r\n      case 1:\r\n        return (<span>Unidad</span>)\r\n      break;\r\n      case 2:\r\n        return (<span>Mayorista</span>)\r\n      break;\r\n      case 3:\r\n        return (<span>Kilos,Litros u Otros</span>)\r\n      break;\r\n    }\r\n  }\r\n\r\n  const handleStatus = status => {\r\n    switch (parseInt(status,10)) {\r\n      case 1:\r\n        return (<span>Pagado</span>)\r\n      break;\r\n      case 2:\r\n        return (<span>En espera</span>)\r\n      break;\r\n      case 3:\r\n        return (<span>Anulado</span>)\r\n      break;\r\n    }\r\n  }\r\n\r\n  const displayTotal = datos => {\r\n    let amount_descuento = datos.discount_recharge.length > 0 ? parseFloat(datos.discount_recharge[0].amount) : 0\r\n    let total = (parseFloat(datos.price) * datos.quantity) - amount_descuento\r\n    return showPriceWithDecimals(props.config,total)\r\n  }\r\n\r\n  return (\r\n\r\n    <Modal\r\n      show={props.isShow}\r\n      onHide={props.onHide}\r\n      size=\"xl\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton style={{ backgroundColor: 'black', color: 'white'}}>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Detalle {props.isDispatch ? \"del despacho \" : \"de la compra \"} { dataSale.ref }\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h3 className=\"title_principal text-center\">Cliente</h3>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr style={{ backgroundColor: 'lightblue', color: 'black' }}>\r\n              <th className=\"text-center\">Nombre</th>\r\n              <th className=\"text-center\">Fono</th>\r\n              <th className=\"text-center\">Dirección</th>\r\n              <th className=\"text-center\">Documento</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"text-center\">\r\n            <tr>\r\n              <td>{dataSale.client ? dataSale.client.name_client : ''}</td>\r\n              <td>{dataSale.client ? dataSale.client.phone : ''}</td>\r\n              <td>{dataSale.client ? dataSale.client.address : ''}</td>\r\n              <td>{dataSale.client ? dataSale.client.type_document : ''} <br/> {dataSale.data_document}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <br/><br/><br/>\r\n        <h3 className=\"title_principal text-center\">Productos</h3>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr style={{ backgroundColor: 'lightblue', color: 'black' }}>\r\n                <th className=\"text-center\">Nombre</th>\r\n                <th className=\"text-center\">Precio</th>\r\n                <th className=\"text-center\">Cantidad</th>\r\n                <th className=\"text-center\">Descripción</th>\r\n                <th className=\"text-center\">Método de Venta</th>\r\n                <th className=\"text-center\">Descuento o Recargo</th>\r\n                <th className=\"text-center\">Monto</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"text-center\">\r\n              {dataSale.products ? dataSale.products.map((v,i) => (\r\n                <tr key={i}>\r\n                  <td>{v.product.name_product}</td>\r\n                  <td>{props.config.simbolo_moneda+showPriceWithDecimals(props.config,v.price)}</td>\r\n                  <td>{v.quantity}</td>\r\n                  <td>{v.description}</td>\r\n                  <td>{methodSaleHandle(v.method_sale)}</td>\r\n                  <td>{ v.discount_recharge.length > 0 ? v.discount_recharge[0].discount_or_recharge ? 'Descuento' : 'Recargo' : 'No posee' }</td>\r\n                  <td><Badge variant=\"danger\" className=\"font-badge\">{ props.config.simbolo_moneda+displayTotal(v) }</Badge></td>\r\n                </tr>\r\n              )) : ''}\r\n            </tbody>\r\n          </table>\r\n        <br/><br/><br/>\r\n        <h3 className=\"title_principal text-center\">Descuento o Recargo del Monto Total</h3>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr style={{ backgroundColor: 'lightblue', color: 'black' }}>\r\n              <th className=\"text-center\">Monto</th>\r\n              <th className=\"text-center\">Descuento o Recargo</th>\r\n              <th className=\"text-center\">Tipo de Operación</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"text-center\">\r\n            <tr>\r\n              <td>{ props.config.simbolo_moneda+' '+showPriceWithDecimals(props.config,dataSale.total_discount_recharge) }</td>\r\n              <td>{ dataSale.type_discount_recharge ? dataSale.type_discount_recharge : 'Ninguno' }</td>\r\n              <td>{ dataSale.type_percentaje_fixed_discount_recharge ? dataSale.type_percentaje_fixed_discount_recharge : 'Ninguno'}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <br/><br/><br/>\r\n        <h3 className=\"title_principal text-center\">Totales</h3>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr style={{ backgroundColor: 'lightblue', color: 'black' }}>\r\n                <th className=\"text-center\">Total</th>\r\n                <th className=\"text-center\">Tax</th>\r\n                <th className=\"text-center\">Subtotal</th>\r\n                <th className=\"text-center\">Monto Pagado</th>\r\n                <th className=\"text-center\">Vuelto</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"text-center\">\r\n              <tr>\r\n                <td><Badge variant=\"danger\" className=\"font-badge\">{ props.config.simbolo_moneda+showPriceWithDecimals(props.config,dataSale.total) }</Badge></td>\r\n                <td><Badge variant=\"danger\" className=\"font-badge\">{ props.config.simbolo_moneda+dataSale.tax }</Badge></td>\r\n                <td><Badge variant=\"danger\" className=\"font-badge\">{ props.config.simbolo_moneda+dataSale.sub_total }</Badge></td>\r\n                <td><Badge variant=\"danger\" className=\"font-badge\">{ props.config.simbolo_moneda+showPriceWithDecimals(props.config,dataSale.payment) }</Badge></td>\r\n                <td><Badge variant=\"danger\" className=\"font-badge\">{ props.config.simbolo_moneda+showPriceWithDecimals(props.config,dataSale.turned) }</Badge></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr style={{ backgroundColor: 'lightblue', color: 'black' }}>\r\n                <th className=\"text-center\">Tax Configurado Al:</th>\r\n                <th className=\"text-center\">Método de Pago:</th>\r\n                <th className=\"text-center\">Status</th>\r\n                <th className=\"text-center\">Vendedor</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"text-center\">\r\n              <tr>\r\n                <td>{ dataSale.tax_configuration }</td>\r\n                <td>{returnTypePayment(dataSale.type_sale)}</td>\r\n                <td>{ handleStatus(dataSale.status) }</td>\r\n                <td>{ dataSale.user ? dataSale.user.email : '' } - { dataSale.user ? dataSale.user.name : '' }</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button size=\"md\" variant=\"secondary\" onClick={props.onHide}>Cerrar</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nModalDetailSale.propTypes = {\r\n  config: PropTypes.object.isRequired,\r\n  configStore: PropTypes.object.isRequired,\r\n  dataSale: PropTypes.object.isRequired,\r\n  isDispatch: PropTypes.bool\r\n}\r\n\r\nexport default ModalDetailSale\r\n","import React, {useState,useMemo,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Modal,\r\n  Badge,\r\n  Form\r\n} from 'react-bootstrap'\r\nimport { toast } from 'react-toastify'\r\nimport { API_URL } from 'utils/constants'\r\nimport Table from 'components/Table'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { formatNumber } from 'utils/functions'\r\nimport ModalSolvedSale from 'components/modals/ModalSolvedSale'\r\nimport ModalDetailSale from 'components/modals/ModalDetailSale'\r\nimport * as moment from 'moment-timezone'\r\nimport { showPriceWithDecimals } from 'utils/functions'\r\nimport InputField from 'components/input/InputComponent'\r\nimport 'styles/components/modalComponents.css'\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport { ARRAY_COLORS } from 'utils/constants'\r\nimport { connect } from 'react-redux'\r\nimport layoutHelpers from 'shared/layouts/helpers'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nlet saleColumns = []\r\n\r\nlet optionsBar = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    duration: 0\r\n  },\r\n  hover: {\r\n    animationDuration: 0\r\n  },\r\n  responsiveAnimationDuration: 0,\r\n}\r\n\r\nlet data_donut_ss_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nconst SaleDispatchPage = (props) => {\r\n\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n  const [sales,setSales] = useState([])\r\n  const [isOpenSolvedSale,setIsOpenSolvedSale] = useState(false)\r\n  const [saleDataOption, setSaleDataOption] = useState({})\r\n  const [isOpenDetailSale,setIsOpenDetailSale] = useState(false)\r\n  const [isOpenStatusDispatch,setIsOpenStatusDispatch] = useState(false)\r\n  const [formStatus,setFormStatus] = useState({\r\n    status_dispatch: '',\r\n    description_dispatch: '',\r\n    dispatch : {}\r\n  })\r\n  const [validated, setValidated] = useState(false)\r\n  const [redraw,setRedraw] = useState(false)\r\n  const [stadistics,setStadistics] = useState([])\r\n\r\n  useEffect(() =>{\r\n    /*if(!props.config || !props.configStore){\r\n      if(!props.config){\r\n        toast.error('Error, debe hacer su configuración general')\r\n        setTimeout(function () {\r\n          props.history.replace('/config/config_general')\r\n        }, 2000);\r\n      }else if(!props.configStore){\r\n        toast.error('Error, debe hacer su configuración de la tienda primero')\r\n        setTimeout(function () {\r\n          props.history.replace('/config/config_store')\r\n        }, 2000);\r\n      }\r\n    }else{\r\n    }*/\r\n    fetchData()\r\n    layoutHelpers.toggleCollapsed()\r\n    return () =>{\r\n      layoutHelpers.toggleCollapsed()\r\n      saleColumns = []\r\n      resetChartData()\r\n    }\r\n  },[props.id_branch_office])\r\n\r\n  useEffect(() => {\r\n    handleDataDonutSsStatus()\r\n    setTimeout(function () {\r\n      setRedraw(false)\r\n    }, 3000);\r\n  },[stadistics])\r\n\r\n  useMemo(() =>{\r\n    saleColumns = [\r\n        {\r\n          Header: 'Referencia',\r\n          accessor: 'ref',\r\n          Cell: props1 => {\r\n            const original = props1.cell.row.original\r\n            return (\r\n              <OverlayTrigger placement={'bottom'} overlay={<Tooltip id=\"tooltip-disabled2\">Hacer click para cambiar el status</Tooltip>}>\r\n                <Button variant=\"link\" size=\"sm\" onClick={() => openModalStatusDispatch(original) }>{original.ref}</Button>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Cliente',\r\n          accessor: props1 => props1.client ? [props1.client.name_client+' '+props1.client.data_document] : [],\r\n\r\n        },\r\n        {\r\n          Header: 'Total',\r\n          accessor: 'total',\r\n          Cell: props1 => {\r\n            return showPriceWithDecimals(props1.config,props1.cell.row.original.total)\r\n          }\r\n        },\r\n        {\r\n          Header: 'Status de Entrega',\r\n          accessor: props1 => {\r\n            if(props1.status_dispatch == 1){\r\n              return ['Sin entregar']\r\n            }else if(props1.status_dispatch == 2){\r\n              return ['Entregado']\r\n            }else if(props1.status_dispatch == 3){\r\n              return ['Se llevo sin recepción']\r\n            }else if(props1.status_dispatch == 4){\r\n              return ['Retiro en Local']\r\n            }else if(props1.status_dispatch == 5){\r\n              return ['Anulado']\r\n            }else{\r\n              return ['Otro']\r\n            }\r\n\r\n          },\r\n          Cell: props1 => {\r\n\r\n            const original = props1.cell.row.original\r\n            let val_status = ''\r\n            if(original.status_dispatch == 1){\r\n              val_status = 'Sin entregar'\r\n            }else if(original.status_dispatch == 2){\r\n              val_status = 'Entregado'\r\n            }else if(original.status_dispatch == 3){\r\n              val_status = 'Se llevo sin recepción'\r\n            }else if(original.status_dispatch == 4){\r\n              val_status = 'Retiro en Local'\r\n            }else if(original.status_dispatch == 5){\r\n              val_status = 'Anulado'\r\n            }else{\r\n              val_status = 'Otro'\r\n            }\r\n\r\n            if(original.status_dispatch >= 5){\r\n              return (\r\n                <React.Fragment>\r\n                  <Badge variant=\"danger\" className=\"font-badge\">{val_status}</Badge>\r\n                  <br/>\r\n                  <b>Motivo:</b> {original.description_dispatch}\r\n                </React.Fragment>\r\n              )\r\n            }else{\r\n              return (<Badge variant=\"danger\" className=\"font-badge\">{val_status}</Badge>)\r\n            }\r\n          }\r\n        },\r\n        {\r\n          Header: 'Status de Pago',\r\n          accessor: props1 => {\r\n            if(props1.status_payment_dispatch == 1){\r\n              return ['En espera']\r\n            }else if(props1.status_payment_dispatch == 2){\r\n              return ['Pedido Guardado']\r\n            }else if(props1.status_payment_dispatch == 3){\r\n              return ['Pagado']\r\n            }else if(props1.status_payment_dispatch == 4){\r\n              return ['Anulado']\r\n            }\r\n          },\r\n          Cell: props1 => {\r\n            const original = props1.cell.row.original\r\n            let val = ''\r\n            if(original.status_payment_dispatch == 1){\r\n              val = 'En espera'\r\n            }else if(original.status_payment_dispatch == 2){\r\n              val = 'Pedido Guardado'\r\n            }else if(original.status_payment_dispatch == 3){\r\n              val = 'Pagado'\r\n            }else if(original.status_payment_dispatch == 4){\r\n              val = 'Anulado'\r\n            }\r\n            return ( <Badge variant=\"secondary\" className=\"font-badge\">{val}</Badge>)\r\n          }\r\n        },\r\n        {\r\n          Header: 'Fecha',\r\n          accessor: props1 => [moment(props.createdAt).format('DD-MM-YYYY')],\r\n        },\r\n        {\r\n          Header: 'Acciones',\r\n          Cell: props1 =>{\r\n            const { original } = props1.cell.row\r\n            return(\r\n              <DropdownButton size=\"sm\" id={'drop'+original.id} title=\"Seleccione\"  block=\"true\">\r\n                <Dropdown.Item onClick={() => openModalStatusDispatch(original) } >Cambiar Status de Entrega</Dropdown.Item>\r\n                {\r\n                  original.status_dispatch != 5 && original.status_payment_dispatch != 3 ? (\r\n                    <Dropdown.Item onClick={() => solvedSale(original)} >Pagar Despacho</Dropdown.Item>\r\n                  ) : ''\r\n                }\r\n                {\r\n                  original.status_dispatch != 5 && original.status_payment_dispatch == 1 ? (\r\n                      <Dropdown.Item onClick={() => storageDispatch(original)} >Guardar Despacho</Dropdown.Item>\r\n                  ) : ''\r\n                }\r\n                {\r\n                  original.status_payment_dispatch == 3 ? (\r\n                      <Dropdown.Item onClick={() => printInvoice(original)} >Imprimir Factura</Dropdown.Item>\r\n                  ) : ''\r\n                }\r\n                <Dropdown.Item onClick={() => seeDetails(original)} >Ver Detalle</Dropdown.Item>\r\n              </DropdownButton>\r\n            )\r\n          }\r\n        }\r\n      ]\r\n  })\r\n\r\n  const handleDataDonutSsStatus = () => {\r\n\r\n    stadistics.forEach((v, i) => {\r\n      data_donut_ss_status.labels.push(v.name)\r\n      data_donut_ss_status.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_ss_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_ss_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n    setTimeout(function () {\r\n      setRedraw(true)\r\n    }, 1500);\r\n\r\n  }\r\n\r\n  const  storageDispatch = data => {\r\n    setDisplayLoading(true)\r\n    axios.put(API_URL+'sale_storage_dispatch/'+data.id).then(result =>{\r\n      toast.success('Despacho Guardado')\r\n      resetChartData()\r\n      fetchData()\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const openModalStatusDispatch = (data) => {\r\n    handleOnHideFormStatus()\r\n    setFormStatus({...formStatus, dispatch: data})\r\n  }\r\n\r\n  const onChangeStatusDispatch = e => {\r\n    if(parseInt(e.target.value,10) < 5){\r\n      setFormStatus({...formStatus, [e.target.name] : e.target.value, description_dispatch: ''})\r\n    }else{\r\n      setFormStatus({...formStatus, [e.target.name] : e.target.value})\r\n    }\r\n  }\r\n\r\n  const printInvoice = datos => {\r\n    window.open('/invoicePrintPage/'+datos.id,'_blank')\r\n  }\r\n\r\n  const solvedSale = data => {\r\n    setSaleDataOption(data)\r\n    setIsOpenSolvedSale(true)\r\n  }\r\n\r\n  const seeDetails = data => {\r\n    setSaleDataOption(data)\r\n    setIsOpenDetailSale(true)\r\n  }\r\n\r\n  const anulateSale = data => {\r\n\r\n  }\r\n\r\n  const fetchData = () => {\r\n    let promise = [\r\n      axios.get(API_URL+'sale_by_dispatch'),\r\n      axios.get(API_URL+'sale_dispatch_stadistics'),\r\n    ]\r\n\r\n    Promise.all(promise).then(result => {\r\n      console.log(result[0].data,'aqui flaco malvado');\r\n      setSales(result[0].data)\r\n      setStadistics(result[1].data.delivery)\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const handleOnhideSaleFiao = () => {\r\n    setIsOpenSolvedSale(false)\r\n    resetChartData()\r\n    fetchData()\r\n  }\r\n\r\n  const handleOnHideFormStatus = () => {\r\n    setIsOpenStatusDispatch(!isOpenStatusDispatch)\r\n  }\r\n\r\n  const handleSubmitStatus = e => {\r\n\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let data = Object.assign({},formStatus)\r\n    setDisplayLoading(true)\r\n    axios.put(API_URL+'sale_dispatch_status_delivery/'+data.dispatch.id,data).then(result => {\r\n      toast.success('Status Modificado')\r\n      cleanFormStatusDelivery()\r\n      handleOnHideFormStatus()\r\n      resetChartData()\r\n      fetchData()\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const cleanFormStatusDelivery = () => {\r\n    setFormStatus({\r\n      status_dispatch: '',\r\n      description_dispatch: '',\r\n      dispatch: {}\r\n    })\r\n  }\r\n\r\n  const resetChartData = () => {\r\n    data_donut_ss_status = {\r\n      labels: [],\r\n    \tdatasets: [{\r\n    \t\tdata: [],\r\n    \t\tbackgroundColor: [],\r\n    \t\thoverBackgroundColor: []\r\n    \t}]\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col sm={6} md={6} lg={6}></Col>\r\n        <Col sm={6} md={6} lg={6}>\r\n          <h5>Totales por Status de Entrega</h5>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm={4} md={4} lg={4}>\r\n          <h4 className=\"title_principal\">Tabla de Despachos</h4>\r\n        </Col>\r\n        <Col sm={8} md={8} lg={8}>\r\n          <Doughnut data={data_donut_ss_status} redraw={redraw} options={optionsBar}/>\r\n        </Col>\r\n      </Row>\r\n      <hr/>\r\n      {displayLoading ? (\r\n        <LoadingComponent />\r\n      ) : (\r\n        <Row>\r\n          <Col sm={12} md={12} lg={12} xs={12} className=\"containerDiv\">\r\n            <Table columns={saleColumns} data={sales} />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <ModalSolvedSale\r\n        isShow={isOpenSolvedSale}\r\n        onHide={handleOnhideSaleFiao}\r\n        config={props.config}\r\n        configStore={props.configStore}\r\n        dataToPay={saleDataOption}\r\n        isDispatch={true}\r\n      />\r\n    {props.config && props.configStore ? (\r\n      <ModalDetailSale\r\n        isShow={isOpenDetailSale}\r\n        onHide={() => setIsOpenDetailSale(false) }\r\n        config={props.config}\r\n        configStore={props.configStore}\r\n        dataSale={saleDataOption}\r\n        isDispatch={true}\r\n        />\r\n    ) : ''}\r\n      <Modal\r\n        show={isOpenStatusDispatch}\r\n        onHide={handleOnHideFormStatus}\r\n        size=\"xl\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton className=\"header_dark\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Cambiar Status del Despacho {Object.keys(formStatus.dispatch).length > 0 ? formStatus.dispatch.ref : ''}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmitStatus} noValidate validated={validated}>\r\n          <Modal.Body>\r\n            <Row className=\"justify-content-center\">\r\n              <InputField\r\n                type=\"select\"\r\n                name=\"status_dispatch\"\r\n                required={true}\r\n                label=\"Status del Despacho\"\r\n                cols=\"col-md-6 col-sm-6 col-lg-6\"\r\n                value={formStatus.status_dispatch}\r\n                handleChange={onChangeStatusDispatch}\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                <option value='1'>Sin Entregar</option>\r\n                <option value='2'>Entregado</option>\r\n                <option value='3'>Se llevo sin Recepción</option>\r\n                <option value='4'>Retiro  en el Local</option>\r\n                <option value='5'>Anulado</option>\r\n                <option value='6'>Otro</option>\r\n              </InputField>\r\n            </Row>\r\n            {\r\n              formStatus.status_dispatch == 6 || formStatus.status_dispatch == 5 ? (\r\n                <Row className=\"justify-content-center\">\r\n                  <InputField\r\n                    type=\"textarea\"\r\n                    name=\"description_dispatch\"\r\n                    required={true}\r\n                    label=\"Ingrese una Descripción o Motivo\"\r\n                    cols=\"col-md-6 col-sm-6 col-lg-6\"\r\n                    value={formStatus.description_dispatch}\r\n                    handleChange={onChangeStatusDispatch}\r\n                    messageErrors={[]}\r\n                    />\r\n                </Row>\r\n              ) : ''\r\n            }\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button size=\"sm\" variant=\"primary\" type=\"submit\">Guardar</Button>\r\n            <Button size=\"sm\" variant=\"danger\" onClick={handleOnHideFormStatus}>Cerrar</Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </Container>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    id_branch_office : state.enterpriseSucursal.id_branch_office,\r\n    id_enterprise : state.enterpriseSucursal.id_enterprise,\r\n    config: state.configs.config,\r\n    configStore: state.configs.configStore,\r\n  }\r\n}\r\n\r\nSaleDispatchPage.propTypes ={\r\n  id_branch_office: PropTypes.string.isRequired,\r\n  id_enterprise : PropTypes.string.isRequired,\r\n  config: PropTypes.object,\r\n  configStore: PropTypes.object,\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(SaleDispatchPage)\r\n"],"sourceRoot":""}