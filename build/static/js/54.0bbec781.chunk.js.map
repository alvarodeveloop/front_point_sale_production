{"version":3,"sources":["components/Table.jsx","components/modals/ModalActionsCotization.jsx","pages/CotizacionSearchPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","getCellProps","autoRemove","val","Table","ModalActionCotization","props","Modal","show","isShow","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","cotization","status","Fragment","Row","Col","sm","md","lg","Button","updateCotizacion","block","seeDetailCotization","printCotizacion","printCotizacionNew","changeStatus","anulateCotization","goToFacturation","goToNoteSale","goToBillOfSale","goToGuideDispatch","Footer","optionsBar","responsive","maintainAspectRatio","animation","duration","hover","animationDuration","responsiveAnimationDuration","options_line","scales","yAxes","ticks","beginAtZero","data_donut_ss_status","labels","datasets","hoverBackgroundColor","data_donut_total_status","data_bar_failure_tipology","label","borderColor","borderWidth","hoverBorderColor","data_line_by_year","fill","cotizacionColumns","CotizacionSearchPage","useState","displayLoading","setDisplayLoading","cotizacionData","setCotizacionData","cotizationDetail","setCotizationDetail","isOpenModalDetail","setIsOpenModalDetail","redraw","setRedraw","statusCotization","setStatusCotization","displayFilter","setDisplayFilter","date_desde","date_hasta","dataForm","setDataForm","cotizationAction","setCotizationAction","isOpenModalAction","setIsOpenModalAction","accessor","Cell","props1","original","OverlayTrigger","placement","overlay","Tooltip","onHideModalAction","ref","name_seller","phone_seller","name_contact","phone_contact","comment","business_name_client","type_effect","moment","date_issue","format","date_expiration","determinateStatus","Badge","products","v","name_product","configGeneral","simbolo_moneda","showPriceWithDecimals","price","quantity","total_product","total_gastos","total_iva","discount_global","discount_global_amount","total_balance","is_products_paid","total_quantity_products_paid","total_quantity_products","useEffect","layoutHelpers","toggleCollapsed","fetchData","id_branch_office","handleDataDonutSsStatus","name","statuses","forEach","push","parseFloat","total","ARRAY_COLORS","invoice","mes","invoiceByYear","item","year","totalByStatus","setTimeout","handleDisplayFilter","objectPost","Object","assign","promises","axios","get","API_URL","post","Promise","all","then","result","catch","err","tokenExpired","objectStatus","toast","info","put","success","confirmAnulateCotization","delete","handleModalDetail","originalCoti","Container","fluid","history","replace","LoadingComponent","xs","Accordion","Card","Toggle","as","eventKey","Collapse","required","messageErrors","cols","handleChange","Image","src","require","width","options","colSpan","business_name_transmitter","rut_transmitter","address_transmitter","email_transmitter","phone_transmitter","country_transmitter","rut_client","address_client","city_client","comuna_client","spin_client","email_contact","email_seller","category","description","formatNumber","discount","method","method_sale","parseInt","is_neto","gastos","amount","referencias","type_document","ref_cotizacion","ind","date_ref","tz","reason_ref","type_code","total_with_iva","ModalActionsCotization","window","open","confirmAlert","customUI","onClose","defaultProps","JSON","parse","localStorage","getItem","connect","enterpriseSucursal","id_enterprise"],"mappings":"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","file":"static/js/54.0bbec781.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport 'styles/components/modalComponents.css'\r\nimport {Modal,Row,Col,Button} from 'react-bootstrap'\r\nimport {FaEdit,FaEye,FaFilePdf,FaFileInvoice,FaBan,FaSync} from 'react-icons/fa'\r\n\r\nconst ModalActionCotization = (props) => {\r\n  return (\r\n    <Modal\r\n      show={props.isShow}\r\n      onHide={props.onHide}\r\n      size=\"xl\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton className=\"header_dark\">\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Acciones Disponibles\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {props.cotization.status === 1 ? (\r\n          <React.Fragment>\r\n            <h5 className=\"title_principal\">Acciones generales</h5>\r\n            <hr/>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.updateCotizacion(props.cotization.id)} block={true}>Modificar Cotización <FaEdit /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacion(props.cotization.id)} block={true}>Imprimir <FaFilePdf /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacionNew(props.cotization.id)} block={true}>Imprimir nuevo pdf <FaFilePdf /></Button>\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            <h5 className=\"title_principal\">Status de la Cotización</h5>\r\n            <hr/>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.changeStatus(props.cotization.id,2)} block={true}>Aprobar Cotización <FaSync /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.anulateCotization(props.cotization.id,props.cotization.status)} block={true}>Anular cotización <FaBan /></Button>\r\n              </Col>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : props.cotization.status === 2 ? (\r\n          <React.Fragment>\r\n            <h5 className=\"title_principal\">Acciones generales</h5>\r\n            <hr/>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.updateCotizacion(props.cotization.id)} block={true}>Modificar Cotización <FaEdit /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacion(props.cotization.id)} block={true}>Imprimir <FaFilePdf /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacionNew(props.cotization.id)} block={true}>Imprimir nuevo pdf <FaFilePdf /></Button>\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            <h5 className=\"title_principal\">Documentos de la Cotización</h5>\r\n            <hr/>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToFacturation(props.cotization.id)} block={true}>Facturar <FaFileInvoice /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToNoteSale(props.cotization.id)} block={true}>Nota de venta <FaFileInvoice /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToBillOfSale(props.cotization.id)} block={true}>Boleta <FaFileInvoice /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToGuideDispatch(props.cotization.id)} block={true}>Guía de Despacho <FaFileInvoice /></Button>\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            <h5 className=\"title_principal\">Status de la Cotización</h5>\r\n            <hr/>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.changeStatus(props.cotization.id,1)} block={true}>Pasar a Pendiente <FaSync /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.anulateCotization(props.cotization.id,props.cotization.status)} block={true}>Anular cotización <FaBan /></Button>\r\n              </Col>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : props.cotization.status >= 3 && props.cotization.status < 7 ? (\r\n          <React.Fragment>\r\n            <Row>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacion(props.cotization.id)} block={true}>Imprimir <FaFilePdf /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacionNew(props.cotization.id)} block={true}>Imprimir nuevo pdf <FaFilePdf /></Button>\r\n              </Col>\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.anulateCotization(props.cotization.id,props.cotization.status)} block={true}>Anular Documento <FaBan /></Button>\r\n              </Col>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <Row className=\"justify-content-center\">\r\n            <Col sm={3} md={3} lg={3}>\r\n              <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye/></Button>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" size=\"md\" onClick={props.onHide}>Cerrar</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nModalActionCotization.propTypes = {\r\n  isShow: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  cotization: PropTypes.object.isRequired,\r\n  updateCotizacion: PropTypes.func.isRequired,\r\n  seeDetailCotization: PropTypes.func.isRequired,\r\n  printCotizacion: PropTypes.func.isRequired,\r\n  printCotizacionNew: PropTypes.func.isRequired,\r\n  changeStatus: PropTypes.func.isRequired,\r\n  anulateCotization: PropTypes.func.isRequired,\r\n  goToFacturation: PropTypes.func.isRequired,\r\n  goToNoteSale: PropTypes.func.isRequired,\r\n  goToBillOfSale: PropTypes.func.isRequired,\r\n  goToGuideDispatch: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ModalActionCotization\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Badge,\r\n  Accordion,\r\n  Card,\r\n  Modal,\r\n  Image\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport Table from 'components/Table'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport { showPriceWithDecimals } from 'utils/functions'\r\nimport { FaPlusCircle, FaChartLine, FaArrowCircleLeft} from \"react-icons/fa\";\r\nimport FileSaver from 'file-saver'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport layoutHelpers from 'shared/layouts/helpers'\r\nimport * as moment from 'moment-timezone'\r\nimport { formatNumber } from 'utils/functions'\r\nimport 'styles/components/modalComponents.css'\r\nimport { connect } from 'react-redux'\r\nimport {Doughnut,Bar,Line} from 'react-chartjs-2';\r\nimport { ARRAY_COLORS, ARRAY_MONTH } from 'utils/constants'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ModalActionsCotization from 'components/modals/ModalActionsCotization'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nlet optionsBar = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    duration: 0\r\n  },\r\n  hover: {\r\n    animationDuration: 0\r\n  },\r\n  responsiveAnimationDuration: 0,\r\n}\r\n\r\nconst options_line = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n}\r\n\r\nlet data_donut_ss_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nlet data_donut_total_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nlet data_bar_failure_tipology = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'Monto acumulado de documentos hechos por mes',\r\n      backgroundColor: 'rgb(15, 13, 74)',\r\n      borderColor: 'rgb(27, 13, 74)',\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: 'rgb(15, 13, 74)',\r\n      hoverBorderColor: 'rgb(27, 13, 74)',\r\n      data: []\r\n    }\r\n  ]\r\n};\r\n\r\nlet data_line_by_year = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'Cantidad facturada de documentos por años',\r\n      data: [],\r\n      fill: false,\r\n      backgroundColor: 'rgb(125, 81, 52)',\r\n      borderColor: 'rgb(99, 56, 21)',\r\n    },\r\n  ],\r\n}\r\n\r\nlet cotizacionColumns = null\r\n\r\nconst CotizacionSearchPage = props => {\r\n\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n  const [cotizacionData, setCotizacionData] = useState([])\r\n  const [cotizationDetail, setCotizationDetail] = useState({})\r\n  const [isOpenModalDetail, setIsOpenModalDetail] = useState(false)\r\n  const [redraw, setRedraw] = useState(false)\r\n  const [statusCotization, setStatusCotization] = useState({})\r\n  const [displayFilter,setDisplayFilter] = useState(1)\r\n  const [dataForm, setDataForm] = useState({\r\n    date_desde : '',\r\n    date_hasta: '',\r\n  })\r\n  const [cotizationAction,setCotizationAction] = useState({})\r\n  const [isOpenModalAction,setIsOpenModalAction] = useState(false)\r\n\r\n  useMemo(() => {\r\n    cotizacionColumns = [\r\n        {\r\n          Header: 'Referencia',\r\n          accessor: 'ref',\r\n          Cell: props1 => {\r\n            const {original} = props1.cell.row\r\n            return (\r\n              <OverlayTrigger placement={'bottom'} overlay={<Tooltip id=\"tooltip-disabled2\">Hacer click para ver las acciones</Tooltip>}>\r\n                <Button variant=\"link\" block={true} type=\"button\" size=\"sm\" onClick={() => onHideModalAction(original)}>{original.ref}</Button>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Rut Cliente',\r\n          accessor: 'rut_client',\r\n        },\r\n        {\r\n          Header: 'Razón Social',\r\n          accessor: 'business_name_client',\r\n          Cell: props1 => {\r\n            const {original} = props1.cell.row\r\n            return(\r\n              <OverlayTrigger placement={'right'} overlay={\r\n              <Tooltip id=\"tooltip-disabled2\">\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"><b>Vendedor: </b> {original.name_seller}</li>\r\n                  <li className=\"list-group-item\"><b>Fono del Vendedor: </b> {original.phone_seller ? original.phone_seller : 'No posee'}</li>\r\n                  <li className=\"list-group-item\"><b>Contacto</b> {original.name_contact ? original.name_contact : 'No posee'}</li>\r\n                  <li className=\"list-group-item\"><b>Fono del Contacto: </b> {original.phone_contact}</li>\r\n                  <li className=\"list-group-item\"><b>Comentario: </b> {original.comment}</li>\r\n                </ul>\r\n              </Tooltip>}>\r\n                <Button variant=\"link\" size=\"sm\" block={true} type=\"button\">{original.business_name_client}</Button>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Tipo',\r\n          accessor: props1 => props1.type_effect == 1 ? ['Afecta'] : ['Excento'],\r\n        },\r\n        {\r\n          Header: 'Fecha-Emisión',\r\n          accessor: props1 => [moment(props1.date_issue).format('DD-MM-YYYY')],\r\n        },\r\n        {\r\n          Header: 'Fecha Vencimiento',\r\n          accessor: props1 => [moment(props1.date_expiration).format('DD-MM-YYYY')],\r\n        },\r\n        {\r\n          Header: 'Status',\r\n          accessor: props1 => [determinateStatus(props1.status)],\r\n          Cell: props1 => {\r\n            const { original } = props1.cell.row\r\n            if(original.status === 1){\r\n              return (\r\n                <OverlayTrigger placement={'bottom'} overlay={<Tooltip id=\"tooltip-disabled2\">Hacer click para cambiar el Status</Tooltip>}>\r\n                  <Button variant=\"secondary\" block={true} size=\"sm\" onClick={() => changeStatus(original.id,2)}>Pendiente</Button>\r\n                </OverlayTrigger>\r\n              )\r\n            }else if(original.status === 2){\r\n              return (\r\n                <OverlayTrigger placement={'bottom'} overlay={<Tooltip id=\"tooltip-disabled2\">Hacer click para cambiar el Status</Tooltip>}>\r\n                  <Button variant=\"danger\" block={true} size=\"sm\" onClick={() => changeStatus(original.id,1)}>Aprobada</Button>\r\n                </OverlayTrigger>\r\n              )\r\n            }else if(original.status >= 3 && original.status < 7){\r\n              return (<Badge variant=\"primary\" className=\"font-badge\">{determinateStatus(original.status)}</Badge>)\r\n            }else{\r\n              return (<Badge variant=\"danger\" className=\"font-badge\">Anulada</Badge>)\r\n            }\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total Productos',\r\n          accessor: 'total_product',\r\n          Cell: props1 => {\r\n            return (\r\n              <OverlayTrigger placement={'left'} overlay={\r\n                <Tooltip id={\"tooltip-total_pagar\"+props1.cell.row.original.id}>\r\n                  <ul className=\"list-group\">\r\n                    {props1.cell.row.original.products.map((v,i) => (\r\n                      <li className=\"list-group-item\" key={i}>\r\n                        <b>Producto</b>: {v.name_product}<br/>\r\n                        <b>Precio</b> : {props.configGeneral.simbolo_moneda+showPriceWithDecimals(props.configGeneral,v.price)}<br/>\r\n                        <b>Cantidad</b>: {v.quantity}<br/>\r\n                        <b>Status</b>: {v.status == 1 ? 'Pendiente' : v.status == 2 ? 'Pagado' : 'Anulado'}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </Tooltip>}>\r\n                  <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                    {props.configGeneral.simbolo_moneda+showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_product)}\r\n                  </Badge>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total gastos',\r\n          accessor: 'total_gastos',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_gastos)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total Iva',\r\n          accessor: 'total_iva',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_iva)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Descuento Global',\r\n          accessor: 'discount_global_total',\r\n          Cell: props1 => {\r\n            return (\r\n              <OverlayTrigger placement={'left'} overlay={\r\n                <Tooltip id={\"tooltip-total_pagar\"+props1.cell.row.original.id}>\r\n                  {props1.cell.row.original.discount_global ? props1.cell.row.original.discount_global : 0}%\r\n                </Tooltip>}>\r\n                  <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                    {props.configGeneral.simbolo_moneda+showPriceWithDecimals(props.configGeneral,props1.cell.row.original.discount_global_amount)}\r\n                  </Badge>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total Balance',\r\n          accessor: 'total_balance',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_balance)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Productos Pagados',\r\n          Cell: props1 => {\r\n            const original = props1.cell.row.original\r\n            if(original.status < 6){\r\n              if(original.is_products_paid){\r\n                return (\r\n                  <Badge variant=\"success\" className=\"font-badge\">\r\n                    {original.total_quantity_products_paid}/{original.total_quantity_products}\r\n                  </Badge>\r\n                )\r\n              }else{\r\n                return (\r\n                  <Badge variant=\"danger\" className=\"font-badge\">\r\n                    {original.total_quantity_products_paid}/{original.total_quantity_products}\r\n                  </Badge>\r\n                )\r\n              }\r\n            }else{\r\n              return ''\r\n            }\r\n          }\r\n        },\r\n        {\r\n          Header: 'Acciones',\r\n          Cell: props1 => {\r\n            const { original } = props1.cell.row\r\n            return (\r\n              <Button variant=\"primary\" block={true} type=\"button\" size=\"sm\" onClick={() => onHideModalAction(original)}>Acciones</Button>\r\n            )\r\n          }\r\n        }\r\n    ]\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    layoutHelpers.toggleCollapsed()\r\n    return () =>{\r\n      cotizacionColumns = null\r\n      layoutHelpers.toggleCollapsed()\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  },[props.id_branch_office])\r\n\r\n  useEffect(() => {\r\n    if(redraw){\r\n\r\n      data_donut_ss_status = {\r\n      \tlabels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      };\r\n\r\n      data_bar_failure_tipology = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Monto acumulado de documentos hechos por mes',\r\n            backgroundColor: 'rgb(15, 13, 74)',\r\n            borderColor: 'rgb(27, 13, 74)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgb(15, 13, 74)',\r\n            hoverBorderColor: 'rgb(27, 13, 74)',\r\n            data: []\r\n          }\r\n        ]\r\n      };\r\n\r\n      data_line_by_year =  {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Cantidad facturada de documentos por años',\r\n            data: [],\r\n            fill: false,\r\n            backgroundColor: 'rgb(125, 81, 52)',\r\n            borderColor: 'rgb(99, 56, 21)',\r\n          },\r\n        ],\r\n      }\r\n\r\n      data_donut_total_status = {\r\n      \tlabels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      };\r\n\r\n      handleDataDonutSsStatus()\r\n    }\r\n  },[redraw])\r\n\r\n  const determinateStatus = status => {\r\n    if(status === 1){\r\n      return 'Pendiente'\r\n    }else if(status === 2){\r\n      return 'Aprobado'\r\n    }else if(status === 3){\r\n      return 'Facturado'\r\n    }else if(status === 4){\r\n      return 'Nota de Venta'\r\n    }else if(status === 5){\r\n      return 'Boleta'\r\n    }else if(status === 6){\r\n      return 'Guía Despacho'\r\n    }else{\r\n      return 'Anulada'\r\n    }\r\n  }\r\n\r\n  const onChange = e => {\r\n    setDataForm({...dataForm,[e.target.name] : e.target.value})\r\n  }\r\n\r\n  const handleDataDonutSsStatus = () => {\r\n    statusCotization.statuses.forEach((v, i) => {\r\n      data_donut_ss_status.labels.push(v.status)\r\n      data_donut_ss_status.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_ss_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_ss_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n    statusCotization.invoice.forEach((v, i) => {\r\n      data_bar_failure_tipology.labels.push(v.mes)\r\n      data_bar_failure_tipology.datasets[0].data.push(v.total)\r\n    });\r\n\r\n    statusCotization.invoiceByYear.forEach((item, i) => {\r\n      data_line_by_year.labels.push(item.year)\r\n      data_line_by_year.datasets[0].data.push(item.total)\r\n    });\r\n\r\n    statusCotization.totalByStatus.forEach((v, i) => {\r\n      data_donut_total_status.labels.push(v.name)\r\n      data_donut_total_status.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_total_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_total_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n    setTimeout(function () {\r\n      setRedraw(false)\r\n    }, 1500);\r\n  }\r\n\r\n  const handleStadistics = () => {\r\n    let objectPost = Object.assign({},dataForm)\r\n    setDisplayFilter(3)\r\n    toast.info(\"Filtrando datos...\")\r\n     axios.post(API_URL+'cotizacion_stadistics',objectPost).then(result => {\r\n      setStatusCotization({...statusCotization,statuses : result.data.statuses, invoice: result.data.invoice, invoiceByYear: result.data.invoiceByYear, totalByStatus: result.data.totalByStatus})\r\n      setTimeout(function () {\r\n        setRedraw(true)\r\n        setDisplayFilter(1)\r\n      }, 1000);\r\n     }).catch(err => {\r\n       setDisplayFilter(1)\r\n       props.tokenExpired(err)\r\n     })\r\n  }\r\n\r\n  const goToGuideDispatch = id => {\r\n    props.history.replace('/quotitation/guide/'+id)\r\n  }\r\n\r\n  const handleDisplayFilter = filter => {\r\n    if(filter == 3){\r\n      setDataForm({date_desde: '', date_hasta: ''})\r\n    }\r\n    setDisplayFilter(filter)\r\n  }\r\n\r\n  const fetchData = () => {\r\n    let objectPost = Object.assign({},dataForm)\r\n    let promises = [\r\n      axios.get(API_URL+'cotizacion'),\r\n      axios.post(API_URL+'cotizacion_stadistics',objectPost),\r\n    ]\r\n    Promise.all(promises).then(result => {\r\n      setCotizacionData(result[0].data)\r\n      setStatusCotization({...statusCotization,statuses : result[1].data.statuses, invoice: result[1].data.invoice, invoiceByYear: result[1].data.invoiceByYear, totalByStatus: result[1].data.totalByStatus})\r\n      setTimeout(function () {\r\n        setRedraw(true)\r\n      }, 1000);\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const updateCotizacion = id => {\r\n    props.history.replace('/quotitation/create_quotitation/'+id)\r\n  }\r\n\r\n  const deleteCotizacion = id => {\r\n    setDisplayLoading(true)\r\n    axios.delete(API_URL+'cotizacion/'+id).then(result => {\r\n      toast.success('Proceso completado')\r\n      fetchData()\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const goToForm = () => {\r\n    props.history.replace('/quotitation/create_quotitation')\r\n  }\r\n\r\n  const printCotizacion = id => {\r\n\r\n    toast.info('Buscando documento, espere por favor...')\r\n    setDisplayLoading(true)\r\n    axios.get(API_URL+'cotizacion_print/'+id+'/0').then(result => {\r\n      window.open(API_URL+'documents/cotizacion/files_pdf/'+result.data.name)\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const printCotizacionNew = id => {\r\n    toast.info('Generando documento, espere por favor...')\r\n    setDisplayLoading(true)\r\n    axios.get(API_URL+'cotizacion_print/'+id+'/0/1').then(result => {\r\n      window.open(API_URL+'documents/cotizacion/files_pdf/'+result.data.name)\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const changeStatus = (id,status) => {\r\n   let objectStatus = {\r\n     status\r\n   }\r\n   toast.info('Cambiando estado, espere por favor...')\r\n   setDisplayLoading(true)\r\n   axios.put(API_URL+'cotizacion_status/'+id,objectStatus).then(result => {\r\n    toast.success('Status Cambiado')\r\n    if(Object.keys(cotizationAction).length){\r\n      setCotizationAction({...cotizationAction, status})\r\n    }\r\n    fetchData()\r\n   }).catch(err => {\r\n    setDisplayLoading(false)\r\n    props.tokenExpired(err)\r\n   })\r\n  }\r\n\r\n  const anulateCotization = (id,status) => {\r\n\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui-edit'>\r\n            <h1>¿Esta seguro?</h1>\r\n            <p className=\"font-alert\">¿Desea realmente realizar esta acción?</p>\r\n            <button className=\"button-alert\"\r\n              onClick={() => {\r\n                confirmAnulateCotization(id,status);\r\n                onClose();\r\n              }}\r\n            >\r\n              Si, Aceptar\r\n            </button>\r\n            <button className=\"button-alert\" onClick={onClose}>No</button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  const confirmAnulateCotization = (id,status) => {\r\n    setDisplayLoading(true)\r\n    axios.delete(API_URL+'cotizacion/'+id).then(result => {\r\n      if(status >= 1 && status <= 2){\r\n        toast.success('Cotización Anulada con éxito')\r\n        if(Object.keys(cotizationAction).length){\r\n          setCotizationAction({...cotizationAction, status: 7})\r\n        }\r\n      }else if(status >= 3 && status <= 6){\r\n        if(Object.keys(cotizationAction).length){\r\n          setCotizationAction({...cotizationAction, status: 2})\r\n        }\r\n        toast.success('Documento anulado con éxito')\r\n      }\r\n      fetchData()\r\n     }).catch(err => {\r\n      setDisplayLoading(false)\r\n       props.tokenExpired(err)\r\n     })\r\n  }\r\n\r\n  const handleModalDetail = () => {\r\n    setIsOpenModalDetail(!isOpenModalDetail)\r\n  }\r\n\r\n  const displayMehotdSale = method => {\r\n    method = parseInt(method)\r\n    if(method === 1){\r\n      return \"Unidad\"\r\n    }else if(method === 2){\r\n      return \"Mayorista\"\r\n    }else{\r\n      return \"(Litros, Kg, Etc..)\"\r\n    }\r\n  }\r\n\r\n  const seeDetailCotization = data => {\r\n    setCotizationDetail(data)\r\n    handleModalDetail()\r\n  }\r\n\r\n  const goToFacturation = id => {\r\n    props.history.replace('/quotitation/invoicing/'+id)\r\n  }\r\n\r\n  const goToNoteSale = id => {\r\n    props.history.replace('/quotitation/sale_note_create/'+id)\r\n  }\r\n\r\n  const goToBillOfSale = id => {\r\n    props.history.replace('/quotitation/bill_create/'+id)\r\n  }\r\n\r\n  const onHideModalAction = (originalCoti = false) => {\r\n    if(!isOpenModalAction && originalCoti){\r\n      setCotizationAction(originalCoti)\r\n    }\r\n    setIsOpenModalAction(!isOpenModalAction)\r\n  }\r\n\r\n  return (\r\n\r\n    <Container fluid>\r\n      <Row>\r\n        <Col sm={6} md={6} lg={6} className=\"text-center\">\r\n          <h4 className=\"title_principal\">Tabla de Cotizaciones</h4>\r\n          <Button block={true} variant=\"success\" onClick={goToForm} size=\"sm\">Nueva Cotización <FaPlusCircle /></Button>\r\n        </Col>\r\n        <Col sm={6} md={6} lg={6} className=\"text-center title_principal\">\r\n          <h4>Total Cotizaciones Realizadas</h4>\r\n          <Badge variant=\"danger\">{cotizacionData.length}</Badge>\r\n        </Col>\r\n      </Row>\r\n      <hr/>\r\n      {displayLoading ? (\r\n        <LoadingComponent />\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} xs={12}>\r\n              <Accordion>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"header_card\">\r\n                    <b>Estadísticas</b> <FaChartLine />\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                      <Row className=\"justify-content-center\">\r\n                        {displayFilter == 1 ? (\r\n                          <Col sm={2} md={2} lg={2}>\r\n                            <Button variant=\"secondary\" type=\"button\" size=\"sm\" block={true} onClick={() => handleDisplayFilter(2)}>Activar Filtros</Button>\r\n                          </Col>\r\n                        ) : displayFilter == 2 ? (\r\n                          <React.Fragment>\r\n                            <InputField\r\n                            type='date'\r\n                            label='Fecha desde'\r\n                            name='date_desde'\r\n                            required={true}\r\n                            messageErrors={[\r\n                            'Requerido*'\r\n                            ]}\r\n                            cols='col-md-3 col-lg-3 col-sm-3'\r\n                            value={dataForm.date_desde}\r\n                            handleChange={onChange}\r\n                            />\r\n                            <InputField\r\n                              type='date'\r\n                              label='Fecha Hasta'\r\n                              name='date_hasta'\r\n                              required={true}\r\n                              messageErrors={[\r\n                              'Requerido*'\r\n                              ]}\r\n                              cols='col-md-3 col-lg-3 col-sm-3'\r\n                              value={dataForm.date_hasta}\r\n                              handleChange={onChange}\r\n                            />\r\n                            <Col sm={3} md={3} lg={3}>\r\n                              <br/>\r\n                              <Button variant=\"danger\" type=\"button\" size=\"sm\" block={true} onClick={handleStadistics}>Buscar</Button>\r\n                            </Col>\r\n                            <Col sm={3} md={3} lg={3}>\r\n                              <br/>\r\n                              <Button variant=\"secondary\" type=\"button\" size=\"sm\" block={true} onClick={() => handleDisplayFilter(1)}>Ocultar Filtros</Button>\r\n                            </Col>\r\n                          </React.Fragment>\r\n\r\n                        ) : (\r\n                          <Col sm={12} md={12} lg={12} className=\"text-center\">\r\n                            <br/>\r\n                            <Image src={require('../assets/img/loading.gif')} width=\"30\" />\r\n                            <br/>\r\n                            Cargando datos...\r\n                          </Col>\r\n                        )}\r\n                      </Row>\r\n                      <br/>\r\n                      <Row>\r\n                        <Col sm={6} md={6} lg={6} style={{height: \"200px\"}}>\r\n                          <Doughnut data={data_donut_ss_status} redraw={redraw} options={optionsBar} />\r\n                        </Col>\r\n                        <Col sm={6} md={6} lg={6}>\r\n                          <table className=\"table table-bordered\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th className=\"text-center\" colSpan=\"2\" style={{backgroundColor: \"rgb(147, 52, 12)\", color: \"white\"}}>Monto acumulado por estados</th>\r\n                              </tr>\r\n                              <tr>\r\n                                <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Estado</th>\r\n                                <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Total</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"text-center\">\r\n                              {Object.keys(statusCotization).length > 0 ? (\r\n                                <React.Fragment>\r\n                                  {statusCotization.statuses.map((v,i) => (\r\n                                    <tr key={i}>\r\n                                      <td>{v.status}</td>\r\n                                      <td>{props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,v.total)}</td>\r\n                                    </tr>\r\n                                  ))}\r\n                                </React.Fragment>\r\n                              ) : (\r\n                                <tr>\r\n                                  <td colSpan=\"3\" className=\"text-center\">Sin registros...</td>\r\n                                </tr>\r\n                              )}\r\n                            </tbody>\r\n                          </table>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col sm={12} md={12} lg={12} style={{height: \"200px\"}}>\r\n                          <Bar\r\n                            data={data_bar_failure_tipology}\r\n                            options={optionsBar}\r\n                            redraw={redraw}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <br/>\r\n                      <Row>\r\n                        <Col sm={6} md={6} lg={6} style={{height: \"230px\"}}>\r\n                          <table className=\"table table-bordered\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th className=\"text-center\" colSpan=\"2\" style={{backgroundColor: \"rgb(147, 52, 12)\", color: \"white\"}}>Total cotizaciones realizadas</th>\r\n                              </tr>\r\n                              <tr>\r\n                                <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Estado</th>\r\n                                <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Total</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"text-center\">\r\n                              {Object.keys(statusCotization).length > 0 ? (\r\n                                <React.Fragment>\r\n                                  {statusCotization.totalByStatus.map((v,i) => (\r\n                                    <tr key={i}>\r\n                                      <td>{v.name}</td>\r\n                                      <td>{v.total}</td>\r\n                                    </tr>\r\n                                  ))}\r\n                                </React.Fragment>\r\n                              ) : (\r\n                                <tr>\r\n                                  <td colSpan=\"3\" className=\"text-center\">Sin registros...</td>\r\n                                </tr>\r\n                              )}\r\n                            </tbody>\r\n                          </table>\r\n                        </Col>\r\n                        <Col sm={6} md={6} lg={6} style={{height: \"200px\"}} className=\"text-center\">\r\n                          <Doughnut data={data_donut_total_status} redraw={redraw} options={optionsBar} />\r\n                        </Col>\r\n                      </Row>\r\n                      <br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n                      <Row>\r\n                        <Col sm={12} md={12} lg={12} style={{height: \"200px\"}}>\r\n                          <Line data={data_line_by_year} options={options_line} />\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} xs={12}>\r\n              <Table columns={cotizacionColumns} data={cotizacionData}/>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n      <Modal\r\n        onHide={handleModalDetail}\r\n        show={isOpenModalDetail}\r\n        size=\"xl\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        >\r\n        <Modal.Header closeButton className=\"header_dark\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Detalles de la Cotización N° {Object.keys(cotizationDetail).length > 0 ? cotizationDetail.ref : ''}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Registrador</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Rut</th>\r\n                    <th className=\"text-center\">Dirección</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">País</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.business_name_transmitter}</td>\r\n                      <td>{cotizationDetail.rut_transmitter}</td>\r\n                      <td>{cotizationDetail.address_transmitter}</td>\r\n                      <td>{cotizationDetail.email_transmitter}</td>\r\n                      <td>{cotizationDetail.phone_transmitter}</td>\r\n                      <td>{cotizationDetail.country_transmitter}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Cliente</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Razon Social / Nombre</th>\r\n                    <th className=\"text-center\">Rut</th>\r\n                    <th className=\"text-center\">Dirección</th>\r\n                    <th className=\"text-center\">Ciudad</th>\r\n                    <th className=\"text-center\">Comuna</th>\r\n                    <th className=\"text-center\">Giro</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.business_name_client}</td>\r\n                      <td>{cotizationDetail.rut_client}</td>\r\n                      <td>{cotizationDetail.address_client}</td>\r\n                      <td>{cotizationDetail.city_client}</td>\r\n                      <td>{cotizationDetail.comuna_client}</td>\r\n                      <td>{cotizationDetail.spin_client}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Contacto</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.name_contact}</td>\r\n                      <td>{cotizationDetail.phone_contact}</td>\r\n                      <td>{cotizationDetail.email_contact}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Vendedor</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.name_seller}</td>\r\n                      <td>{cotizationDetail.phone_seller}</td>\r\n                      <td>{cotizationDetail.email_seller}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n              <h4 className=\"title_principal text-center\">Productos de la Cotización</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Categoria</th>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Descripción</th>\r\n                    <th className=\"text-center\">Cantidad</th>\r\n                    <th className=\"text-center\">Precio</th>\r\n                    <th className=\"text-center\">Descuento</th>\r\n                    <th className=\"text-center\">Método de Venta</th>\r\n                    <th className=\"text-center\">Neto</th>\r\n                    <th className=\"text-center\">Total</th>\r\n                    <th className=\"text-center\">Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <React.Fragment>\r\n                      {cotizationDetail.products.map((v,i) => (\r\n                        <tr>\r\n                          <td>{v.category}</td>\r\n                          <td>{v.name_product}</td>\r\n                          <td>{v.description}</td>\r\n                          <td>{v.quantity}</td>\r\n                          <td>{props.configGeneral.simbolo_moneda}{formatNumber(v.price,2,',','.')}</td>\r\n                          <td>{v.discount}</td>\r\n                          <td>{displayMehotdSale(v.method_sale)}</td>\r\n                          <td>{v.is_neto ? 'Neto' : \"Iva\"}</td>\r\n                          <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(v.total,2,',','.')}</Badge></td>\r\n                          <td>{v.status == 1 ? \"Pendiente\" : v.status == 2 ? \"Pagado\" : \"Anulado\"}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"\">\r\n              <h4 className=\"title_principal text-center\">Gastos de la Cotización</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Descripción</th>\r\n                    <th className=\"text-center\">Monto</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <React.Fragment>\r\n                      {cotizationDetail.gastos.map((v,i) => (\r\n                        <tr>\r\n                          <td>{v.description}</td>\r\n                          <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(v.amount,2,',','.')}</Badge></td>\r\n                        </tr>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          {Object.keys(cotizationDetail).length > 0 && cotizationDetail.referencias && cotizationDetail.referencias.length > 0 ? (\r\n            <Row>\r\n              <Col sm={12} md={12} lg={12} className=\"\">\r\n                <h4 className=\"title_principal text-center\">Referencias de la Cotización</h4>\r\n                <br/>\r\n                <table className=\"table table-striped table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-center\">Tipo de Documento</th>\r\n                      <th className=\"text-center\">Referencia Cotiz.</th>\r\n                      <th className=\"text-center\">Ind</th>\r\n                      <th className=\"text-center\">Fecha Ref.</th>\r\n                      <th className=\"text-center\">Razón de Referencia</th>\r\n                      <th className=\"text-center\">Tipo de Código</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"text-center\">\r\n                    {Object.keys(cotizationDetail).length > 0 ? (\r\n                      <React.Fragment>\r\n                        {cotizationDetail.referencias.map((v,i) => (\r\n                          <tr>\r\n                            <td>{v.type_document}</td>\r\n                            <td>{v.ref_cotizacion}</td>\r\n                            <td>{v.ind}</td>\r\n                            <td>{v.date_ref ? moment(v.date_ref).tz('America/Santiago').format('DD-MM-YYYY') : ''}</td>\r\n                            <td>{v.reason_ref}</td>\r\n                            <td>{v.type_code}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </React.Fragment>\r\n                    ) : ''}\r\n                  </tbody>\r\n                </table>\r\n              </Col>\r\n            </Row>\r\n          ) : ''}\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"\">\r\n              <h4 className=\"title_principal text-center\">Totales</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Neto</th>\r\n                    <th className=\"text-center\">Iva</th>\r\n                    <th className=\"text-center\">Gastos</th>\r\n                    <th className=\"text-center\">Descuento Global</th>\r\n                    <th className=\"text-center\">Total Balance</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_product,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_iva,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_gastos,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.discount_global_amount,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_balance,2,',','.')}</Badge></td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              {Object.keys(cotizationDetail).length > 0 ? (\r\n                <h5>Mostrar solo los Totales: <Badge variant=\"primary\" className=\"font-badge\">{cotizationDetail.total_with_iva ? 'No' : \"Si\"}</Badge></h5>\r\n              ) : ''}\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button size=\"md\" variant=\"info\" onClick={handleModalDetail}>cerrar</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <ModalActionsCotization\r\n        isShow={isOpenModalAction}\r\n        onHide={onHideModalAction}\r\n        cotization={cotizationAction}\r\n        updateCotizacion={updateCotizacion}\r\n        seeDetailCotization={seeDetailCotization}\r\n        printCotizacion={printCotizacion}\r\n        printCotizacionNew={printCotizacionNew}\r\n        changeStatus={changeStatus}\r\n        anulateCotization={anulateCotization}\r\n        goToFacturation={goToFacturation}\r\n        goToNoteSale={goToNoteSale}\r\n        goToBillOfSale={goToBillOfSale}\r\n        goToGuideDispatch={goToGuideDispatch}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nCotizacionSearchPage.defaultProps = {\r\n  configGeneral: JSON.parse(localStorage.getItem('configGeneral')),\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    id_branch_office : state.enterpriseSucursal.id_branch_office,\r\n    id_enterprise : state.enterpriseSucursal.id_enterprise,\r\n  }\r\n}\r\n\r\nCotizacionSearchPage.propTypes ={\r\n  id_branch_office: PropTypes.string.isRequired,\r\n  id_enterprise : PropTypes.string.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(CotizacionSearchPage)\r\n"],"sourceRoot":""}