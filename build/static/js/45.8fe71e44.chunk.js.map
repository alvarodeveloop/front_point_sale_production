{"version":3,"sources":["components/Table.jsx","components/input/InputComponentRef.jsx","pages/ListProductPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","pageSizeHandler","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","pageSize","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","position","getCellProps","autoRemove","val","Table","InputFieldRef","forwardRef","props","ref","classFormGroup","cols","Group","Label","label","Control","name","handleChange","required","readOnly","readonly","step","onKeyUp","handleKeyUp","autoComplete","Feedback","messageErrors","v","replace","as","multiple","children","listColumns","productArrayCopy","productArrayCopy2","connect","id_branch_office","enterpriseSucursal","id_enterprise","configGeneral","configs","config","useState","listData","setListData","displayLoading","setDisplayLoading","validate","setValidated","products","setProducts","productsDetail","setProductsDetail","isShowModal","setIsShowModal","tax","configStore","setConfigStore","status","dataForm","setDataForm","inputRef","useRef","useEffect","fetchData","Header","accessor","props1","accesor","details","Cell","original","placement","overlay","name_product","price","title","drop","block","Item","updateListHandler","addDetailHandler","destroyListHandler","productColumns","price1","onChangePriceTableHandler","parseFloat","showPriceWithDecimals","simbolo_moneda","onChangeProductDetailHadler","checked","find","id_product","promises","axios","get","API_URL","push","Promise","all","then","result","catch","err","tokenExpired","current","focus","history","confirmAlert","customUI","onClose","confirmDestroyHandler","delete","toast","success","currentData","onChangeHandler","confirmSubmitHandler","objectPost","Object","assign","productsList","index","route","put","post","cancelEdition","clearData","onHideModalHandler","selectAllProductsHandler","arrayId","forEach","parseInt","product","persist","fluid","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","noValidate","validated","sm","md","lg","Check","show","onHide","aria-labelledby","centered","closeButton","Title","Body","xl","Footer"],"mappings":"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","file":"static/js/45.8fe71e44.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor, pageSizeHandler }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0, pageSize : pageSizeHandler[0] },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table_responsive_eddit\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {pageSizeHandler.map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td style={{position: \"relative\"}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {pageSizeHandler.map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor,pageSizeHandler}) => {\r\n  pageSizeHandler = pageSizeHandler ? pageSizeHandler : [10, 20, 30, 40, 50]; \r\n  return (\r\n    <Styles>\r\n      <DataTable pageSizeHandler={pageSizeHandler} data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n  pageSizeHandler : PropTypes.array,\r\n}\r\n\r\nexport default Table\r\n","import React, { useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\nimport './InputComponent.css'\r\n\r\nconst InputFieldRef = React.forwardRef( (props,ref) => {\r\n\r\n  const classFormGroup = props.cols ? props.cols : \"col-md-6 col-sm-6\"\r\n  if(props.type !== \"select\" && props.type !== \"textarea\"){\r\n    return (\r\n      <Form.Group className={classFormGroup}>\r\n        <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n        <Form.Control\r\n          ref={ref}\r\n          id={props.id ? props.id : props.name}\r\n          type={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          step={props.step ? props.step : ''}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          className={props.className ? props.className+\" form-control-sm mainBorder\" : \"form-control-sm mainBorder\"}\r\n          style={props.style ? props.style : {}}\r\n          autoComplete={props.autoComplete ? props.autoComplete : 'xxx'}\r\n          />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {\r\n            props.messageErrors.map((v,i) => {\r\n              return <span key={i} className=\"error-input\">{v.replace(/[*]$/g,'')}</span>\r\n            })\r\n          }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"select\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n        <Form.Control\r\n          id={props.id ? props.id : props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          required={props.required}\r\n          multiple={props.multiple ? props.multiple : false}\r\n          ref={ref ? ref : null}\r\n          className={props.className ? props.className+\" form-control-sm mainBorder\" : \"form-control-sm mainBorder\"}\r\n          style={props.style ? props.style : {}}\r\n          autoComplete={props.autoComplete ? props.autoComplete : 'xxx'}\r\n        >\r\n          {props.children}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {\r\n            props.messageErrors.map((v,i) => {\r\n              return <span key={i} className=\"error-input\">{v.replace(/[*]$/g,'')}</span>\r\n            })\r\n          }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"textarea\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n        <Form.Control\r\n          id={props.id ? props.id : props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          rows={props.rows ? props.rows : 2}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          ref={ref ? ref : null}\r\n          className={props.className ? props.className+\" form-control-sm mainBorder\" : \"form-control-sm mainBorder\"}\r\n          style={props.style ? props.style : {}}\r\n          autoComplete={props.autoComplete ? props.autoComplete : 'xxx'}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {\r\n            props.messageErrors.map((v,i) => {\r\n              return <span key={i} className=\"error-input\">{v.replace(/[*]$/g,'')}</span>\r\n            })\r\n          }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }\r\n\r\n})\r\n\r\nInputFieldRef.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleKeyUp: PropTypes.func,\r\n  value: PropTypes.any,\r\n  cols: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  errors: PropTypes.array,\r\n  messageErrors: PropTypes.array,\r\n  readonly: PropTypes.bool,\r\n  multiple: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  steps: PropTypes.string,\r\n  autoComplete: PropTypes.bool,\r\n}\r\n\r\nexport default InputFieldRef\r\n","import React, { useMemo, useState, useEffect, useRef, useCallback } from 'react';\r\nimport { OverlayTrigger, Tooltip, Modal, Form, Badge, Container, Row, Col, Button, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport LoadingComponent from 'components/LoadingComponent';\r\nimport Table from 'components/Table';\r\nimport axios from 'axios';\r\nimport { API_URL } from 'utils/constants'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { toast } from 'react-toastify';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport { connect } from 'react-redux'\r\nimport { showPriceWithDecimals, formatNumber } from 'utils/functions'\r\nimport 'styles/components/modalComponents.css'\r\n\r\nlet listColumns = [];\r\nlet productArrayCopy = []; // array para limpiar la data cuando haga post y los productos vuelvan a ser los productos originales\r\nlet productArrayCopy2 = []; // arreglo para modificar los precios y usarlos en el forEach del post\r\n\r\nconst ListProductPage = (props) =>{\r\n  const [listData, setListData] = useState([]);\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n  const [validate, setValidated] = useState(false)\r\n  const [products, setProducts] = useState([])\r\n  const [productsDetail, setProductsDetail] = useState([])\r\n  const [isShowModal, setIsShowModal] = useState(false)\r\n  const [configStore, setConfigStore] = useState({tax : 19})\r\n  const [ dataForm, setDataForm ] = useState({\r\n    name : \"\",\r\n    status : true,\r\n    id : \"\"\r\n  }) \r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if(!displayLoading){\r\n      setDisplayLoading(true)\r\n    }\r\n    fetchData(true);\r\n  },[props.id_branch_office,props.id_enterprise])\r\n\r\n  listColumns = useMemo(() => {\r\n    return [\r\n      {\r\n        Header : \"Nombre\",\r\n        accessor: \"name\"\r\n      },\r\n      {\r\n        Header : \"Estado\",\r\n        accessor: props1 => props1.status ? [\"Activa\"] : [\"Desactivada\"]\r\n      },\r\n      {\r\n        Header : \"Cantidad Productos\",\r\n        accesor: props1 => [props1.details.length],\r\n        Cell : props1 => {\r\n          const { original } = props1.cell.row\r\n          return (\r\n            <OverlayTrigger placement={'right'} overlay={\r\n              <Tooltip id=\"tooltip-disabled2\">\r\n                {original.details.map((v,i) => (\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                      <b>Producto: </b> \r\n                      {v.products.name_product}\r\n                      <br/>\r\n                      <b>Precio: </b>{v.price}\r\n                    </li>\r\n                  </ul>\r\n                ))}\r\n              </Tooltip>}>\r\n                <Badge variant=\"danger\" className=\"font-badge\">{original.details.length}</Badge>\r\n              </OverlayTrigger> \r\n          )\r\n        }\r\n      },\r\n      {\r\n        Header : \"Acciones\",\r\n        Cell : props1 => {\r\n          const { original } = props1.cell.row\r\n          return ( \r\n                <DropdownButton size=\"sm\" id={'drop'+original.id} title=\"Seleccione\" drop=\"left\" block=\"true\">\r\n                  <Dropdown.Item onClick={() => {updateListHandler(original)}}>Modificar</Dropdown.Item>\r\n                  <Dropdown.Item onClick={() => {addDetailHandler(original)}}>Agregar Detalles</Dropdown.Item>\r\n                  <Dropdown.Item onClick={() => {destroyListHandler(original)}}>Eliminar</Dropdown.Item>\r\n                </DropdownButton>\r\n          )\r\n        }\r\n      }\r\n    ]\r\n  },[])\r\n\r\n  let productColumns = useMemo(() => {\r\n    return [\r\n      {\r\n        Header : \"Producto\",\r\n        accessor : \"name_product\"\r\n      },\r\n      {\r\n        Header : \"Precio\",\r\n        accessor : props1 => [props1.price],\r\n        Cell : props1 => {\r\n          const original = props1.cell.row.original;\r\n          let price1 = original.price\r\n          return (\r\n            <input \r\n            className=\"form-control text-center\" \r\n            type=\"text\" \r\n            value={price1}\r\n            onChange={(e) => onChangePriceTableHandler(props1.row.id,e,original.id)} />\r\n          ) \r\n        }\r\n      },\r\n      {\r\n        Header : \"Precio con iva\",\r\n        accessor : props1 => [ (( parseFloat(props1.price) * parseFloat(configStore.tax)) / 100) + parseFloat(props1.price)],\r\n        Cell : props1 => {\r\n          const { original } = props1.cell.row\r\n          return (<Badge variant=\"danger\" className=\"font-badge\">{showPriceWithDecimals(props.configGeneral,(( parseFloat(original.price) * parseFloat(configStore.tax)) / 100) + parseFloat(original.price),2,\",\",\".\")} {props.configGeneral ? props.configGeneral.simbolo_moneda : \"\" }</Badge>)\r\n        }\r\n      },\r\n      {\r\n        Header : \"Seleccionar\",\r\n        Cell : props1 => {\r\n          const { original } = props1.cell.row\r\n          return (\r\n            <div>\r\n              <label className=\"form-check\">\r\n                <input onChange={onChangeProductDetailHadler} className=\"form-check-input\" type=\"checkbox\" value={original.id} checked={productsDetail.find(v => v.id_product === original.id)} />\r\n              </label>\r\n            </div>\r\n          )\r\n        }\r\n\r\n      }\r\n    ];\r\n  }, [productsDetail])\r\n  \r\n\r\n  const fetchData = (type = false) => {\r\n    let promises = [\r\n      axios.get(API_URL+\"listProduct\"),\r\n    ]\r\n    if(type){\r\n      promises.push(\r\n        axios.get(API_URL+\"product\"),\r\n        axios.get(API_URL+\"config_store\"),\r\n      )\r\n    }\r\n    Promise.all(promises).then(result => {\r\n      setListData(result[0].data);\r\n      if(type){\r\n        setProducts(result[1].data);\r\n        productArrayCopy = result[1].data;\r\n        productArrayCopy2 = result[1].data;\r\n        setConfigStore(result[2].data)\r\n      }\r\n      setDisplayLoading(false);\r\n    }).catch(err => {\r\n      setDisplayLoading(false);\r\n      props.tokenExpired(err);\r\n    })\r\n  }\r\n\r\n  const updateListHandler = (data) => {\r\n    setDataForm({...dataForm, name: data.name, status : data.status, id: data.id})\r\n    inputRef.current.focus()\r\n  }\r\n\r\n  const addDetailHandler = (data) => {\r\n    props.history.replace(\"/product/listProduct/\"+data.id)\r\n  }\r\n  \r\n  const destroyListHandler = (data) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui-edit'>\r\n            <h1>¿Esta seguro?</h1>\r\n            <p className=\"font-alert\">¿Desea realmente borrar este registro?</p>\r\n            <button className=\"button-alert\"\r\n              onClick={() => {\r\n                confirmDestroyHandler(data.id);\r\n                onClose();\r\n              }}\r\n            >\r\n              Si, Aceptar\r\n            </button>\r\n            <button className=\"button-alert\" onClick={onClose}>No</button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  const confirmDestroyHandler = (id) => {\r\n    setDisplayLoading(true)\r\n    axios.delete(API_URL+\"listProduct/\"+id).then(result => {\r\n      toast.success(`Lista eliminada con éxito`);\r\n      setListData(currentData => currentData.filter(v => v.id != id));\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      props.tokenExpired(err)\r\n      setDisplayLoading(false)\r\n    })\r\n  }\r\n\r\n  const onChangeHandler = e => {\r\n    setDataForm({...dataForm, [e.target.name] : e.target.name === \"status\" ? e.target.checked : e.target.value})\r\n  }\r\n\r\n  const onSubmitHanldle = e => {\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n    if(dataForm.id){\r\n      confirmSubmitHandler();\r\n    }else{\r\n      onHideModalHandler();\r\n    }\r\n  }\r\n\r\n  const confirmSubmitHandler = () => {\r\n    \r\n    let objectPost = Object.assign({},dataForm,{\r\n      productsList : productsDetail.map(v => {\r\n        v.price = products[v.index].price;\r\n        return v;\r\n      })\r\n    })\r\n    \r\n    let route = objectPost.id ? API_URL + \"listProduct/\"+objectPost.id : API_URL + \"listProduct\";\r\n    let promise  = objectPost.id ? axios.put(route,objectPost) : axios.post(route,objectPost);\r\n    promise.then(result => {\r\n      toast.success(`Lista ${objectPost.id ? \"modificada\" : \"creada\"} con éxito`);\r\n      if(objectPost.id){\r\n        cancelEdition();\r\n      }else{\r\n        clearData();\r\n      }\r\n      fetchData();\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      props.tokenExpired(err)\r\n      setDisplayLoading(false)\r\n    })\r\n  }\r\n\r\n  const clearData = () => {\r\n    setDataForm({\r\n      name : \"\",\r\n      status : true,\r\n      id : \"\"\r\n    })\r\n    setProductsDetail([])\r\n    setProducts(productArrayCopy)\r\n    onHideModalHandler()\r\n    inputRef.current.focus();\r\n  }\r\n\r\n  const cancelEdition = () => {\r\n    setDataForm({\r\n      name : \"\",\r\n      status : true,\r\n      id : \"\"\r\n    })\r\n    inputRef.current.focus();\r\n  }\r\n\r\n  const selectAllProductsHandler = type => {\r\n    if(type){\r\n      let arrayId = [];\r\n      products.forEach((v,i) => arrayId.push( {id_product : parseInt(v.id) , price : v.price, index: i} ));\r\n      setProductsDetail(arrayId)\r\n    }else{\r\n      setProductsDetail([])\r\n    }\r\n  }\r\n\r\n  const onChangePriceTableHandler = (index,e,id) => {\r\n    let val = e.target.value.replace(/[^0-9 .]/g,\"\");\r\n    productArrayCopy2[index].price = val;\r\n    /*setProducts(currentData => {\r\n      let currentArray = [...currentData]\r\n      currentArray[index].price = val\r\n      return currentArray\r\n    })*/\r\n  }\r\n\r\n  const onChangeProductDetailHadler = e => {\r\n    e.persist()\r\n    if(e.target.checked){\r\n      let product;\r\n      productArrayCopy.forEach((v,i) => {\r\n        if(v.id == e.target.value){\r\n          product = {id_product: parseInt(e.target.value), price: v.price, index: i}\r\n        }\r\n      });\r\n      setProductsDetail(currentData => [...currentData, product ]);\r\n    }else{\r\n      setProductsDetail(currentData => currentData.filter(v => v.id_product !== parseInt(e.target.value)));\r\n    }\r\n  }\r\n\r\n  const onHideModalHandler = () => {\r\n    setIsShowModal(!isShowModal);\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      {displayLoading ? (\r\n        <LoadingComponent />\r\n      ) : (\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col className=\"text-center\">\r\n                <h4 className=\"title_principal\">Lista de Productos</h4>\r\n              </Col>\r\n              <Col className=\"text-center\">\r\n              <h4 className=\"title_principal\">Total Listas <Badge variant=\"danger\" className=\"font-badge\">{listData.length}</Badge></h4>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form onSubmit={onSubmitHanldle} noValidate validated={validate}>\r\n                  <Row className=\"justify-content-center\">\r\n                    <InputFieldRef\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      ref={inputRef}\r\n                      label=\"Nombre de la lista\"\r\n                      required={true}\r\n                      value={dataForm.name}\r\n                      handleChange={onChangeHandler}\r\n                      messageErrors = {[\r\n                        'Requerido*'\r\n                      ]}\r\n                      cols=\"col-md-4 col-sm-4 col-lg-4\"\r\n                    />\r\n                    <Col sm={4} md={4} lg={4}>\r\n                      <Row>\r\n                        <Col className=\"text-center\">\r\n                          <Form.Label>Status</Form.Label>\r\n                        </Col>\r\n                      </Row>\r\n                      <Form.Group className=\"text-center\">\r\n                        <Form.Check\r\n                          name=\"status\"\r\n                          type={'checkbox'}\r\n                          id={`radio-5`}\r\n                          label={\"Activo\"}\r\n                          required={false}\r\n                          checked={dataForm.status}\r\n                          onChange={onChangeHandler}\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col sm={4} md={4} lg={4}>\r\n                      <Button variant=\"danger\" block={true} size=\"sm\" type=\"submit\">Crear Lista <FaSave /></Button>\r\n                    </Col>\r\n                    {dataForm.id ? (\r\n                      <Col sm={4} md={4} lg={4}>\r\n                        <Button variant=\"secondary\" block={true} size=\"sm\" type=\"button\" onClick={cancelEdition}>Cancelar Edición</Button>\r\n                      </Col>\r\n                    ) : \"\"}\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Table columns={listColumns} data={listData} />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Modal\r\n        show={isShowModal}\r\n        onHide={onHideModalHandler}\r\n        size=\"xl\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton className=\"header_dark\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Productos disponibles para la lista\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row className=\"justify-content-center\">\r\n            <Col sm={4} md={4} lg={4} xl={4}>\r\n              <Button block={true} variant=\"primary\" size=\"sm\" onClick={() => selectAllProductsHandler(true)}>Seleccionar todos</Button>\r\n            </Col>\r\n            <Col sm={4} md={4} lg={4} xl={4}>\r\n              <Button block={true} variant=\"secondary\" size=\"sm\" onClick={() => selectAllProductsHandler(false)}>Deseleccionar todos</Button>\r\n            </Col>\r\n            <Col sm={4} md={4} lg={4} xl={4}>\r\n              <Button variant=\"danger\" size=\"sm\" block={true} type=\"button\" onClick={confirmSubmitHandler}>Guardar</Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Table columns={productColumns} data={products} pageSizeHandler={[500,1000]} />\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" size=\"md\" onClick={onHideModalHandler}>Cerrar</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  id_branch_office : state.enterpriseSucursal.id_branch_office,\r\n  id_enterprise : state.enterpriseSucursal.id_enterprise,\r\n  configGeneral : state.configs.config\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListProductPage)"],"sourceRoot":""}