{"version":3,"sources":["components/Table.jsx","components/TableEarningExpensiveComponent.jsx","components/TooltipComponent.jsx","components/ReportDetailAccount.jsx","components/ReportDetailCenterCoste.jsx","pages/FlowCashReportDetailPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","pageSizeHandler","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","pageSize","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","position","getCellProps","autoRemove","val","Table","columns_table","TableEarningExpensiveComponent","props","useEffect","Header","accessor","props1","formatNumber","amount","isAccount","isReport","center_coste","account_name","centerCoste","name","account","date_execution","moment","format","is_recurrent","Cell","original","document_1","Button","downloadDocument","document_2","doc","axios","get","API_URL","responseType","then","result","FileSaver","saveAs","catch","err","response","toast","error","message","TooltipComponent","OverlayTrigger","placement","location","overlay","Tooltip","title","children","propsTypes","PropTypes","string","isRequired","object","columns_account","ReportDetailAccount","useState","dataDetailAccount","setDataDetailAccount","dataModalEarningExpensive","setDataModalEarningExpensive","years","setYears","yearCombo","setYearCombo","isOpenModal","setIsOpenModal","displayLoading","setDisplayLoading","handleFetchData","mes1","word","handleDisplayData","Badge","mes2","mes3","mes4","mes5","mes6","mes7","mes8","mes9","mes10","mes11","mes12","total","dataOriginal","month","yearValueTemporal","document","getElementById","route","info","handleIsOpenModal","year","handleGetDataDetail","console","log","yearValue","Container","LoadingComponent","Row","inputSelect","handleChange","v","Col","sm","md","lg","xs","block","wb","xlsx","book_new","bodyTable","Props","Title","Subject","Author","CreatedDate","SheetNames","push","concat","total_ingreso","ingresos","forEach","parseFloat","total_egreso","egresos","ingresoEgresoArray","ingreso_menos_egreso","unshift","totalesArray","total_final","ws","aoa_to_sheet","Sheets","wbout","bookType","datos","s2ab","Blob","Modal","show","onHide","aria-labelledby","centered","closeButton","Body","Tabs","defaultActiveKey","Tab","eventKey","Footer","defaultProps","required","label","messageErrors","cols","ReportDetailCenterCoste","dataDetailCenterCoste","setDataDetailCenterCoste","center_coste_name","FlowCashReportDetailPage"],"mappings":"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","file":"static/js/42.bf30d879.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor, pageSizeHandler }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0, pageSize : pageSizeHandler[0] },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table_responsive_eddit\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {pageSizeHandler.map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td style={{position: \"relative\"}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {pageSizeHandler.map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor,pageSizeHandler}) => {\r\n  pageSizeHandler = pageSizeHandler ? pageSizeHandler : [10, 20, 30, 40, 50]; \r\n  return (\r\n    <Styles>\r\n      <DataTable pageSizeHandler={pageSizeHandler} data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n  pageSizeHandler : PropTypes.array,\r\n}\r\n\r\nexport default Table\r\n","import React, { useMemo, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Table from 'components/Table'\r\nimport { flowCashAccountModal, flowCashCenterModal } from 'utils/columns/flowCash'\r\nimport * as moment from 'moment-timezone'\r\nimport {\r\n  FaCloudDownloadAlt\r\n} from 'react-icons/fa'\r\nimport FileSaver from 'file-saver'\r\nimport { API_URL } from 'utils/constants'\r\nimport {\r\n  Button\r\n} from 'react-bootstrap'\r\nimport { formatNumber } from 'utils/functions'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nlet columns_table = []\r\nconst TableEarningExpensiveComponent = props => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      columns_table = []\r\n    }\r\n  },[])\r\n\r\n  useMemo(() => {\r\n    columns_table = [\r\n      {\r\n        Header: 'Nombre',\r\n        accessor: 'name'\r\n      },\r\n      {\r\n        Header: 'Descripción',\r\n        accessor: 'description'\r\n      },\r\n      {\r\n        Header: 'Monto',\r\n        accessor: props1 => [formatNumber(props1.amount,2,',','.')],\r\n      },\r\n      {\r\n        Header: props.isAccount ? 'Centro de Costros' : 'Cuenta',\r\n        accessor: props1 => {\r\n          if(props.isReport){\r\n            if(props.isAccount){\r\n              return [props1.center_coste]\r\n            }else{\r\n              return [props1.account_name]\r\n            }\r\n          }else{\r\n            if(props.isAccount){\r\n              return [props1.centerCoste.name]\r\n            }else{\r\n              return [props1.account.account_name]\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'Fecha de Ejecución',\r\n        accessor: props1 => props1.date_execution ? [moment(props1.date_execution).format('DD-MM-YYYY')] : ['No posee']\r\n      },\r\n      {\r\n        Header: 'Es recurrente',\r\n        accessor: props1 => [props1.is_recurrent ? 'Si' : 'No']\r\n      },\r\n      {\r\n        Header: 'Documento1',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.document_1){\r\n            return (\r\n              <Button size=\"sm\" variant=\"link\" onClick={() => downloadDocument(original.document_1) }>Descargar <FaCloudDownloadAlt /> </Button>\r\n            )\r\n          }else{\r\n            return 'No posee'\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'Documento2',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.document_2){\r\n            return (\r\n              <Button size=\"sm\" variant=\"link\" onClick={() => downloadDocument(original.document_2) }>Descargar <FaCloudDownloadAlt /> </Button>\r\n            )\r\n          }else{\r\n            return 'No posee'\r\n          }\r\n        }\r\n      },\r\n    ]\r\n  },[])\r\n\r\n  const downloadDocument = doc => {\r\n    axios.get(API_URL+'flow_cash_doc_download/'+doc,{\r\n      responseType: 'blob'\r\n    }).then(result => {\r\n      FileSaver.saveAs(result.data,doc);\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Table data={props.data} columns={columns_table} />\r\n  )\r\n}\r\n\r\nTableEarningExpensiveComponent.propTypes = {\r\n  isAccount : PropTypes.bool.isRequired,\r\n  isReport: PropTypes.bool,\r\n  data : PropTypes.array.isRequired\r\n}\r\n\r\nexport default TableEarningExpensiveComponent\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nconst TooltipComponent = props => {\r\n  return (\r\n    <OverlayTrigger placement={props.location ? props.location : 'top'} overlay={<Tooltip id=\"tooltip-disabled\">{ props.title }</Tooltip>}>\r\n      { props.children }\r\n    </OverlayTrigger>\r\n\r\n  )\r\n}\r\n\r\nTooltipComponent.propsTypes = {\r\n  location: PropTypes.string,\r\n  title : PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TooltipComponent\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  Tab,\r\n  Tabs,\r\n  Badge\r\n} from 'react-bootstrap'\r\nimport {\r\n  FaRegFileExcel\r\n} from 'react-icons/fa'\r\nimport axios from 'axios'\r\nimport InputField from 'components/input/InputComponent'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport { formatNumber, s2ab } from 'utils/functions'\r\nimport * as moment from 'moment-timezone'\r\nimport { saveAs } from 'file-saver'\r\nimport * as xlsx from 'xlsx'\r\nimport Table from 'components/Table'\r\nimport TooltipComponent from 'components/TooltipComponent'\r\nimport TableEarningExpensiveComponent from 'components/TableEarningExpensiveComponent'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\nlet columns_account = []\r\n\r\nconst ReportDetailAccount = props => {\r\n\r\n  const [dataDetailAccount,setDataDetailAccount] = useState(null)\r\n  const [dataModalEarningExpensive,setDataModalEarningExpensive] = useState(null)\r\n  const [years, setYears] = useState([])\r\n  const [yearCombo, setYearCombo] = useState('')\r\n  const [isOpenModal,setIsOpenModal] = useState(false)\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n    handleFetchData()\r\n    return () => {\r\n      columns_account = []\r\n    }\r\n  },[])\r\n\r\n  useMemo(() => {\r\n    columns_account = [\r\n      {\r\n        Header: 'CUENTA',\r\n        accessor: 'account_name'\r\n      },\r\n      {\r\n        Header: 'MES 1',\r\n        accessor: 'mes1',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes1 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,1)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes1,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes1,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 2',\r\n        accessor: 'mes2',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes2 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,2)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes2,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes2,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 3',\r\n        accessor: 'mes3',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes3 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,3)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes3,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes3,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 4',\r\n        accessor: 'mes4',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes4 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,4)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes4,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes4,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 5',\r\n        accessor: 'mes5',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes5 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,5)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes5,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes5,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 6',\r\n        accessor: 'mes6',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes6 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,6)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes6,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes6,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 7',\r\n        accessor: 'mes7',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes7 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,7)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes7,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes7,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 8',\r\n        accessor: 'mes8',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes8 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,8)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes8,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes8,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 9',\r\n        accessor: 'mes9',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes9 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,9)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes9,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes9,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 10',\r\n        accessor: 'mes10',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes10 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,10)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes10,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes10,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 11',\r\n        accessor: 'mes11',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes11 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,11)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes11,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes11,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 12',\r\n        accessor: 'mes12',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes12 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,12)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes12,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes12,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'TOTALES',\r\n        accessor: 'total',\r\n        Cell: props1 => {\r\n          return (\r\n            <Badge style={{backgroundColor: 'rgb(36, 49, 94)', color: 'white'}}>{formatNumber(props1.cell.row.original.total,2,',','.')}</Badge>\r\n          )\r\n        }\r\n      },\r\n    ]\r\n  },[])\r\n\r\n  const handleChange = e => {\r\n    let val = e.target.value\r\n    setYearCombo(val)\r\n    handleGetDataDetail(val)\r\n  }\r\n\r\n  const handleDisplayData = (dataOriginal,month) => {\r\n\r\n    let yearValueTemporal = document.getElementById('year').value\r\n    let route = API_URL+'flow_cash_data_detail_account_earning_expensive/'+dataOriginal.id+'/'+month+'/'+yearValueTemporal\r\n    toast.info('Cargando datos, espere mientras abre la modal')\r\n    setDisplayLoading(true)\r\n    axios.get(route).then(result => {\r\n      setDataModalEarningExpensive(result.data)\r\n      handleIsOpenModal()\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleExportDataExcel = () => {\r\n\r\n    if(!dataDetailAccount){\r\n      toast.error('Error, no hay datos para realizar el excel')\r\n    }else{\r\n      let wb = xlsx.utils.book_new()\r\n      let bodyTable = [['','Mes1','Mes2','Mes3','Mes4','Mes5','Mes6','Mes7','Mes8','Mes9','Mes10','Mes11','Mes12','Totales']]\r\n\r\n      wb.Props = {\r\n        Title: \"Reporte de Detallado de Cuentas\",\r\n        Subject: \"Exportación de Data\",\r\n        Author: 'Aidy tecnology',\r\n        CreatedDate: moment().format('YYYY-MM-DD')\r\n      };\r\n      wb.SheetNames.push(\"Reporte Detallado\");\r\n\r\n      bodyTable.push(['Total Ingresos'].concat(dataDetailAccount.total_ingreso.map(v => formatNumber(v,2,',','.'))))\r\n\r\n      dataDetailAccount.ingresos.forEach((v,i) => {\r\n        bodyTable.push([\r\n          v.account_name,\r\n          formatNumber(parseFloat(v.mes1),2,',','.'),\r\n          formatNumber(parseFloat(v.mes2),2,',','.'),\r\n          formatNumber(parseFloat(v.mes3),2,',','.'),\r\n          formatNumber(parseFloat(v.mes4),2,',','.'),\r\n          formatNumber(parseFloat(v.mes5),2,',','.'),\r\n          formatNumber(parseFloat(v.mes6),2,',','.'),\r\n          formatNumber(parseFloat(v.mes7),2,',','.'),\r\n          formatNumber(parseFloat(v.mes8),2,',','.'),\r\n          formatNumber(parseFloat(v.mes9),2,',','.'),\r\n          formatNumber(parseFloat(v.mes10),2,',','.'),\r\n          formatNumber(parseFloat(v.mes11),2,',','.'),\r\n          formatNumber(parseFloat(v.mes12),2,',','.'),\r\n          formatNumber(parseFloat(v.total),2,',','.'),\r\n        ])\r\n      })\r\n\r\n      bodyTable.push([])\r\n      bodyTable.push(['Total Egresos'].concat(dataDetailAccount.total_egreso.map(v => formatNumber(v,2,',','.'))))\r\n\r\n      dataDetailAccount.egresos.forEach((v,i) => {\r\n\r\n        bodyTable.push([\r\n            v.account_name,\r\n            formatNumber(parseFloat(v.mes1),2,',','.'),\r\n            formatNumber(parseFloat(v.mes2),2,',','.'),\r\n            formatNumber(parseFloat(v.mes3),2,',','.'),\r\n            formatNumber(parseFloat(v.mes4),2,',','.'),\r\n            formatNumber(parseFloat(v.mes5),2,',','.'),\r\n            formatNumber(parseFloat(v.mes6),2,',','.'),\r\n            formatNumber(parseFloat(v.mes7),2,',','.'),\r\n            formatNumber(parseFloat(v.mes8),2,',','.'),\r\n            formatNumber(parseFloat(v.mes9),2,',','.'),\r\n            formatNumber(parseFloat(v.mes10),2,',','.'),\r\n            formatNumber(parseFloat(v.mes11),2,',','.'),\r\n            formatNumber(parseFloat(v.mes12),2,',','.'),\r\n            formatNumber(parseFloat(v.total),2,',','.')\r\n        ])\r\n      })\r\n\r\n      bodyTable.push([])\r\n      let ingresoEgresoArray = dataDetailAccount.ingreso_menos_egreso.map(v => formatNumber(v,2,',','.'))\r\n      ingresoEgresoArray.unshift('Ingresos - Egresos')\r\n      let totalesArray = dataDetailAccount.total_final.map(v => formatNumber(v,2,',','.'))\r\n      totalesArray.unshift('Saldo Final de Caja')\r\n\r\n      bodyTable.push(ingresoEgresoArray)\r\n      bodyTable.push(totalesArray)\r\n\r\n      var ws = xlsx.utils.aoa_to_sheet(bodyTable);\r\n      wb.Sheets[\"Reporte Detallado\"] = ws;\r\n      var wbout = xlsx.write(wb, {bookType:'xlsx',  type: 'binary'});\r\n      let datos = s2ab(wbout)\r\n      saveAs(new Blob([datos],{type:\"application/octet-stream\"}), 'Reporte Detallado de Cuentas'+moment().format('DD-MM-YYYY')+'.xlsx')\r\n\r\n    }\r\n\r\n  }\r\n\r\n const handleFetchData = () => {\r\n\r\n   axios.get(API_URL+'flow_cash_get_years').then(result => {\r\n\r\n     setYears(result.data)\r\n     if(result.data.length > 0){\r\n       setYearCombo(result.data[0].year)\r\n       handleGetDataDetail(result.data[0].year)\r\n     }\r\n     setDisplayLoading(false)\r\n   }).catch(err => {\r\n    setDisplayLoading(false)\r\n     if(err.response){\r\n       toast.error(err.response.data.message)\r\n     }else{\r\n       console.log(err);\r\n       toast.error('Error, contacte con soporte')\r\n     }\r\n   })\r\n }\r\n\r\n const handleGetDataDetail = yearValue => {\r\n  setDisplayLoading(true)\r\n   axios.get(API_URL+'flow_cash_data_detail_account/'+yearValue).then(result => {\r\n     setDataDetailAccount(result.data)\r\n     setDisplayLoading(false)\r\n   }).catch(err => {\r\n    setDisplayLoading(false)\r\n     if(err.response){\r\n       toast.error(err.response.data.message)\r\n     }else{\r\n       console.log(err);\r\n       toast.error('Error, contacte con soporte')\r\n     }\r\n   })\r\n }\r\n\r\n const handleIsOpenModal = () => {\r\n   setIsOpenModal(!isOpenModal)\r\n }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {displayLoading ? (\r\n        <Container>\r\n          <LoadingComponent />\r\n        </Container>\r\n      ) : (    \r\n        <Container className=\"containerDiv\">\r\n          <br/>\r\n          <Row className=\"justify-content-center\">\r\n            <InputField\r\n              {...props.inputSelect}\r\n              handleChange={handleChange}\r\n              value={yearCombo}\r\n            >\r\n              <option value=''>--Seleccione--</option>\r\n              {years.map((v,i) => (\r\n                <option key={i} value={v.year}>{v.year}</option>\r\n              ))}\r\n            </InputField>\r\n            <Col sm={4} md={4} lg={4} xs={6}>\r\n              <br/>\r\n              <Button size=\"sm\" variant=\"success\" block={true} onClick={handleExportDataExcel}>Exportar a Excel <FaRegFileExcel /></Button>\r\n            </Col>\r\n          </Row>\r\n          <hr/>\r\n          {\r\n            dataDetailAccount ? (\r\n              <Row>\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <Row>\r\n                    <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n                      <h4 className=\"title_principal\">Ingresos</h4>\r\n                      <Table data={dataDetailAccount.ingresos} columns={columns_account} />\r\n                    </Col>\r\n                  </Row>\r\n                  <hr/>\r\n                  <Row>\r\n                    <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n                      <h4 className=\"title_principal\">Egresos</h4>\r\n                      <Table data={dataDetailAccount.egresos} columns={columns_account} />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n  \r\n  \r\n            ) : (\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <h4 className=\"text-center\">Sin Ingresos o Egresos que Mostrar...</h4>\r\n                </Col>\r\n              </Row>\r\n            )\r\n          }\r\n          <Modal\r\n            show={isOpenModal}\r\n            onHide={handleIsOpenModal}\r\n            size=\"xl\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton style={{backgroundColor: 'black', color: 'white'}}>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Ingresos y Egresos\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Tabs defaultActiveKey=\"earnings\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"earnings\" title=\"Ingresos\">\r\n                  {dataModalEarningExpensive ? (\r\n                    <TableEarningExpensiveComponent data={dataModalEarningExpensive.ingresos} isAccount={true} isReport={true} />\r\n                  ) : ''}\r\n                </Tab>\r\n                <Tab eventKey=\"expensives\" title=\"Egresos\">\r\n                  {dataModalEarningExpensive ? (\r\n                    <TableEarningExpensiveComponent data={dataModalEarningExpensive.egresos} isAccount={true} isReport={true} />\r\n                  ) : '' }\r\n                </Tab>\r\n              </Tabs>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button size=\"sm\" variant=\"secondary\" onClick={handleIsOpenModal}>cerrar</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nReportDetailAccount.defaultProps = {\r\n  inputSelect : {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'year',\r\n    label : 'Año del reporte',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  }\r\n}\r\n\r\nexport default ReportDetailAccount\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  Tab,\r\n  Tabs,\r\n  Badge\r\n} from 'react-bootstrap'\r\nimport {\r\n  FaRegFileExcel\r\n} from 'react-icons/fa'\r\nimport axios from 'axios'\r\nimport InputField from 'components/input/InputComponent'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport { formatNumber, s2ab } from 'utils/functions'\r\nimport * as moment from 'moment-timezone'\r\nimport { saveAs } from 'file-saver'\r\nimport * as xlsx from 'xlsx'\r\nimport Table from 'components/Table'\r\nimport TooltipComponent from 'components/TooltipComponent'\r\nimport TableEarningExpensiveComponent from 'components/TableEarningExpensiveComponent'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\nlet columns_account = []\r\n\r\nconst ReportDetailCenterCoste = props => {\r\n\r\n  const [dataDetailCenterCoste,setDataDetailCenterCoste] = useState(null)\r\n  const [dataModalEarningExpensive,setDataModalEarningExpensive] = useState(null)\r\n  const [years, setYears] = useState([])\r\n  const [yearCombo, setYearCombo] = useState('')\r\n  const [isOpenModal,setIsOpenModal] = useState(false)\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n    handleFetchData()\r\n    return () => {\r\n      columns_account = []\r\n    }\r\n  },[])\r\n\r\n  useMemo(() => {\r\n    columns_account = [\r\n      {\r\n        Header: 'CENTROS',\r\n        accessor: 'center_coste_name'\r\n      },\r\n      {\r\n        Header: 'MES 1',\r\n        accessor: 'mes1',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes1 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,1)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes1,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes1,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 2',\r\n        accessor: 'mes2',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes2 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,2)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes2,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes2,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 3',\r\n        accessor: 'mes3',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes3 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,3)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes3,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes3,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 4',\r\n        accessor: 'mes4',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes4 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,4)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes4,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes4,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 5',\r\n        accessor: 'mes5',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes5 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,5)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes5,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes5,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 6',\r\n        accessor: 'mes6',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes6 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,6)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes6,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes6,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 7',\r\n        accessor: 'mes7',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes7 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,7)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes7,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes7,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 8',\r\n        accessor: 'mes8',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes8 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,8)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes8,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes8,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 9',\r\n        accessor: 'mes9',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes9 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,9)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes9,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes9,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 10',\r\n        accessor: 'mes10',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes10 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,10)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes10,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes10,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 11',\r\n        accessor: 'mes11',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes11 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,11)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes11,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes11,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'MES 12',\r\n        accessor: 'mes12',\r\n        Cell: props1 => {\r\n          const { original } = props1.cell.row\r\n          if(original.mes12 > 0){\r\n            let word = original.type ? 'ingreso' : 'egresos'\r\n            return(\r\n              <TooltipComponent title={\"Hacer click para ver los \"+word+\" del mes\"}>\r\n                <Button size=\"sm\" onClick={() => handleDisplayData(original,12)} variant=\"link\"><Badge variant=\"danger\">{ formatNumber(original.mes12,2,',','.') }</Badge></Button>\r\n              </TooltipComponent>\r\n            )\r\n          }else{\r\n            return formatNumber(original.mes12,2,',','.')\r\n          }\r\n        }\r\n      },\r\n      {\r\n        Header: 'TOTALES',\r\n        accessor: 'total',\r\n        Cell: props1 => {\r\n          return (\r\n            <Badge style={{backgroundColor: 'rgb(36, 49, 94)', color: 'white'}}>{ formatNumber(props1.cell.row.original.total,2,',','.') }</Badge>\r\n          )\r\n        }\r\n      },\r\n    ]\r\n  },[])\r\n\r\n  const handleChange = e => {\r\n    let val = e.target.value\r\n    setYearCombo(val)\r\n    handleGetDataDetail(val)\r\n  }\r\n\r\n  const handleDisplayData = (dataOriginal,month) => {\r\n\r\n    let yearValueTemporal = document.getElementById('year').value\r\n    let route = API_URL+'flow_cash_data_detail_center_coste_earning_expensive/'+dataOriginal.id+'/'+month+'/'+yearValueTemporal\r\n    toast.info('Cargando datos, espere mientras abre la modal')\r\n    setDisplayLoading(true)\r\n    axios.get(route).then(result => {\r\n      setDataModalEarningExpensive(result.data)\r\n      handleIsOpenModal()\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleExportDataExcel = () => {\r\n\r\n    if(!dataDetailCenterCoste){\r\n      toast.error('Error, no hay datos para realizar el excel')\r\n    }else{\r\n      let wb = xlsx.utils.book_new()\r\n      let bodyTable = [['','Mes1','Mes2','Mes3','Mes4','Mes5','Mes6','Mes7','Mes8','Mes9','Mes10','Mes11','Mes12','Totales']]\r\n\r\n      wb.Props = {\r\n        Title: \"Reporte Detallado de Centro de Costos\",\r\n        Subject: \"Exportación de Data\",\r\n        Author: 'Aidy tecnology',\r\n        CreatedDate: moment().format('YYYY-MM-DD')\r\n      };\r\n      wb.SheetNames.push(\"Reporte Detallado\");\r\n\r\n      bodyTable.push(['Total Ingresos'].concat(dataDetailCenterCoste.total_ingreso.map(v => formatNumber(v,2,',','.'))))\r\n\r\n      dataDetailCenterCoste.ingresos.forEach((v,i) => {\r\n        bodyTable.push([\r\n          v.center_coste_name,\r\n          formatNumber(parseFloat(v.mes1),2,',','.'),\r\n          formatNumber(parseFloat(v.mes2),2,',','.'),\r\n          formatNumber(parseFloat(v.mes3),2,',','.'),\r\n          formatNumber(parseFloat(v.mes4),2,',','.'),\r\n          formatNumber(parseFloat(v.mes5),2,',','.'),\r\n          formatNumber(parseFloat(v.mes6),2,',','.'),\r\n          formatNumber(parseFloat(v.mes7),2,',','.'),\r\n          formatNumber(parseFloat(v.mes8),2,',','.'),\r\n          formatNumber(parseFloat(v.mes9),2,',','.'),\r\n          formatNumber(parseFloat(v.mes10),2,',','.'),\r\n          formatNumber(parseFloat(v.mes11),2,',','.'),\r\n          formatNumber(parseFloat(v.mes12),2,',','.'),\r\n          formatNumber(parseFloat(v.total),2,',','.'),\r\n        ])\r\n      })\r\n\r\n      bodyTable.push([])\r\n      bodyTable.push(['Total Egresos'].concat(dataDetailCenterCoste.total_egreso.map(v => formatNumber(v,2,',','.'))))\r\n\r\n      dataDetailCenterCoste.egresos.forEach((v,i) => {\r\n\r\n        bodyTable.push([\r\n            v.center_coste_name,\r\n            formatNumber(parseFloat(v.mes1),2,',','.'),\r\n            formatNumber(parseFloat(v.mes2),2,',','.'),\r\n            formatNumber(parseFloat(v.mes3),2,',','.'),\r\n            formatNumber(parseFloat(v.mes4),2,',','.'),\r\n            formatNumber(parseFloat(v.mes5),2,',','.'),\r\n            formatNumber(parseFloat(v.mes6),2,',','.'),\r\n            formatNumber(parseFloat(v.mes7),2,',','.'),\r\n            formatNumber(parseFloat(v.mes8),2,',','.'),\r\n            formatNumber(parseFloat(v.mes9),2,',','.'),\r\n            formatNumber(parseFloat(v.mes10),2,',','.'),\r\n            formatNumber(parseFloat(v.mes11),2,',','.'),\r\n            formatNumber(parseFloat(v.mes12),2,',','.'),\r\n            formatNumber(parseFloat(v.total),2,',','.')\r\n        ])\r\n      })\r\n\r\n      bodyTable.push([])\r\n      let ingresoEgresoArray = dataDetailCenterCoste.ingreso_menos_egreso.map(v => formatNumber(v,2,',','.'))\r\n      ingresoEgresoArray.unshift('Ingresos - Egresos')\r\n      let totalesArray = dataDetailCenterCoste.total_final.map(v => formatNumber(v,2,',','.'))\r\n      totalesArray.unshift('Saldo Final de Caja')\r\n\r\n      bodyTable.push(ingresoEgresoArray)\r\n      bodyTable.push(totalesArray)\r\n\r\n      var ws = xlsx.utils.aoa_to_sheet(bodyTable);\r\n      wb.Sheets[\"Reporte Detallado\"] = ws;\r\n      var wbout = xlsx.write(wb, {bookType:'xlsx',  type: 'binary'});\r\n      let datos = s2ab(wbout)\r\n      saveAs(new Blob([datos],{type:\"application/octet-stream\"}), 'Reporte Detallado de Centro de Costos'+moment().format('DD-MM-YYYY')+'.xlsx')\r\n    }\r\n\r\n  }\r\n\r\n const handleFetchData = () => {\r\n\r\n   axios.get(API_URL+'flow_cash_get_years').then(result => {\r\n\r\n     setYears(result.data)\r\n     if(result.data.length > 0){\r\n       setYearCombo(result.data[0].year)\r\n       handleGetDataDetail(result.data[0].year)\r\n     }\r\n     setDisplayLoading(false)\r\n   }).catch(err => {\r\n    setDisplayLoading(false)\r\n     if(err.response){\r\n       toast.error(err.response.data.message)\r\n     }else{\r\n       console.log(err);\r\n       toast.error('Error, contacte con soporte')\r\n     }\r\n   })\r\n }\r\n\r\n const handleGetDataDetail = yearValue => {\r\n  setDisplayLoading(true)\r\n   axios.get(API_URL+'flow_cash_data_detail_center_coste/'+yearValue).then(result => {\r\n     setDataDetailCenterCoste(result.data)\r\n     setDisplayLoading(false)\r\n   }).catch(err => {\r\n    setDisplayLoading(false)\r\n     if(err.response){\r\n       toast.error(err.response.data.message)\r\n     }else{\r\n       console.log(err);\r\n       toast.error('Error, contacte con soporte')\r\n     }\r\n   })\r\n }\r\n\r\n const handleIsOpenModal = () => {\r\n   setIsOpenModal(!isOpenModal)\r\n }\r\n\r\n  return (\r\n    <>\r\n      {displayLoading ? (\r\n        <Container>\r\n          <LoadingComponent />\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"containerDiv\">\r\n          <br/>\r\n          <Row className=\"justify-content-center\">\r\n            <InputField\r\n              {...props.inputSelect}\r\n              handleChange={handleChange}\r\n              value={yearCombo}\r\n            >\r\n              <option value=\"\">--Seleccione--</option>\r\n              {years.map((v,i) => (\r\n                <option key={i} value={v.year}>{v.year}</option>\r\n              ))}\r\n            </InputField>\r\n            <Col sm={4} md={4} lg={4} xs={6}>\r\n              <br/>\r\n              <Button size=\"sm\" variant=\"success\" block={true} onClick={handleExportDataExcel}>Exportar a Excel <FaRegFileExcel /></Button>\r\n            </Col>\r\n          </Row>\r\n          <hr/>\r\n          {\r\n            dataDetailCenterCoste ? (\r\n              <Row>\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <Row>\r\n                    <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n                      <h4 className=\"title_principal\">Ingresos</h4>\r\n                      <Table data={dataDetailCenterCoste.ingresos} columns={columns_account} />\r\n                    </Col>\r\n                  </Row>\r\n                  <hr/>\r\n                  <Row>\r\n                    <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n                      <h4 className=\"title_principal\">Egresos</h4>\r\n                      <Table data={dataDetailCenterCoste.egresos} columns={columns_account} />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n\r\n            ) : (\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <h4 className=\"text-center\">Sin Ingresos o Egresos que Mostrar...</h4>\r\n                </Col>\r\n              </Row>\r\n            )\r\n          }\r\n          <Modal\r\n            show={isOpenModal}\r\n            onHide={handleIsOpenModal}\r\n            size=\"xl\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton style={{backgroundColor: 'black', color: 'white'}}>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Ingresos y Egresos\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Tabs defaultActiveKey=\"earnings\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"earnings\" title=\"Ingresos\">\r\n                  {dataModalEarningExpensive ? (\r\n                    <TableEarningExpensiveComponent data={dataModalEarningExpensive.ingresos} isAccount={false} isReport={true} />\r\n                  ) : ''}\r\n                </Tab>\r\n                <Tab eventKey=\"expensives\" title=\"Egresos\">\r\n                  {dataModalEarningExpensive ? (\r\n                    <TableEarningExpensiveComponent data={dataModalEarningExpensive.egresos} isAccount={false} isReport={true} />\r\n                  ) : '' }\r\n                </Tab>\r\n              </Tabs>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button size=\"sm\" variant=\"secondary\" onClick={handleIsOpenModal}>cerrar</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nReportDetailCenterCoste.defaultProps = {\r\n  inputSelect : {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'year',\r\n    label : 'Año del reporte',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  }\r\n}\r\n\r\nexport default ReportDetailCenterCoste\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Tab,\r\n  Tabs\r\n} from 'react-bootstrap'\r\nimport { toast } from 'react-toastify'\r\nimport ReportDetailAccount from 'components/ReportDetailAccount'\r\nimport ReportDetailCenterCoste from 'components/ReportDetailCenterCoste'\r\n\r\nconst FlowCashReportDetailPage = (props) => {\r\n  useEffect(() => {\r\n    \r\n  },[])\r\n  return (\r\n    <Container>\r\n      <Row className=\"justif\">\r\n        <Col sm={12} md={12} lg={12}>\r\n          <Tabs defaultActiveKey=\"account\" id=\"uncontrolled-tab-example\">\r\n            <Tab eventKey=\"account\" title=\"Reporte Cuentas\">\r\n              <ReportDetailAccount {...props} />\r\n            </Tab>\r\n            <Tab eventKey=\"center_coste\" title=\"Reporte Centro de Costos\">\r\n              <ReportDetailCenterCoste {...props} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FlowCashReportDetailPage\r\n"],"sourceRoot":""}