{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/react-table/index.js","../../src/constants.js","../../src/sheet/Tag.js","../../src/sheet/GroupedTag.js","../../src/sheet/GroupIDAllocator.js","../../src/sheet/Sheet.js","../../src/utils/isStaticRules.js","../../src/models/ComponentStyle.js","../../src/models/StyledComponent.js","../node_modules/match-sorter/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/match-sorter/dist/match-sorter.esm.js","../node_modules/@emotion/stylis/dist/stylis.browser.esm.js","../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../node_modules/@emotion/memoize/dist/memoize.browser.esm.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../node_modules/remove-accents/index.js","../node_modules/shallowequal/index.js","../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","module","exports","require","nodes","insertRule","names","id","isCompositeComponent","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","rankings","CASE_SENSITIVE_EQUAL","EQUAL","STARTS_WITH","WORD_STARTS_WITH","STRING_CASE","STRING_CASE_ACRONYM","CONTAINS","ACRONYM","MATCHES","NO_MATCH","caseRankings","CAMEL","PASCAL","KEBAB","SNAKE","NO_CASE","matchSorter","defaultBaseSortFn","a","b","String","rankedItem","localeCompare","items","options","_options","keys","_options$threshold","threshold","_options$baseSort","baseSort","reduce","matches","item","index","_getHighestRanking","rank","getMatchRanking","keyIndex","keyThreshold","allVals","values","indexOf","split","itemObj","nestedKey","concat","getItemValues","forEach","itemValue","push","attributes","getKeyAttributes","getAllValuesToRank","_ref2","_ref3","newRank","newRankedItem","minRanking","maxRanking","getHighestRanking","_getHighestRanking$ke","sort","aRank","aKeyIndex","bRank","bKeyIndex","sortRankedItems","map","_ref","testString","stringToRank","prepareValueForComparison","caseRank","containsUpperCase","toLowerCase","containsDash","containsUnderscore","toUpperCase","getCaseRanking","isPartial","caseRanking","testIndex","isPartialOfCase","isCasedAcronym","splitValue","splitTestString","correct","char","charIndex","splitItem","isCaseAcronym","string","acronym","wordInString","splitByHyphenWord","substr","getAcronym","matchingInOrderCharCount","charNumber","findMatchingCharacter","matchChar","j","firstIndex","spread","inOrderPercentage","getRanking","getClosenessRanking","_ref4","keepDiacritics","removeAccents","Infinity","stylis_min","W","X","d","c","e","h","trim","ia","m","Z","v","n","charCodeAt","replace","F","P","substring","w","L","ja","ka","test","aa","G","ba","la","ma","R","na","ea","oa","H","q","g","x","A","S","B","U","prefix","D","z","M","k","y","C","K","u","l","r","I","t","J","f","p","N","charAt","ca","O","join","da","fa","Y","E","ha","Q","use","T","set","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","memoize","fn","cache","arg","undefined","actions","init","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","props","next","style","className","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","React","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","getPrototypeOf","isReactComponent","$$typeof","includes","description","linkColumnStructure","parent","depth","assignColumnAccessor","flattenColumns","flattenBy","accessor","Header","accessorPath","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","reOpenBracket","reCloseBracket","cursor","pathPart","row","error","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","from","Set","size","emptyArray","emptyObject","resetGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","setGroupBy","resolvedGroupBy","groupByColumns","col","nonGroupByColumns","isGrouped","groupedIndex","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","aggregateFn","aggregate","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValueByColumnID","toString","isNaN","rowA","rowB","shift","bb","an","parseInt","bn","combo","getTime","resetSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","floor","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","characterMap","chars","allAccents","RegExp","firstAccent","match","has","remove","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","reactPropsRegex","prop"],"mappings":"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","file":"static/js/0.c62820c4.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","// @flow\n\ndeclare var SC_DISABLE_SPEEDY: ?boolean;\ndeclare var __VERSION__: string;\n\nexport const SC_ATTR =\n  (typeof process !== 'undefined' && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR)) ||\n  'data-styled';\n\nexport const SC_ATTR_ACTIVE = 'active';\nexport const SC_ATTR_VERSION = 'data-styled-version';\nexport const SC_VERSION = __VERSION__;\nexport const SPLITTER = '/*!sc*/\\n';\n\nexport const IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;\n\nexport const DISABLE_SPEEDY =\n  (typeof SC_DISABLE_SPEEDY === 'boolean' && SC_DISABLE_SPEEDY) ||\n  (typeof process !== 'undefined' &&\n    (process.env.REACT_APP_SC_DISABLE_SPEEDY || process.env.SC_DISABLE_SPEEDY)) ||\n  process.env.NODE_ENV !== 'production';\n\n// Shared empty execution context when generating static styles\nexport const STATIC_EXECUTION_CONTEXT = {};\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport { makeStyleTag, getSheet } from './dom';\nimport type { SheetOptions, Tag } from './types';\n\n/** Create a CSSStyleSheet-like tag depending on the environment */\nexport const makeTag = ({ isServer, useCSSOMInjection, target }: SheetOptions): Tag => {\n  if (isServer) {\n    return new VirtualTag(target);\n  } else if (useCSSOMInjection) {\n    return new CSSOMTag(target);\n  } else {\n    return new TextTag(target);\n  }\n};\n\nexport class CSSOMTag implements Tag {\n  element: HTMLStyleElement;\n\n  sheet: CSSStyleSheet;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n\n    // Avoid Edge bug where empty style elements don't create sheets\n    element.appendChild(document.createTextNode(''));\n\n    this.sheet = getSheet(element);\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    try {\n      this.sheet.insertRule(rule, index);\n      this.length++;\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.sheet.deleteRule(index);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    const rule = this.sheet.cssRules[index];\n    // Avoid IE11 quirk where cssText is inaccessible on some invalid rules\n    if (rule !== undefined && typeof rule.cssText === 'string') {\n      return rule.cssText;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A Tag that emulates the CSSStyleSheet API but uses text nodes */\nexport class TextTag implements Tag {\n  element: HTMLStyleElement;\n\n  nodes: NodeList<Node>;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n    this.nodes = element.childNodes;\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length && index >= 0) {\n      const node = document.createTextNode(rule);\n      const refNode = this.nodes[index];\n      this.element.insertBefore(node, refNode || null);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.element.removeChild(this.nodes[index]);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.nodes[index].textContent;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A completely virtual (server-side) Tag that doesn't manipulate the DOM */\nexport class VirtualTag implements Tag {\n  rules: string[];\n\n  length: number;\n\n  constructor(_target?: HTMLElement) {\n    this.rules = [];\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length) {\n      this.rules.splice(index, 0, rule);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.rules.splice(index, 1);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.rules[index];\n    } else {\n      return '';\n    }\n  }\n}\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport type { GroupedTag, Tag } from './types';\nimport { SPLITTER } from '../constants';\nimport throwStyledError from '../utils/error';\n\n/** Create a GroupedTag with an underlying Tag implementation */\nexport const makeGroupedTag = (tag: Tag): GroupedTag => {\n  return new DefaultGroupedTag(tag);\n};\n\nconst BASE_SIZE = 1 << 9;\n\nclass DefaultGroupedTag implements GroupedTag {\n  groupSizes: Uint32Array;\n\n  length: number;\n\n  tag: Tag;\n\n  constructor(tag: Tag) {\n    this.groupSizes = new Uint32Array(BASE_SIZE);\n    this.length = BASE_SIZE;\n    this.tag = tag;\n  }\n\n  indexOfGroup(group: number): number {\n    let index = 0;\n    for (let i = 0; i < group; i++) {\n      index += this.groupSizes[i];\n    }\n\n    return index;\n  }\n\n  insertRules(group: number, rules: string[]): void {\n    if (group >= this.groupSizes.length) {\n      const oldBuffer = this.groupSizes;\n      const oldSize = oldBuffer.length;\n\n      let newSize = oldSize;\n      while (group >= newSize) {\n        newSize <<= 1;\n        if (newSize < 0) {\n          throwStyledError(16, `${group}`);\n        }\n      }\n\n      this.groupSizes = new Uint32Array(newSize);\n      this.groupSizes.set(oldBuffer);\n      this.length = newSize;\n\n      for (let i = oldSize; i < newSize; i++) {\n        this.groupSizes[i] = 0;\n      }\n    }\n\n    let ruleIndex = this.indexOfGroup(group + 1);\n    for (let i = 0, l = rules.length; i < l; i++) {\n      if (this.tag.insertRule(ruleIndex, rules[i])) {\n        this.groupSizes[group]++;\n        ruleIndex++;\n      }\n    }\n  }\n\n  clearGroup(group: number): void {\n    if (group < this.length) {\n      const length = this.groupSizes[group];\n      const startIndex = this.indexOfGroup(group);\n      const endIndex = startIndex + length;\n\n      this.groupSizes[group] = 0;\n\n      for (let i = startIndex; i < endIndex; i++) {\n        this.tag.deleteRule(startIndex);\n      }\n    }\n  }\n\n  getGroup(group: number): string {\n    let css = '';\n    if (group >= this.length || this.groupSizes[group] === 0) {\n      return css;\n    }\n\n    const length = this.groupSizes[group];\n    const startIndex = this.indexOfGroup(group);\n    const endIndex = startIndex + length;\n\n    for (let i = startIndex; i < endIndex; i++) {\n      css += `${this.tag.getRule(i)}${SPLITTER}`;\n    }\n\n    return css;\n  }\n}\n","// @flow\n\nimport throwStyledError from '../utils/error';\n\nconst MAX_SMI = 1 << 31 - 1;\n\nlet groupIDRegister: Map<string, number> = new Map();\nlet reverseRegister: Map<number, string> = new Map();\nlet nextFreeGroup = 1;\n\nexport const resetGroupIds = () => {\n  groupIDRegister = new Map();\n  reverseRegister = new Map();\n  nextFreeGroup = 1;\n};\n\nexport const getGroupForId = (id: string): number => {\n  if (groupIDRegister.has(id)) {\n    return (groupIDRegister.get(id): any);\n  }\n\n  const group = nextFreeGroup++;\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    ((group | 0) < 0 || group > MAX_SMI)\n  ) {\n    throwStyledError(16, `${group}`);\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n  return group;\n};\n\nexport const getIdForGroup = (group: number): void | string => {\n  return reverseRegister.get(group);\n};\n\nexport const setGroupForId = (id: string, group: number) => {\n  if (group >= nextFreeGroup) {\n    nextFreeGroup = group + 1;\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n};\n","// @flow\nimport { DISABLE_SPEEDY, IS_BROWSER } from '../constants';\nimport type { GroupedTag, Sheet, SheetOptions } from './types';\nimport { makeTag } from './Tag';\nimport { makeGroupedTag } from './GroupedTag';\nimport { getGroupForId } from './GroupIDAllocator';\nimport { outputSheet, rehydrateSheet } from './Rehydration';\n\nlet SHOULD_REHYDRATE = IS_BROWSER;\n\ntype SheetConstructorArgs = {\n  isServer?: boolean,\n  useCSSOMInjection?: boolean,\n  target?: HTMLElement,\n};\n\ntype GlobalStylesAllocationMap = { [key: string]: number };\ntype NamesAllocationMap = Map<string, Set<string>>;\n\nconst defaultOptions = {\n  isServer: !IS_BROWSER,\n  useCSSOMInjection: !DISABLE_SPEEDY,\n};\n\n/** Contains the main stylesheet logic for stringification and caching */\nexport default class StyleSheet implements Sheet {\n  gs: GlobalStylesAllocationMap;\n\n  names: NamesAllocationMap;\n\n  options: SheetOptions;\n\n  tag: void | GroupedTag;\n\n  /** Register a group ID to give it an index */\n  static registerId(id: string): number {\n    return getGroupForId(id);\n  }\n\n  constructor(\n    options: SheetConstructorArgs = defaultOptions,\n    globalStyles?: GlobalStylesAllocationMap = {},\n    names?: NamesAllocationMap\n  ) {\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.gs = globalStyles;\n    this.names = new Map(names);\n\n    // We rehydrate only once and use the sheet that is created first\n    if (!this.options.isServer && IS_BROWSER && SHOULD_REHYDRATE) {\n      SHOULD_REHYDRATE = false;\n      rehydrateSheet(this);\n    }\n  }\n\n  reconstructWithOptions(options: SheetConstructorArgs) {\n    return new StyleSheet({ ...this.options, ...options }, this.gs, this.names);\n  }\n\n  allocateGSInstance(id: string) {\n    return (this.gs[id] = (this.gs[id] || 0) + 1);\n  }\n\n  /** Lazily initialises a GroupedTag for when it's actually needed */\n  getTag(): GroupedTag {\n    return this.tag || (this.tag = makeGroupedTag(makeTag(this.options)));\n  }\n\n  /** Check whether a name is known for caching */\n  hasNameForId(id: string, name: string): boolean {\n    return this.names.has(id) && (this.names.get(id): any).has(name);\n  }\n\n  /** Mark a group's name as known for caching */\n  registerName(id: string, name: string) {\n    getGroupForId(id);\n\n    if (!this.names.has(id)) {\n      const groupNames = new Set();\n      groupNames.add(name);\n      this.names.set(id, groupNames);\n    } else {\n      (this.names.get(id): any).add(name);\n    }\n  }\n\n  /** Insert new rules which also marks the name as known */\n  insertRules(id: string, name: string, rules: string[]) {\n    this.registerName(id, name);\n    this.getTag().insertRules(getGroupForId(id), rules);\n  }\n\n  /** Clears all cached names for a given group ID */\n  clearNames(id: string) {\n    if (this.names.has(id)) {\n      (this.names.get(id): any).clear();\n    }\n  }\n\n  /** Clears all rules for a given group ID */\n  clearRules(id: string) {\n    this.getTag().clearGroup(getGroupForId(id));\n    this.clearNames(id);\n  }\n\n  /** Clears the entire tag which deletes all rules but not its names */\n  clearTag() {\n    // NOTE: This does not clear the names, since it's only used during SSR\n    // so that we can continuously output only new rules\n    this.tag = undefined;\n  }\n\n  /** Outputs the current sheet as a CSS string with markers for SSR */\n  toString(): string {\n    return outputSheet(this);\n  }\n}\n","// @flow\nimport isFunction from './isFunction';\nimport isStyledComponent from './isStyledComponent';\nimport type { RuleSet } from '../types';\n\nexport default function isStaticRules(rules: RuleSet): boolean {\n  for (let i = 0; i < rules.length; i += 1) {\n    const rule = rules[i];\n\n    if (isFunction(rule) && !isStyledComponent(rule)) {\n      // functions are allowed to be static if they're just being\n      // used to get the classname of a nested styled component\n      return false;\n    }\n  }\n\n  return true;\n}\n","// @flow\n\nimport flatten from '../utils/flatten';\nimport { hash, phash } from '../utils/hash';\nimport generateName from '../utils/generateAlphabeticName';\nimport isStaticRules from '../utils/isStaticRules';\nimport StyleSheet from '../sheet';\n\nimport type { RuleSet, Stringifier } from '../types';\n\n/*\n ComponentStyle is all the CSS-specific stuff, not\n the React-specific stuff.\n */\nexport default class ComponentStyle {\n  baseHash: number;\n\n  componentId: string;\n\n  isStatic: boolean;\n\n  rules: RuleSet;\n\n  staticRulesId: string;\n\n  constructor(rules: RuleSet, componentId: string) {\n    this.rules = rules;\n    this.staticRulesId = '';\n    this.isStatic = process.env.NODE_ENV === 'production' && isStaticRules(rules);\n    this.componentId = componentId;\n    this.baseHash = hash(componentId);\n\n    // NOTE: This registers the componentId, which ensures a consistent order\n    // for this component's styles compared to others\n    StyleSheet.registerId(componentId);\n  }\n\n  /*\n   * Flattens a rule set into valid CSS\n   * Hashes it, wraps the whole chunk in a .hash1234 {}\n   * Returns the hash to be injected on render()\n   * */\n  generateAndInjectStyles(executionContext: Object, styleSheet: StyleSheet, stylis: Stringifier) {\n    const { componentId } = this;\n\n    // force dynamic classnames if user-supplied stylis plugins are in use\n    if (this.isStatic && !stylis.hash) {\n      if (this.staticRulesId && styleSheet.hasNameForId(componentId, this.staticRulesId)) {\n        return this.staticRulesId;\n      }\n\n      const cssStatic = flatten(this.rules, executionContext, styleSheet).join('');\n      const name = generateName(phash(this.baseHash, cssStatic.length) >>> 0);\n\n      if (!styleSheet.hasNameForId(componentId, name)) {\n        const cssStaticFormatted = stylis(cssStatic, `.${name}`, undefined, componentId);\n\n        styleSheet.insertRules(componentId, name, cssStaticFormatted);\n      }\n\n      this.staticRulesId = name;\n\n      return name;\n    } else {\n      const { length } = this.rules;\n      let dynamicHash = phash(this.baseHash, stylis.hash);\n      let css = '';\n\n      for (let i = 0; i < length; i++) {\n        const partRule = this.rules[i];\n        if (typeof partRule === 'string') {\n          css += partRule;\n\n          if (process.env.NODE_ENV !== 'production') dynamicHash = phash(dynamicHash, partRule + i);\n        } else {\n          const partChunk = flatten(partRule, executionContext, styleSheet);\n          const partString = Array.isArray(partChunk) ? partChunk.join('') : partChunk;\n          dynamicHash = phash(dynamicHash, partString + i);\n          css += partString;\n        }\n      }\n\n      const name = generateName(dynamicHash >>> 0);\n\n      if (!styleSheet.hasNameForId(componentId, name)) {\n        const cssFormatted = stylis(css, `.${name}`, undefined, componentId);\n        styleSheet.insertRules(componentId, name, cssFormatted);\n      }\n\n      return name;\n    }\n  }\n}\n","// @flow\nimport validAttr from '@emotion/is-prop-valid';\nimport React, {\n  createElement,\n  useContext,\n  useDebugValue,\n  type AbstractComponent,\n  type Ref,\n} from 'react';\nimport hoist from 'hoist-non-react-statics';\nimport merge from '../utils/mixinDeep';\nimport ComponentStyle from './ComponentStyle';\nimport createWarnTooManyClasses from '../utils/createWarnTooManyClasses';\nimport { checkDynamicCreation } from '../utils/checkDynamicCreation';\nimport determineTheme from '../utils/determineTheme';\nimport escape from '../utils/escape';\nimport generateDisplayName from '../utils/generateDisplayName';\nimport getComponentName from '../utils/getComponentName';\nimport generateComponentId from '../utils/generateComponentId';\nimport isFunction from '../utils/isFunction';\nimport isStyledComponent from '../utils/isStyledComponent';\nimport isTag from '../utils/isTag';\nimport joinStrings from '../utils/joinStrings';\nimport { ThemeContext } from './ThemeProvider';\nimport { useStyleSheet, useStylis } from './StyleSheetManager';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from '../utils/empties';\n\nimport type { Attrs, RuleSet, Target } from '../types';\n\n/* global $Call */\n\nconst identifiers = {};\n\n/* We depend on components having unique IDs */\nfunction generateId(displayName: string, parentComponentId: string) {\n  const name = typeof displayName !== 'string' ? 'sc' : escape(displayName);\n  // Ensure that no displayName can lead to duplicate componentIds\n  identifiers[name] = (identifiers[name] || 0) + 1;\n\n  const componentId = `${name}-${generateComponentId(name + identifiers[name])}`;\n  return parentComponentId ? `${parentComponentId}-${componentId}` : componentId;\n}\n\nfunction useResolvedAttrs<Config>(theme: any = EMPTY_OBJECT, props: Config, attrs: Attrs) {\n  // NOTE: can't memoize this\n  // returns [context, resolvedAttrs]\n  // where resolvedAttrs is only the things injected by the attrs themselves\n  const context = { ...props, theme };\n  const resolvedAttrs = {};\n\n  attrs.forEach(attrDef => {\n    let resolvedAttrDef = attrDef;\n    let key;\n\n    if (isFunction(resolvedAttrDef)) {\n      resolvedAttrDef = resolvedAttrDef(context);\n    }\n\n    /* eslint-disable guard-for-in */\n    for (key in resolvedAttrDef) {\n      context[key] = resolvedAttrs[key] =\n        key === 'className'\n          ? joinStrings(resolvedAttrs[key], resolvedAttrDef[key])\n          : resolvedAttrDef[key];\n    }\n    /* eslint-enable guard-for-in */\n  });\n\n  return [context, resolvedAttrs];\n}\n\ninterface StyledComponentWrapperProperties {\n  attrs: Attrs;\n  componentStyle: ComponentStyle;\n  displayName: string;\n  foldedComponentIds: Array<string>;\n  target: Target;\n  shouldForwardProp: ?(prop: string, isValidAttr: (prop: string) => boolean) => boolean;\n  styledComponentId: string;\n  warnTooManyClasses: $Call<typeof createWarnTooManyClasses, string, string>;\n}\n\ntype StyledComponentWrapper<Config, Instance> = AbstractComponent<Config, Instance> &\n  StyledComponentWrapperProperties;\n\nfunction useInjectedStyle<T>(\n  componentStyle: ComponentStyle,\n  hasAttrs: boolean,\n  resolvedAttrs: T,\n  warnTooManyClasses?: $Call<typeof createWarnTooManyClasses, string, string>\n) {\n  const styleSheet = useStyleSheet();\n  const stylis = useStylis();\n\n  // statically styled-components don't need to build an execution context object,\n  // and shouldn't be increasing the number of class names\n  const isStatic = componentStyle.isStatic && !hasAttrs;\n\n  const className = isStatic\n    ? componentStyle.generateAndInjectStyles(EMPTY_OBJECT, styleSheet, stylis)\n    : componentStyle.generateAndInjectStyles(resolvedAttrs, styleSheet, stylis);\n\n  useDebugValue(className);\n\n  if (process.env.NODE_ENV !== 'production' && !isStatic && warnTooManyClasses) {\n    warnTooManyClasses(className);\n  }\n\n  return className;\n}\n\nfunction useStyledComponentImpl<Config: {}, Instance>(\n  forwardedComponent: StyledComponentWrapper<Config, Instance>,\n  props: Object,\n  forwardedRef: Ref<any>\n) {\n  const {\n    attrs: componentAttrs,\n    componentStyle,\n    // $FlowFixMe\n    defaultProps,\n    foldedComponentIds,\n    // $FlowFixMe\n    shouldForwardProp,\n    styledComponentId,\n    target,\n  } = forwardedComponent;\n\n  useDebugValue(styledComponentId);\n\n  // NOTE: the non-hooks version only subscribes to this when !componentStyle.isStatic,\n  // but that'd be against the rules-of-hooks. We could be naughty and do it anyway as it\n  // should be an immutable value, but behave for now.\n  const theme = determineTheme(props, useContext(ThemeContext), defaultProps);\n\n  const [context, attrs] = useResolvedAttrs(theme || EMPTY_OBJECT, props, componentAttrs);\n\n  const generatedClassName = useInjectedStyle(\n    componentStyle,\n    componentAttrs.length > 0,\n    context,\n    process.env.NODE_ENV !== 'production' ? forwardedComponent.warnTooManyClasses : undefined\n  );\n\n  const refToForward = forwardedRef;\n\n  const elementToBeCreated: Target = attrs.$as || props.$as || attrs.as || props.as || target;\n\n  const isTargetTag = isTag(elementToBeCreated);\n  const computedProps = attrs !== props ? { ...props, ...attrs } : props;\n  const propFilterFn = shouldForwardProp || (isTargetTag && validAttr);\n  const propsForElement = {};\n\n  // eslint-disable-next-line guard-for-in\n  for (const key in computedProps) {\n    if (key[0] === '$' || key === 'as') continue;\n    else if (key === 'forwardedAs') {\n      propsForElement.as = computedProps[key];\n    } else if (!propFilterFn || propFilterFn(key, validAttr)) {\n      // Don't pass through non HTML tags through to HTML elements\n      propsForElement[key] = computedProps[key];\n    }\n  }\n\n  if (props.style && attrs.style !== props.style) {\n    propsForElement.style = { ...props.style, ...attrs.style };\n  }\n\n  propsForElement.className = Array.prototype\n    .concat(\n      foldedComponentIds,\n      styledComponentId,\n      generatedClassName !== styledComponentId ? generatedClassName : null,\n      props.className,\n      attrs.className\n    )\n    .filter(Boolean)\n    .join(' ');\n\n  propsForElement.ref = refToForward;\n\n  return createElement(elementToBeCreated, propsForElement);\n}\n\nexport default function createStyledComponent(\n  target: Target | StyledComponentWrapper<*, *>,\n  options: Object,\n  rules: RuleSet\n) {\n  const isTargetStyledComp = isStyledComponent(target);\n  const isCompositeComponent = !isTag(target);\n\n  const {\n    displayName = generateDisplayName(target),\n    componentId = generateId(options.displayName, options.parentComponentId),\n    attrs = EMPTY_ARRAY,\n  } = options;\n\n  const styledComponentId =\n    options.displayName && options.componentId\n      ? `${escape(options.displayName)}-${options.componentId}`\n      : options.componentId || componentId;\n\n  // fold the underlying StyledComponent attrs up (implicit extend)\n  const finalAttrs =\n    // $FlowFixMe\n    isTargetStyledComp && target.attrs\n      ? Array.prototype.concat(target.attrs, attrs).filter(Boolean)\n      : attrs;\n\n  // eslint-disable-next-line prefer-destructuring\n  let shouldForwardProp = options.shouldForwardProp;\n\n  // $FlowFixMe\n  if (isTargetStyledComp && target.shouldForwardProp) {\n    if (shouldForwardProp) {\n      // compose nested shouldForwardProp calls\n      shouldForwardProp = (prop, filterFn) =>\n        // $FlowFixMe\n        target.shouldForwardProp(prop, filterFn) && options.shouldForwardProp(prop, filterFn);\n    } else {\n      // eslint-disable-next-line prefer-destructuring\n      shouldForwardProp = target.shouldForwardProp;\n    }\n  }\n\n  const componentStyle = new ComponentStyle(\n    isTargetStyledComp\n      ? // fold the underlying StyledComponent rules up (implicit extend)\n        // $FlowFixMe\n        target.componentStyle.rules.concat(rules)\n      : rules,\n    styledComponentId\n  );\n\n  /**\n   * forwardRef creates a new interim component, which we'll take advantage of\n   * instead of extending ParentComponent to create _another_ interim class\n   */\n  let WrappedStyledComponent;\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const forwardRef = (props, ref) => useStyledComponentImpl(WrappedStyledComponent, props, ref);\n\n  forwardRef.displayName = displayName;\n\n  // $FlowFixMe this is a forced cast to merge it StyledComponentWrapperProperties\n  WrappedStyledComponent = (React.forwardRef(forwardRef): StyledComponentWrapper<*, *>);\n\n  WrappedStyledComponent.attrs = finalAttrs;\n  WrappedStyledComponent.componentStyle = componentStyle;\n  WrappedStyledComponent.displayName = displayName;\n  WrappedStyledComponent.shouldForwardProp = shouldForwardProp;\n\n  // this static is used to preserve the cascade of static classes for component selector\n  // purposes; this is especially important with usage of the css prop\n  WrappedStyledComponent.foldedComponentIds = isTargetStyledComp\n    ? // $FlowFixMe\n      Array.prototype.concat(target.foldedComponentIds, target.styledComponentId)\n    : EMPTY_ARRAY;\n\n  WrappedStyledComponent.styledComponentId = styledComponentId;\n\n  // fold the underlying StyledComponent target up since we folded the styles\n  WrappedStyledComponent.target = isTargetStyledComp\n    ? // $FlowFixMe\n      target.target\n    : target;\n\n  // $FlowFixMe\n  WrappedStyledComponent.withComponent = function withComponent(tag: Target) {\n    const { componentId: previousComponentId, ...optionsToCopy } = options;\n\n    const newComponentId =\n      previousComponentId &&\n      `${previousComponentId}-${isTag(tag) ? tag : escape(getComponentName(tag))}`;\n\n    const newOptions = {\n      ...optionsToCopy,\n      attrs: finalAttrs,\n      componentId: newComponentId,\n    };\n\n    return createStyledComponent(tag, newOptions, rules);\n  };\n\n  // $FlowFixMe\n  Object.defineProperty(WrappedStyledComponent, 'defaultProps', {\n    get() {\n      return this._foldedDefaultProps;\n    },\n\n    set(obj) {\n      // $FlowFixMe\n      this._foldedDefaultProps = isTargetStyledComp ? merge({}, target.defaultProps, obj) : obj;\n    },\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    checkDynamicCreation(displayName, styledComponentId);\n\n    WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(\n      displayName,\n      styledComponentId\n    );\n  }\n\n  // $FlowFixMe\n  WrappedStyledComponent.toString = () => `.${WrappedStyledComponent.styledComponentId}`;\n\n  if (isCompositeComponent) {\n    hoist(WrappedStyledComponent, (target: any), {\n      // all SC-specific things should not be hoisted\n      attrs: true,\n      componentStyle: true,\n      displayName: true,\n      foldedComponentIds: true,\n      shouldForwardProp: true,\n      self: true,\n      styledComponentId: true,\n      target: true,\n      withComponent: true,\n    });\n  }\n\n  return WrappedStyledComponent;\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport removeAccents from 'remove-accents';\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 9,\n  EQUAL: 8,\n  STARTS_WITH: 7,\n  WORD_STARTS_WITH: 6,\n  STRING_CASE: 5,\n  STRING_CASE_ACRONYM: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\nvar caseRankings = {\n  CAMEL: 0.8,\n  PASCAL: 0.6,\n  KEBAB: 0.4,\n  SNAKE: 0.2,\n  NO_CASE: 0\n};\nmatchSorter.rankings = rankings;\nmatchSorter.caseRankings = caseRankings;\n\nvar defaultBaseSortFn = function (a, b) {\n  return String(a.rankedItem).localeCompare(b.rankedItem);\n};\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\n\n\nfunction matchSorter(items, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // not performing any search/sort if value(search term) is empty\n  if (!value) return items;\n  var _options = options,\n      keys = _options.keys,\n      _options$threshold = _options.threshold,\n      threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold,\n      _options$baseSort = _options.baseSort,\n      baseSort = _options$baseSort === void 0 ? defaultBaseSortFn : _options$baseSort;\n  var matchedItems = items.reduce(reduceItemsToRanked, []);\n  return matchedItems.sort(function (a, b) {\n    return sortRankedItems(a, b, baseSort);\n  }).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n\n  function reduceItemsToRanked(matches, item, index) {\n    var _getHighestRanking = getHighestRanking(item, keys, value, options),\n        rankedItem = _getHighestRanking.rankedItem,\n        rank = _getHighestRanking.rank,\n        keyIndex = _getHighestRanking.keyIndex,\n        _getHighestRanking$ke = _getHighestRanking.keyThreshold,\n        keyThreshold = _getHighestRanking$ke === void 0 ? threshold : _getHighestRanking$ke;\n\n    if (rank >= keyThreshold) {\n      matches.push({\n        rankedItem: rankedItem,\n        item: item,\n        rank: rank,\n        index: index,\n        keyIndex: keyIndex\n      });\n    }\n\n    return matches;\n  }\n}\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\n\n\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedItem: item,\n      rank: getMatchRanking(item, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        rankedItem = _ref2.rankedItem,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n    var newRank = getMatchRanking(itemValue, value, options);\n    var newRankedItem = rankedItem;\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n      newRankedItem = itemValue;\n    }\n\n    return {\n      rankedItem: newRankedItem,\n      rank: rank,\n      keyIndex: keyIndex,\n      keyThreshold: keyThreshold\n    };\n  }, {\n    rank: rankings.NO_MATCH,\n    keyIndex: -1,\n    keyThreshold: options.threshold\n  });\n}\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\n\n\nfunction getMatchRanking(testString, stringToRank, options) {\n  /* eslint complexity:[2, 12] */\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  } // case sensitive equals\n\n\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  }\n\n  var caseRank = getCaseRanking(testString);\n  var isPartial = isPartialOfCase(testString, stringToRank, caseRank);\n  var isCasedAcronym = isCaseAcronym(testString, stringToRank, caseRank); // Lower casing before further comparison\n\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n  if (testString === stringToRank) {\n    return rankings.EQUAL + caseRank;\n  } // starts with\n\n\n  if (testString.indexOf(stringToRank) === 0) {\n    return rankings.STARTS_WITH + caseRank;\n  } // word starts with\n\n\n  if (testString.indexOf(\" \" + stringToRank) !== -1) {\n    return rankings.WORD_STARTS_WITH + caseRank;\n  } // is a part inside a cased string\n\n\n  if (isPartial) {\n    return rankings.STRING_CASE + caseRank;\n  } // is acronym for a cased string\n\n\n  if (caseRank > 0 && isCasedAcronym) {\n    return rankings.STRING_CASE_ACRONYM + caseRank;\n  } // contains\n\n\n  if (testString.indexOf(stringToRank) !== -1) {\n    return rankings.CONTAINS + caseRank;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  } // acronym\n\n\n  if (getAcronym(testString).indexOf(stringToRank) !== -1) {\n    return rankings.ACRONYM + caseRank;\n  } // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n  return getClosenessRanking(testString, stringToRank);\n}\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\n\n\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n/**\n * Returns a score base on the case of the testString\n * @param {String} testString - the string to test against\n * @returns {Number} the number of the ranking,\n * based on the case between 0 and 1 for how the testString matches the case\n */\n\n\nfunction getCaseRanking(testString) {\n  var containsUpperCase = testString.toLowerCase() !== testString;\n  var containsDash = testString.indexOf('-') >= 0;\n  var containsUnderscore = testString.indexOf('_') >= 0;\n\n  if (!containsUpperCase && !containsUnderscore && containsDash) {\n    return caseRankings.KEBAB;\n  }\n\n  if (!containsUpperCase && containsUnderscore && !containsDash) {\n    return caseRankings.SNAKE;\n  }\n\n  if (containsUpperCase && !containsDash && !containsUnderscore) {\n    var startsWithUpperCase = testString[0].toUpperCase() === testString[0];\n\n    if (startsWithUpperCase) {\n      return caseRankings.PASCAL;\n    }\n\n    return caseRankings.CAMEL;\n  }\n\n  return caseRankings.NO_CASE;\n}\n/**\n * Returns whether the stringToRank is one of the case parts in the testString (works with any string case)\n * @example\n * // returns true\n * isPartialOfCase('helloWorld', 'world', caseRankings.CAMEL)\n * @example\n * // returns false\n * isPartialOfCase('helloWorld', 'oworl', caseRankings.CAMEL)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Number} caseRanking - the ranking score based on case of testString\n * @returns {Boolean} whether the stringToRank is one of the case parts in the testString\n */\n\n\nfunction isPartialOfCase(testString, stringToRank, caseRanking) {\n  var testIndex = testString.toLowerCase().indexOf(stringToRank.toLowerCase());\n\n  switch (caseRanking) {\n    case caseRankings.SNAKE:\n      return testString[testIndex - 1] === '_';\n\n    case caseRankings.KEBAB:\n      return testString[testIndex - 1] === '-';\n\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      return testIndex !== -1 && testString[testIndex] === testString[testIndex].toUpperCase();\n\n    default:\n      return false;\n  }\n}\n/**\n * Check if stringToRank is an acronym for a partial case\n * @example\n * // returns true\n * isCaseAcronym('super_duper_file', 'sdf', caseRankings.SNAKE)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the acronym to test\n * @param {Number} caseRank - the ranking of the case\n * @returns {Boolean} whether the stringToRank is an acronym for the testString\n */\n\n\nfunction isCaseAcronym(testString, stringToRank, caseRank) {\n  var splitValue = null;\n\n  switch (caseRank) {\n    case caseRankings.SNAKE:\n      splitValue = '_';\n      break;\n\n    case caseRankings.KEBAB:\n      splitValue = '-';\n      break;\n\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      splitValue = /(?=[A-Z])/;\n      break;\n\n    default:\n      splitValue = null;\n  }\n\n  var splitTestString = testString.split(splitValue);\n  return stringToRank.toLowerCase().split('').reduce(function (correct, char, charIndex) {\n    var splitItem = splitTestString[charIndex];\n    return correct && splitItem && splitItem[0].toLowerCase() === char;\n  }, true);\n}\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\n\n\nfunction getClosenessRanking(testString, stringToRank) {\n  var matchingInOrderCharCount = 0;\n  var charNumber = 0;\n\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index; j < string.length; j++) {\n      var stringChar = string[j];\n\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  function getRanking(spread) {\n    var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    var ranking = rankings.MATCHES + inOrderPercentage * (1 / spread);\n    return ranking;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n\n  charNumber = firstIndex;\n\n  for (var i = 1; i < stringToRank.length; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n */\n\n\nfunction sortRankedItems(a, b, baseSort) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRank = a.rank,\n      aKeyIndex = a.keyIndex;\n  var bRank = b.rank,\n      bKeyIndex = b.keyIndex;\n\n  if (aRank === bRank) {\n    if (aKeyIndex === bKeyIndex) {\n      // use the base sort function as a tie-breaker\n      return baseSort(a, b);\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\n\n\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n  value = \"\" + value; // toString\n\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n\n  return value;\n}\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\n\n\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key;\n  }\n\n  var value;\n\n  if (typeof key === 'function') {\n    value = key(item); // eslint-disable-next-line no-negated-condition\n  } else if (key.indexOf('.') !== -1) {\n    // handle nested keys\n    value = key.split('.').reduce(function (itemObj, nestedKey) {\n      return itemObj ? itemObj[nestedKey] : null;\n    }, item);\n  } else {\n    value = item[key];\n  } // concat because `value` can be a string or an array\n  // eslint-disable-next-line\n\n\n  return value != null ? [].concat(value) : null;\n}\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param {Object} item - the item from which the values will be retrieved\n * @param {Array} keys - the keys to use to retrieve the values\n * @return {Array} objects with {itemValue, attributes}\n */\n\n\nfunction getAllValuesToRank(item, keys) {\n  return keys.reduce(function (allVals, key) {\n    var values = getItemValues(item, key);\n\n    if (values) {\n      values.forEach(function (itemValue) {\n        allVals.push({\n          itemValue: itemValue,\n          attributes: getKeyAttributes(key)\n        });\n      });\n    }\n\n    return allVals;\n  }, []);\n}\n/**\n * Gets all the attributes for the given key\n * @param {Object|String} key - the key from which the attributes will be retrieved\n * @return {Object} object containing the key's attributes\n */\n\n\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    key = {\n      key: key\n    };\n  }\n\n  return _extends({\n    maxRanking: Infinity,\n    minRanking: -Infinity\n  }, key);\n}\n\nexport default matchSorter;\nexport { rankings };\n","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultColumn = {\n  Cell: ({ value = '' }) => value,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import React from 'react'\nimport { defaultColumn } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: () => <>&nbsp;</>,\n    Footer: () => <>&nbsp;</>,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(allColumns, defaultColumn) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(originalRow, rowIndex, row)\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return (min + max) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n  \n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Get the columnValues to aggregate\n        const groupedValues = groupedRows.map(row => row.values[column.id])\n\n        // Get the columnValues to aggregate\n        const leafValues = leafRows.map(row => {\n          let columnValue = row.values[column.id]\n\n          if (!depth && column.aggregateValue) {\n            const aggregateValueFn =\n              typeof column.aggregateValue === 'function'\n                ? column.aggregateValue\n                : userAggregations[column.aggregateValue] ||\n                  aggregations[column.aggregateValue]\n\n            if (!aggregateValueFn) {\n              console.info({ column })\n              throw new Error(\n                `React Table: Invalid column.aggregateValue option for column listed above`\n              )\n            }\n\n            columnValue = aggregateValueFn(columnValue, row, column)\n          }\n          return columnValue\n        })\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && row.canExpand\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length < 1) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true } = instance\n\n    // Join the ids of deep rows\n    // to make a key, then manage all of the keys\n    // in a flat object\n    const row = rowsById[id]\n    const isSelected = row.isSelected\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && row.subRows) {\n        return row.subRows.forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  if (row.subRows && row.subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    row.subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = originalRow => ({})\nconst defaultInitialCellStateAccessor = originalRow => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row.original) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row.original)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(row.original)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'ew-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default index;\n"],"sourceRoot":""}