{"version":3,"sources":["components/Table.jsx","pages/FlowCashReportGeneralPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","getCellProps","autoRemove","val","Table","FlowCashReportGeneralPage","props","useState","years","setYears","yearSelect","setYearSelect","dataGeneral","setDataGeneral","displayLoading","setDisplayLoading","useEffect","handleFetchData","axios","get","API_URL","then","result","year","handleGetDataGeneral","catch","err","tokenExpired","yearValue","sm","md","lg","inputSelect","handleChange","v","xs","block","wb","xlsx","book_new","bodyTable","Props","Title","Subject","Author","CreatedDate","moment","format","SheetNames","push","ingresoArray","ingresos","formatNumber","total","unshift","egresoArray","egresos","ingresoEgresoArray","ingresoMenosEgreso","totalesArray","totales","ws","aoa_to_sheet","Sheets","wbout","bookType","datos","s2ab","saveAs","Blob","toast","error","defaultProps","required","name","label","messageErrors","cols"],"mappings":"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","file":"static/js/48.440a34db.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n}\r\n\r\nexport default Table\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form\r\n} from 'react-bootstrap'\r\nimport Table from 'components/Table'\r\nimport {\r\n  FaRegFileExcel\r\n} from 'react-icons/fa'\r\nimport axios from 'axios'\r\nimport InputField from 'components/input/InputComponent'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport { formatNumber, s2ab } from 'utils/functions'\r\nimport * as moment from 'moment-timezone'\r\nimport { saveAs } from 'file-saver'\r\nimport * as xlsx from 'xlsx'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nlet valueIncrementTotal = 0\r\n\r\nconst FlowCashReportGeneralPage = (props) => {\r\n\r\n  const [years, setYears] = useState([])\r\n  const [yearSelect, setYearSelect] = useState('')\r\n  const [dataGeneral, setDataGeneral] = useState(null)\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    handleFetchData()\r\n  },[])\r\n\r\n\r\n  const handleChange = e => {\r\n    setYearSelect(e.target.value)\r\n    handleGetDataGeneral(e.target.value)\r\n  }\r\n\r\n  const handleFetchData = () => {\r\n\r\n    axios.get(API_URL+'flow_cash_get_years').then(result => {\r\n      setYears(result.data)\r\n\r\n      if(result.data.length > 0){\r\n        setYearSelect(result.data[0].year)\r\n        handleGetDataGeneral(result.data[0].year)\r\n      }\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const handleGetDataGeneral = yearValue => {\r\n    setDisplayLoading(true)\r\n    axios.get(API_URL+'flow_cash_data_general/'+yearValue).then(result => {\r\n      setDataGeneral(result.data)\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const exportToExcel = () => {\r\n    if(!dataGeneral){\r\n      toast.error('Error, no hay datos para realizar el excel')\r\n    }else{\r\n      let wb = xlsx.utils.book_new()\r\n      let bodyTable = [['','Mes1','Mes2','Mes3','Mes4','Mes5','Mes6','Mes7','Mes8','Mes9','Mes10','Mes11','Mes12','Totales']]\r\n\r\n      wb.Props = {\r\n        Title: \"Reporte de General\",\r\n        Subject: \"Exportación de Data\",\r\n        Author: 'Aidy tecnology',\r\n        CreatedDate: moment().format('YYYY-MM-DD')\r\n      };\r\n      wb.SheetNames.push(\"Reporte General\");\r\n      let ingresoArray = dataGeneral.ingresos.map(v => formatNumber(v.total,2,',','.'))\r\n      ingresoArray.unshift('Ingresos')\r\n      let egresoArray = dataGeneral.egresos.map(v => formatNumber(v.total,2,',','.'))\r\n      egresoArray.unshift('Egresos')\r\n      let ingresoEgresoArray = dataGeneral.ingresoMenosEgreso.map(v => formatNumber(v,2,',','.'))\r\n      ingresoEgresoArray.unshift('Ingresos - Egresos')\r\n      let totalesArray = dataGeneral.totales.map(v => formatNumber(v,2,',','.'))\r\n      totalesArray.unshift('Saldo Final de Caja')\r\n\r\n      bodyTable.push(ingresoArray)\r\n      bodyTable.push(egresoArray)\r\n      bodyTable.push(ingresoEgresoArray)\r\n      bodyTable.push(totalesArray)\r\n\r\n      var ws = xlsx.utils.aoa_to_sheet(bodyTable);\r\n      wb.Sheets[\"Reporte General\"] = ws;\r\n      var wbout = xlsx.write(wb, {bookType:'xlsx',  type: 'binary'});\r\n      let datos = s2ab(wbout)\r\n      saveAs(new Blob([datos],{type:\"application/octet-stream\"}), 'Reporte General'+moment().format('DD-MM-YYYY')+'.xlsx')\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {displayLoading ? (\r\n        <Container>\r\n          <LoadingComponent />\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"containerDiv\">\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal\">Reporte General de Caja</h4>\r\n            </Col>\r\n          </Row>\r\n          <hr/>\r\n          <Row className=\"justify-content-center\">\r\n            <InputField\r\n              {...props.inputSelect}\r\n              handleChange={handleChange}\r\n              value={yearSelect}\r\n            >\r\n              <option value=''>--Seleccione--</option>\r\n              {years.map((v,i) => (\r\n                <option key={i} value={v.year}>{v.year}</option>\r\n              ))}\r\n            </InputField>\r\n            <Col sm={4} md={4} lg={4} xs={6}>\r\n              <br/>\r\n              <Button size=\"sm\" variant=\"success\" block={true} onClick={exportToExcel}>Exportar a Excel <FaRegFileExcel /></Button>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          {\r\n            dataGeneral ? (\r\n\r\n              <Row>\r\n                <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n                  <table className=\"table table-bordered\">\r\n                    <thead>\r\n                      <tr style={{ backgroundColor: 'rgb(28, 33, 93)', color: 'white'}}>\r\n                        <th className=\"text-center\"></th>\r\n                        <th className=\"text-center\">Mes1</th>\r\n                        <th className=\"text-center\">Mes2</th>\r\n                        <th className=\"text-center\">Mes 3</th>\r\n                        <th className=\"text-center\">Mes 4</th>\r\n                        <th className=\"text-center\">Mes 5</th>\r\n                        <th className=\"text-center\">Mes 6</th>\r\n                        <th className=\"text-center\">Mes 7</th>\r\n                        <th className=\"text-center\">Mes 8</th>\r\n                        <th className=\"text-center\">Mes 9</th>\r\n                        <th className=\"text-center\">Mes 10</th>\r\n                        <th className=\"text-center\">Mes 11</th>\r\n                        <th className=\"text-center\">Mes 12</th>\r\n                        <th className=\"text-center\">Totales</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"text-center\">\r\n\r\n                      <tr>\r\n                        <td><b>Total Ingreso</b></td>\r\n                        {\r\n                          dataGeneral.ingresos.map((v,i) => (\r\n                            <td key={i}>{formatNumber(v.total,2,',','.')}</td>\r\n                          ))\r\n                        }\r\n                      </tr>\r\n                      <tr>\r\n                        <td><b>Total Egreso</b></td>\r\n                          {\r\n                            dataGeneral.egresos.map((v,i) => (\r\n                              <td key={i}>{formatNumber(v.total,2,',','.')}</td>\r\n                            ))\r\n                          }\r\n                      </tr>\r\n                      <tr>\r\n                        <td><b>Ingresos - Egresos</b></td>\r\n                          {\r\n                            dataGeneral.ingresoMenosEgreso.map((v,i) => (\r\n                              <td key={i}>{formatNumber(v,2,',','.')}</td>\r\n                            ))\r\n                          }\r\n                      </tr>\r\n                      <tr style={{ backgroundColor : 'rgb(244, 240, 194)', color: 'rgb(19, 20, 20)' }}>\r\n                        <td><b>Saldo Final de Caja</b></td>\r\n                        {\r\n                          dataGeneral.totales.map((v,i) => (\r\n                            <td key={i}>{formatNumber(v,2,',','.')}</td>\r\n                          ))\r\n                        }\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </Col>\r\n              </Row>\r\n\r\n            ) : (\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <h4 className=\"text-center\">Sin Ingresos o Egresos que Mostrar...</h4>\r\n                </Col>\r\n              </Row>\r\n            )\r\n          }\r\n        </Container>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nFlowCashReportGeneralPage.defaultProps = {\r\n  inputSelect : {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'year',\r\n    label : 'Año del reporte',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  }\r\n}\r\n\r\nexport default FlowCashReportGeneralPage\r\n"],"sourceRoot":""}