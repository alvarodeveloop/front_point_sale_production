{"version":3,"sources":["components/Table.jsx","../../src/FileSaver.js","components/modals/ModalInvoiceActions.jsx","components/StadisticsInvoiceComponent.jsx","pages/GuideDispatchSearchPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","position","getCellProps","autoRemove","val","Table","console","status","MouseEvent","document","window","self","global","HTMLAnchorElement","b","name","location","setTimeout","f","navigator","autoBom","test","Blob","open","saveAs","module","ModalInvoiceActions","props","show","isShow","onHide","aria-labelledby","centered","Header","closeButton","Title","isLoading","Body","cotization","Fragment","isInvoice","sm","md","lg","seeDetailCotization","block","goToBond","printInvoice","noteCredit","isGuide","goToInvoice","anulateInvoice","Footer","optionsBar","responsive","maintainAspectRatio","animation","duration","hover","animationDuration","responsiveAnimationDuration","options_line","scales","yAxes","ticks","beginAtZero","data_donut_ss_status","labels","datasets","hoverBackgroundColor","data_donut_total_status","data_donut_status_bonds","data_bar_failure_tipology","label","borderColor","borderWidth","hoverBorderColor","data_line_by_year","fill","StadisticsInvoiceComponent","useEffect","redraw","handleDataDonutSsStatus","setDataForm","dataForm","statusCotization","statuses","forEach","v","push","parseFloat","total","ARRAY_COLORS","statusesBonds","bondsByMonth","mes","invoiceByYear","item","year","totalByStatus","handleDisplayFilter","xs","Toggle","as","Card","eventKey","Collapse","displayFilter","required","messageErrors","cols","date_desde","handleChange","date_hasta","handleStadistics","src","require","width","options","colSpan","Object","configGeneral","simbolo_moneda","showPriceWithDecimals","cotizacionColumns","connect","id_branch_office","enterpriseSucursal","id_enterprise","configs","config","configStore","useState","displayLoading","setDisplayLoading","invoiceData","setInvoiceData","cotizationDetail","setCotizationDetail","isOpenModalDetail","setIsOpenModalDetail","setRedraw","setStatusCotization","setDisplayFilter","invoiceAction","setInvoiceAction","isOpenModalAction","setIsOpenModalAction","accessor","Cell","props1","original","placement","overlay","onHideModalAction","ref","name_contact","city_client","comuna_client","address_client","comment","business_name_client","moment","date_issue_invoice","tz","format","products","name_product","price","quantity","total_product","total_gastos","total_iva","total_balance","total_bond","debit_balance","is_products_paid","total_quantity_products_paid","total_quantity_products","layoutHelpers","toggleCollapsed","fetchData","originalCoti","objectPost","assign","promises","axios","get","API_URL","post","Promise","all","then","result","catch","err","tokenExpired","handleModalDetail","confirmAnulateInvoice","toast","info","put","success","fluid","history","replace","business_name_transmitter","rut_transmitter","address_transmitter","email_transmitter","phone_transmitter","country_transmitter","rut_client","spin_client","phone_contact","email_contact","name_seller","phone_seller","email_seller","category","description","formatNumber","discount","method","method_sale","parseInt","is_neto","gastos","amount","refs","type_document","ref_invoice","ind","date_ref","reason_ref","type_code","discount_global_amount","total_with_iva","type_transfer","name_pdf","datos","confirmAlert","customUI","onClose"],"mappings":"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","file":"static/js/36.e6624585.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table_responsive_eddit\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td style={{position: \"relative\"}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n}\r\n\r\nexport default Table\r\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile)\n  : 'download' in HTMLAnchorElement.prototype\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari)) && typeof FileReader === 'object') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport 'styles/components/modalComponents.css'\r\nimport {Modal,Row,Col,Button} from 'react-bootstrap'\r\nimport {FaEye,FaFilePdf,FaBan,FaFileInvoice} from 'react-icons/fa'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nconst ModalInvoiceActions = (props) => {\r\n  return (\r\n    <Modal\r\n      show={props.isShow}\r\n      onHide={props.onHide}\r\n      size=\"xl\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton className=\"header_dark\">\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Acciones Disponibles\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      {props.isLoading ? (\r\n        <Modal.Body>\r\n          <LoadingComponent />\r\n        </Modal.Body>\r\n      ) : (\r\n        <Modal.Body>\r\n          {props.cotization.status >= 1 && props.cotization.status <= 3 ? (\r\n            <React.Fragment>\r\n              <h5 className=\"title_principal\">Acciones generales</h5>\r\n              <hr/>\r\n              {props.isInvoice ? (\r\n                <Row className=\"justify-content-center\">\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToBond(props.cotization)} block={true}>Pagos <FaFilePdf /></Button>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printInvoice(props.cotization)} block={true}>Ver factura pdf <FaFilePdf /></Button>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.noteCredit(props.cotization)} block={true}>Nota de crédito o Debito <FaFilePdf /></Button>\r\n                  </Col>\r\n                </Row>\r\n              ) : props.isGuide ? (\r\n                <Row className=\"justify-content-center\">\r\n                  <Col sm={4} md={4} lg={4}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                  </Col>\r\n                  <Col sm={4} md={4} lg={4}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToInvoice(props.cotization.id)} block={true}>Facturar <FaFileInvoice /></Button>\r\n                  </Col>\r\n                  <Col sm={4} md={4} lg={4}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printInvoice(props.cotization)} block={true}>Ver factura pdf <FaFilePdf /></Button>\r\n                  </Col>\r\n                </Row>\r\n              ) : (\r\n                <Row className=\"justify-content-center\">\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToBond(props.cotization)} block={true}>Pagos <FaFilePdf /></Button>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printInvoice(props.cotization)} block={true}>Ver factura pdf <FaFilePdf /></Button>\r\n                  </Col>\r\n                  {props.cotization.type == 2 ? (\r\n                    <Col sm={3} md={3} lg={3}>\r\n                      <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printInvoice(props.cotization,3)} block={true}>Generar nueva factura pdf <FaFilePdf /></Button>\r\n                    </Col>\r\n                  ) : ''}\r\n                </Row>\r\n              )}\r\n              <br/>\r\n              {props.cotization.status != 2 ? (\r\n                <Row className=\"justify-content-center\">\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <h5 className=\"title_principal\">Anular Documento</h5>\r\n                    <hr/>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.anulateInvoice(props.cotization)} block={true}>Anular Documento <FaBan /></Button>\r\n                  </Col>\r\n                </Row>\r\n              ) : ''}\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <h5 className=\"title_principal\">Acciones generales</h5>\r\n              <hr/>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printInvoice(props.cotization)} block={true}>Ver factura pdf <FaFilePdf /></Button>\r\n                </Col>\r\n              </Row>\r\n            </React.Fragment>\r\n          )}\r\n        </Modal.Body>\r\n      )}\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" size=\"md\" onClick={props.onHide}>Cerrar</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nModalInvoiceActions.propTypes = {\r\n  isShow: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  cotization: PropTypes.object.isRequired,\r\n  printInvoice: PropTypes.func.isRequired,\r\n  goToBond: PropTypes.func,\r\n  noteCredit: PropTypes.func,\r\n  anulateInvoice: PropTypes.func.isRequired,\r\n  seeDetailCotization: PropTypes.func.isRequired,\r\n  goToInvoice: PropTypes.func,\r\n  isInvoice: PropTypes.bool,\r\n  isGuide: PropTypes.bool,\r\n  isLoading : PropTypes.bool,\r\n}\r\n\r\nexport default ModalInvoiceActions\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  Badge,\r\n  Accordion,\r\n  Card,\r\n  Image\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { showPriceWithDecimals } from 'utils/functions'\r\nimport { FaPlusCircle, FaChartLine } from \"react-icons/fa\";\r\nimport * as moment from 'moment-timezone'\r\nimport {Doughnut,Bar,Line} from 'react-chartjs-2';\r\nimport { ARRAY_COLORS, ARRAY_MONTH } from 'utils/constants'\r\n\r\nlet optionsBar = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    duration: 0\r\n  },\r\n  hover: {\r\n    animationDuration: 0\r\n  },\r\n  responsiveAnimationDuration: 0,\r\n}\r\n\r\nconst options_line = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  maintainAspectRatio: false,\r\n}\r\n\r\nlet data_donut_ss_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nlet data_donut_total_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nlet data_donut_status_bonds = {\r\n  labels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n}\r\n\r\nlet data_bar_failure_tipology = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'Monto acumulado de pagos hechos por mes',\r\n      backgroundColor: 'rgb(15, 13, 74)',\r\n      borderColor: 'rgb(27, 13, 74)',\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: 'rgb(15, 13, 74)',\r\n      hoverBorderColor: 'rgb(27, 13, 74)',\r\n      data: []\r\n    }\r\n  ]\r\n};\r\n\r\nlet data_line_by_year = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'Cantidad facturada por años',\r\n      data: [],\r\n      fill: false,\r\n      backgroundColor: 'rgb(125, 81, 52)',\r\n      borderColor: 'rgb(99, 56, 21)',\r\n    },\r\n  ],\r\n}\r\n\r\nconst  StadisticsInvoiceComponent = (props) => {\r\n\r\n  useEffect(() => {\r\n    if(props.redraw){\r\n\r\n      data_donut_ss_status = {\r\n      \tlabels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      };\r\n\r\n      data_donut_status_bonds = {\r\n        labels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      }\r\n\r\n      data_bar_failure_tipology = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Monto acumulado de pagos hechos por mes',\r\n            backgroundColor: 'rgb(15, 13, 74)',\r\n            borderColor: 'rgb(27, 13, 74)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgb(15, 13, 74)',\r\n            hoverBorderColor: 'rgb(27, 13, 74)',\r\n            data: []\r\n          }\r\n        ]\r\n      };\r\n\r\n      data_line_by_year =  {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Cantidad facturada por años',\r\n            data: [],\r\n            fill: false,\r\n            backgroundColor: 'rgb(125, 81, 52)',\r\n            borderColor: 'rgb(99, 56, 21)',\r\n          },\r\n        ],\r\n      }\r\n\r\n      data_donut_total_status = {\r\n      \tlabels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      };\r\n\r\n      handleDataDonutSsStatus()\r\n    }\r\n  },[props.redraw])\r\n\r\n  const onChange = e => {\r\n    props.setDataForm({...props.dataForm,[e.target.name] : e.target.value})\r\n  }\r\n\r\n  const handleDataDonutSsStatus = () => {\r\n    props.statusCotization.statuses.forEach((v, i) => {\r\n      data_donut_ss_status.labels.push(v.status)\r\n      data_donut_ss_status.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_ss_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_ss_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n    props.statusCotization.statusesBonds.forEach((v, i) => {\r\n      data_donut_status_bonds.labels.push(v.status)\r\n      data_donut_status_bonds.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_status_bonds.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_status_bonds.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n    props.statusCotization.bondsByMonth.forEach((v, i) => {\r\n      data_bar_failure_tipology.labels.push(v.mes)\r\n      data_bar_failure_tipology.datasets[0].data.push(v.total)\r\n    });\r\n\r\n    props.statusCotization.invoiceByYear.forEach((item, i) => {\r\n      data_line_by_year.labels.push(item.year)\r\n      data_line_by_year.datasets[0].data.push(item.total)\r\n    });\r\n\r\n    props.statusCotization.totalByStatus.forEach((v, i) => {\r\n      data_donut_total_status.labels.push(v.name)\r\n      data_donut_total_status.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_total_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_total_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n  }\r\n\r\n  const handleStadistics = () => {\r\n    props.handleStadistics()\r\n  }\r\n\r\n  const handleDisplayFilter = filter => {\r\n    props.handleDisplayFilter(filter)\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm={12} md={12} lg={12} xs={12}>\r\n        <Accordion>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"header_card\">\r\n              <b>Estadísticas</b> <FaChartLine />\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body>\r\n                <Row className=\"justify-content-center\">\r\n                  {props.displayFilter == 1 ? (\r\n                    <Col sm={2} md={2} lg={2}>\r\n                      <Button variant=\"secondary\" type=\"button\" size=\"sm\" block={true} onClick={() => handleDisplayFilter(2)}>Activar Filtros</Button>\r\n                    </Col>\r\n                  ) : props.displayFilter == 2 ? (\r\n                    <React.Fragment>\r\n                      <InputField\r\n                       type='date'\r\n                       label='Fecha desde'\r\n                       name='date_desde'\r\n                       required={true}\r\n                       messageErrors={[\r\n                       'Requerido*'\r\n                       ]}\r\n                       cols='col-md-3 col-lg-3 col-sm-3'\r\n                       value={props.dataForm.date_desde}\r\n                       handleChange={onChange}\r\n                      />\r\n                      <InputField\r\n                        type='date'\r\n                        label='Fecha Hasta'\r\n                        name='date_hasta'\r\n                        required={true}\r\n                        messageErrors={[\r\n                        'Requerido*'\r\n                        ]}\r\n                        cols='col-md-3 col-lg-3 col-sm-3'\r\n                        value={props.dataForm.date_hasta}\r\n                        handleChange={onChange}\r\n                      />\r\n                      <Col sm={3} md={3} lg={3}>\r\n                        <br/>\r\n                        <Button variant=\"danger\" type=\"button\" size=\"sm\" block={true} onClick={handleStadistics}>Buscar</Button>\r\n                      </Col>\r\n                      <Col sm={3} md={3} lg={3}>\r\n                        <br/>\r\n                        <Button variant=\"secondary\" type=\"button\" size=\"sm\" block={true} onClick={() => handleDisplayFilter(1)}>Ocultar Filtros</Button>\r\n                      </Col>\r\n                    </React.Fragment>\r\n\r\n                  ) : (\r\n                    <Col sm={12} md={12} lg={12} className=\"text-center\">\r\n                      <br/>\r\n                      <Image src={require('../assets/img/loading.gif')} width=\"30\" />\r\n                      <br/>\r\n                      Cargando datos...\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                  <Col sm={6} md={6} lg={6} style={{height: \"150px\"}}>\r\n                    <Doughnut data={data_donut_ss_status} redraw={props.redraw} options={optionsBar} />\r\n                  </Col>\r\n                  <Col sm={6} md={6} lg={6}>\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"text-center\" colSpan=\"2\" style={{backgroundColor: \"rgb(147, 52, 12)\", color: \"white\"}}>Monto acumulado por estados</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Estado</th>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"text-center\">\r\n                        {Object.keys(props.statusCotization).length > 0 ? (\r\n                          <React.Fragment>\r\n                            {props.statusCotization.statuses.map((v,i) => (\r\n                              <tr key={i}>\r\n                                <td>{v.status}</td>\r\n                                <td>{props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,v.total)}</td>\r\n                              </tr>\r\n                            ))}\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          <tr>\r\n                            <td colSpan=\"3\" className=\"text-center\">Sin registros...</td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={6} md={6} lg={6}>\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"text-center\" colSpan=\"2\" style={{backgroundColor: \"rgb(21, 26, 88)\", color: \"white\"}}>Monto pagado por estados</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Estado</th>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"text-center\">\r\n                        {Object.keys(props.statusCotization).length > 0 ? (\r\n                          <React.Fragment>\r\n                            {props.statusCotization.statusesBonds.map((v,i) => (\r\n                              <tr key={i}>\r\n                                <td>{v.status}</td>\r\n                                <td>{props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,v.total)}</td>\r\n                              </tr>\r\n                            ))}\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          <tr>\r\n                            <td colSpan=\"3\" className=\"text-center\">Sin registros...</td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </Col>\r\n                  <Col sm={6} md={6} lg={6} style={{height: \"150px\"}}>\r\n                    <Doughnut data={data_donut_status_bonds} redraw={props.redraw} options={optionsBar} />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={12} md={12} lg={12} style={{height: \"200px\"}}>\r\n                    <Bar\r\n                      data={data_bar_failure_tipology}\r\n                      options={optionsBar}\r\n                      redraw={props.redraw}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                  <Col sm={6} md={6} lg={6} style={{height: \"200px\"}}>\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"text-center\" colSpan=\"2\" style={{backgroundColor: \"rgb(147, 52, 12)\", color: \"white\"}}>Total {props.dataForm.type == 1 ? \"facturas\" : props.dataForm.type == 2 ? \"notas de ventas\" : \"boletas\"} realizadas</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Estado</th>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"text-center\">\r\n                        {Object.keys(props.statusCotization).length > 0 ? (\r\n                          <React.Fragment>\r\n                            {props.statusCotization.totalByStatus.map((v,i) => (\r\n                              <tr key={i}>\r\n                                <td>{v.name}</td>\r\n                                <td>{v.total}</td>\r\n                              </tr>\r\n                            ))}\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          <tr>\r\n                            <td colSpan=\"3\" className=\"text-center\">Sin registros...</td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </Col>\r\n                  <Col sm={6} md={6} lg={6} style={{height: \"150px\"}} className=\"text-center\">\r\n                    <Doughnut data={data_donut_total_status} redraw={props.redraw} options={optionsBar} />\r\n                  </Col>\r\n                </Row>\r\n                <br/><br/><br/>\r\n                <Row>\r\n                  <Col sm={12} md={12} lg={12} style={{height: \"200px\"}}>\r\n                    <Line data={data_line_by_year} options={options_line} />\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nStadisticsInvoiceComponent.propTypes = {\r\n  setDataForm: PropTypes.func.isRequired,\r\n  dataForm: PropTypes.object.isRequired,\r\n  redraw: PropTypes.bool.isRequired,\r\n  statusCotization: PropTypes.object.isRequired,\r\n  handleDisplayFilter: PropTypes.func.isRequired,\r\n  handleStadistics: PropTypes.func.isRequired,\r\n  displayFilter: PropTypes.any.isRequired,\r\n}\r\n\r\nexport default StadisticsInvoiceComponent\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Badge,\r\n  Modal\r\n} from 'react-bootstrap'\r\nimport Table from 'components/Table'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport { showPriceWithDecimals } from 'utils/functions'\r\nimport { FaPlusCircle, FaChartLine } from \"react-icons/fa\";\r\nimport FileSaver from 'file-saver'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport layoutHelpers from 'shared/layouts/helpers'\r\nimport * as moment from 'moment-timezone'\r\nimport { formatNumber } from 'utils/functions'\r\nimport 'styles/components/modalComponents.css'\r\nimport { connect } from 'react-redux'\r\nimport ModalInvoiceActions from 'components/modals/ModalInvoiceActions'\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport StadisticsInvoiceComponent from 'components/StadisticsInvoiceComponent'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\nlet cotizacionColumns = null\r\n\r\nconst GuideDispatchSearchPage = props => {\r\n\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n  const [invoiceData, setInvoiceData] = useState([])\r\n  const [cotizationDetail, setCotizationDetail] = useState({})\r\n  const [isOpenModalDetail, setIsOpenModalDetail] = useState(false)\r\n  const [redraw, setRedraw] = useState(false)\r\n  const [statusCotization, setStatusCotization] = useState({})\r\n  const [displayFilter,setDisplayFilter] = useState(1)\r\n  const [dataForm, setDataForm] = useState({\r\n    date_desde : '',\r\n    date_hasta: '',\r\n    type : 1\r\n  })\r\n  const [invoiceAction,setInvoiceAction] = useState({})\r\n  const [isOpenModalAction,setIsOpenModalAction] = useState(false)\r\n\r\n  useMemo(() => {\r\n    cotizacionColumns = [\r\n        {\r\n          Header: 'Referencia',\r\n          accessor: 'ref',\r\n          Cell: props1 => {\r\n            const {original} = props1.cell.row\r\n            return (\r\n              <OverlayTrigger placement={'bottom'} overlay={<Tooltip id=\"tooltip-disabled2\">Hacer click para acceder a las acciones de la guía</Tooltip>}>\r\n                <Button variant=\"link\" block={true} type=\"button\" size=\"sm\" onClick={() => onHideModalAction(original)}>{ original.ref }</Button>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Ref Cotización',\r\n          accessor: 'ref_cotizacion',\r\n        },\r\n        {\r\n          Header: 'Rut Cliente',\r\n          accessor: 'rut_client',\r\n        },\r\n        {\r\n          Header: 'Razón Social',\r\n          accessor: 'business_name_client',\r\n          Cell: props1 => {\r\n            const {original} = props1.cell.row\r\n            return(\r\n              <OverlayTrigger placement={'right'} overlay={\r\n              <Tooltip id=\"tooltip-disabled2\">\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"><b>Contacto</b> {original.name_contact ? original.name_contact : 'No posee'}</li>\r\n                  <li className=\"list-group-item\"><b>Ciudad</b> {original.city_client ? original.city_client : 'No posee'}</li>\r\n                  <li className=\"list-group-item\"><b>Comuna</b> {original.comuna_client ? original.comuna_client : 'No posee'}</li>\r\n                  <li className=\"list-group-item\"><b>Comuna</b> {original.address_client ? original.address_client : 'No posee'}</li>\r\n                  <li className=\"list-group-item\"><b>Comentario: </b> {original.comment}</li>\r\n                </ul>\r\n              </Tooltip>}>\r\n                <Button variant=\"link\" size=\"sm\" block={true} type=\"button\">{original.business_name_client}</Button>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Fecha-Emisión',\r\n          accessor: props1 => [moment(props1.date_issue_invoice).tz('America/Santiago').format('DD-MM-YYYY')],\r\n        },\r\n        {\r\n          Header: 'Status',\r\n          accessor: props1 => {\r\n            if(props1.status == 1){\r\n              return (<Badge variant=\"secondary\" className=\"font-badge\">Pendiente</Badge>)\r\n            }else if(props1.status == 2){\r\n              return (<Badge variant=\"secondary\" className=\"font-badge\">Vencida</Badge>)\r\n            }else if(props1.status == 3){\r\n              return (<Badge variant=\"secondary\" className=\"font-badge\">Pagada</Badge>)\r\n            }else{\r\n              return (<Badge variant=\"secondary\" className=\"font-badge\">Anulada</Badge>)\r\n            }\r\n          },\r\n        },\r\n        {\r\n          Header: 'Total Productos',\r\n          accessor: 'total_product',\r\n          Cell: props1 => {\r\n            return (\r\n              <OverlayTrigger placement={'left'} overlay={\r\n                <Tooltip id={\"tooltip-total_pagar\"+props1.cell.row.original.id}>\r\n                  <ul className=\"list-group\">\r\n                    {props1.cell.row.original.products.map((v,i) => (\r\n                      <li className=\"list-group-item\" key={i}>\r\n                        <b>Producto</b>: {v.name_product}<br/>\r\n                        <b>Precio</b> : {props.configGeneral ? props.configGeneral.simbolo_moneda : \"\"} {showPriceWithDecimals(props.configGeneral,v.price)}<br/>\r\n                        <b>Cantidad</b>: {v.quantity}</li>\r\n                    ))}\r\n                  </ul>\r\n                </Tooltip>}>\r\n                  <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                    {props.configGeneral.simbolo_moneda+showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_product)}\r\n                  </Badge>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total gastos',\r\n          accessor: 'total_gastos',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_gastos)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total Iva',\r\n          accessor: 'total_iva',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_iva)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total Balance',\r\n          accessor: 'total_balance',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_balance)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Abonado',\r\n          accessor: 'total_bond',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"danger\" className=\"font-badge\">\r\n                {props.configGeneral ? props.configGeneral.simbolo_moneda : ''}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_bond)}\r\n              </Badge>\r\n\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Saldo Deudor',\r\n          accessor: 'debit_balance',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"danger\" className=\"font-badge\">\r\n                {props.configGeneral ? props.configGeneral.simbolo_moneda : ''}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.debit_balance)}\r\n              </Badge>\r\n\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Productos Pagados',\r\n          Cell: props1 => {\r\n            const original = props1.cell.row.original\r\n            if(original.is_products_paid){\r\n              return (\r\n                <Badge variant=\"success\" className=\"font-badge\">\r\n                  {original.total_quantity_products_paid}/{original.total_quantity_products}\r\n                </Badge>\r\n              )\r\n            }else{\r\n              return (\r\n                <Badge variant=\"danger\" className=\"font-badge\">\r\n                  {original.total_quantity_products_paid}/{original.total_quantity_products}\r\n                </Badge>\r\n              )\r\n            }\r\n          }\r\n        },\r\n        {\r\n          Header: 'Acciones',\r\n          Cell: props1 => {\r\n            const { original } = props1.cell.row\r\n            return (\r\n              <Button variant=\"primary\" block={true} type=\"button\" size=\"sm\" onClick={() => onHideModalAction(original)}>Acciones</Button>\r\n            )\r\n          }\r\n        }\r\n    ]\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    layoutHelpers.toggleCollapsed()\r\n    return () =>{\r\n      cotizacionColumns = null\r\n      layoutHelpers.toggleCollapsed()\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  },[props.id_branch_office])\r\n\r\n  useEffect(() => {\r\n    if(redraw){\r\n      handleDataDonutSsStatus()\r\n    }\r\n  },[redraw])\r\n\r\n  const onHideModalAction = (originalCoti = false) => {\r\n    if(!isOpenModalAction && originalCoti){\r\n      setInvoiceAction(originalCoti)\r\n    }\r\n    setIsOpenModalAction(!isOpenModalAction)\r\n  }\r\n\r\n  const handleDataDonutSsStatus = () => {\r\n    setTimeout(function () {\r\n      setRedraw(false)\r\n    }, 2000);\r\n  }\r\n\r\n  const handleStadistics = () => {\r\n    let objectPost = Object.assign({},dataForm)\r\n    setDisplayFilter(3)\r\n     axios.post(API_URL+'guide_stadistics',objectPost).then(result => {\r\n      setStatusCotization({...statusCotization,statusesBonds: result.data.statusesBonds, statuses : result.data.statuses, bondsByMonth: result.data.bondsByMonth, invoiceByYear: result.data.invoiceByYear, totalByStatus: result.data.totalByStatus})\r\n      setTimeout(function () {\r\n        setRedraw(true)\r\n        setDisplayFilter(1)\r\n      }, 1000);\r\n     }).catch(err => {\r\n       setDisplayFilter(1)\r\n       props.tokenExpired(err)\r\n     })\r\n  }\r\n\r\n  const handleDisplayFilter = filter => {\r\n    if(filter == 3){\r\n      setDataForm({date_desde: '', date_hasta: ''})\r\n    }\r\n    setDisplayFilter(filter)\r\n  }\r\n\r\n  const fetchData = () => {\r\n\r\n    let objectPost = Object.assign({},dataForm)\r\n    let promises = [\r\n      axios.get(API_URL+'guide'),\r\n      axios.post(API_URL+'invoice_stadistics',objectPost),\r\n    ]\r\n    Promise.all(promises).then(result => {\r\n      setInvoiceData(result[0].data)\r\n      setStatusCotization({...statusCotization, statusesBonds: result[1].data.statusesBonds, statuses : result[1].data.statuses, bondsByMonth: result[1].data.bondsByMonth, invoiceByYear: result[1].data.invoiceByYear, totalByStatus: result[1].data.totalByStatus})\r\n      setTimeout(function () {\r\n        setRedraw(true)\r\n      }, 1000);\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const goToInvoice = id  => {\r\n    props.history.replace('/guide/guide_invoice/'+id)\r\n  }\r\n\r\n  const printInvoice = original => {\r\n    toast.info('Cargando documento, espere por favor')\r\n    window.open(original.name_pdf,\"_blank\")\r\n  }\r\n\r\n  const handleModalDetail = () => {\r\n    setIsOpenModalDetail(!isOpenModalDetail)\r\n  }\r\n\r\n  const displayMehotdSale = method => {\r\n    method = parseInt(method)\r\n    if(method === 1){\r\n      return \"Unidad\"\r\n    }else if(method === 2){\r\n      return \"Mayorista\"\r\n    }else{\r\n      return \"(Litros, Kg, Etc..)\"\r\n    }\r\n  }\r\n\r\n  const seeDetailCotization = data => {\r\n    setCotizationDetail(data)\r\n    handleModalDetail()\r\n  }\r\n\r\n  const anulateInvoice = datos => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui-edit'>\r\n            <h1>¿Esta seguro?</h1>\r\n            <p className=\"font-alert\">¿Desea realmente anular este registro?</p>\r\n            <button className=\"button-alert\"\r\n              onClick={() => {\r\n                confirmAnulateInvoice(datos.id);\r\n                onClose();\r\n              }}\r\n            >\r\n              Si, Aceptar\r\n            </button>\r\n            <button className=\"button-alert\" onClick={onClose}>No</button>\r\n          </div>\r\n        );\r\n      }\r\n    }); \r\n  }\r\n\r\n  const confirmAnulateInvoice = id => {\r\n    toast.info('Anulando factura, esto podría tardar unos segundos... espere por favor')\r\n    setDisplayLoading(true)\r\n    axios.put(API_URL+'guide_status/'+id).then(result => {\r\n        toast.success('Guía anulada con éxito')\r\n        setInvoiceAction({...invoiceAction,status: 4})\r\n        fetchData()\r\n     }).catch(err => {\r\n      setDisplayLoading(false)\r\n       props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const goToForm = () => {\r\n    props.history.replace('/guide/guide_create')\r\n  }\r\n\r\n  return (\r\n\r\n    <Container fluid>\r\n      <Row>\r\n        <Col sm={6} md={6} lg={6} className=\"text-center\">\r\n          <h4 className=\"title_principal\">Tabla de Guías</h4>\r\n          <Button block={true} variant=\"success\" onClick={goToForm} size=\"sm\">Nueva Guía <FaPlusCircle /></Button>\r\n        </Col>\r\n        <Col sm={6} md={6} lg={6} className=\"text-center title_principal\">\r\n          <h4>Total Guías Realizadas</h4>\r\n          <Badge variant=\"danger\">{invoiceData.length}</Badge>\r\n        </Col>\r\n      </Row>\r\n      <hr/>\r\n      {displayLoading ? (\r\n        <LoadingComponent />\r\n      ) : (\r\n        <>\r\n          <StadisticsInvoiceComponent\r\n            setDataForm={setDataForm}\r\n            dataForm={dataForm}\r\n            redraw={redraw}\r\n            statusCotization={statusCotization}\r\n            handleDisplayFilter={handleDisplayFilter}\r\n            handleStadistics={handleStadistics}\r\n            displayFilter={displayFilter}\r\n            configGeneral={props.configGeneral}\r\n          />\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} xs={12}>\r\n              <Table columns={cotizacionColumns} data={invoiceData}/>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n      <Modal\r\n        show={isOpenModalDetail}\r\n        onHide={handleModalDetail}\r\n        size=\"xl\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        >\r\n        <Modal.Header closeButton className=\"header_dark\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Detalles de la Factura N° {Object.keys(cotizationDetail).length > 0 ? cotizationDetail.ref : ''}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Registrador</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Rut</th>\r\n                    <th className=\"text-center\">Dirección</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">País</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.business_name_transmitter}</td>\r\n                      <td>{cotizationDetail.rut_transmitter}</td>\r\n                      <td>{cotizationDetail.address_transmitter}</td>\r\n                      <td>{cotizationDetail.email_transmitter}</td>\r\n                      <td>{cotizationDetail.phone_transmitter}</td>\r\n                      <td>{cotizationDetail.country_transmitter}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Cliente</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Razon Social / Nombre</th>\r\n                    <th className=\"text-center\">Rut</th>\r\n                    <th className=\"text-center\">Dirección</th>\r\n                    <th className=\"text-center\">Ciudad</th>\r\n                    <th className=\"text-center\">Comuna</th>\r\n                    <th className=\"text-center\">Giro</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.business_name_client}</td>\r\n                      <td>{cotizationDetail.rut_client}</td>\r\n                      <td>{cotizationDetail.address_client}</td>\r\n                      <td>{cotizationDetail.city_client}</td>\r\n                      <td>{cotizationDetail.comuna_client}</td>\r\n                      <td>{cotizationDetail.spin_client}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Contacto</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.name_contact}</td>\r\n                      <td>{cotizationDetail.phone_contact}</td>\r\n                      <td>{cotizationDetail.email_contact}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Vendedor</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.name_seller}</td>\r\n                      <td>{cotizationDetail.phone_seller}</td>\r\n                      <td>{cotizationDetail.email_seller}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n              <h4 className=\"title_principal text-center\">Productos de la Factura</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Categoria</th>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Descripción</th>\r\n                    <th className=\"text-center\">Cantidad</th>\r\n                    <th className=\"text-center\">Precio</th>\r\n                    <th className=\"text-center\">Descuento</th>\r\n                    <th className=\"text-center\">Método de Venta</th>\r\n                    <th className=\"text-center\">Neto</th>\r\n                    <th className=\"text-center\">Total</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <React.Fragment>\r\n                      {cotizationDetail.products.map((v,i) => (\r\n                        <tr>\r\n                          <td>{v.category}</td>\r\n                          <td>{v.name_product}</td>\r\n                          <td>{v.description}</td>\r\n                          <td>{v.quantity}</td>\r\n                          <td>{props.configGeneral.simbolo_moneda}{formatNumber(v.price,2,',','.')}</td>\r\n                          <td>{v.discount}</td>\r\n                          <td>{displayMehotdSale(v.method_sale)}</td>\r\n                          <td>{v.is_neto ? 'Neto' : \"Iva\"}</td>\r\n                          <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(v.total,2,',','.')}</Badge></td>\r\n                        </tr>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"\">\r\n              <h4 className=\"title_principal text-center\">Gastos de la Factura</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Descripción</th>\r\n                    <th className=\"text-center\">Monto</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <React.Fragment>\r\n                      {cotizationDetail.gastos.map((v,i) => (\r\n                        <tr>\r\n                          <td>{v.description}</td>\r\n                          <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(v.amount,2,',','.')}</Badge></td>\r\n                        </tr>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          {Object.keys(cotizationDetail).length > 0 && cotizationDetail.refs.length > 0 ? (\r\n            <Row>\r\n              <Col sm={12} md={12} lg={12} className=\"\">\r\n                <h4 className=\"title_principal text-center\">Referencias de la Factura</h4>\r\n                <br/>\r\n                <table className=\"table table-striped table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-center\">Tipo de Documento</th>\r\n                      <th className=\"text-center\">Referencia Cotiz.</th>\r\n                      <th className=\"text-center\">Ind</th>\r\n                      <th className=\"text-center\">Fecha Ref.</th>\r\n                      <th className=\"text-center\">Razón de Referencia</th>\r\n                      <th className=\"text-center\">Tipo de Código</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"text-center\">\r\n                    {Object.keys(cotizationDetail).length > 0 ? (\r\n                      <React.Fragment>\r\n                        {cotizationDetail.refs.map((v,i) => (\r\n                          <tr>\r\n                            <td>{v.type_document}</td>\r\n                            <td>{v.ref_invoice}</td>\r\n                            <td>{v.ind}</td>\r\n                            <td>{v.date_ref ? moment(v.date_ref).tz('America/Santiago').format('DD-MM-YYYY') : ''}</td>\r\n                            <td>{v.reason_ref}</td>\r\n                            <td>{v.type_code}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </React.Fragment>\r\n                    ) : ''}\r\n                  </tbody>\r\n                </table>\r\n              </Col>\r\n            </Row>\r\n          ) : ''}\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"\">\r\n              <h4 className=\"title_principal text-center\">Totales</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Total Neto</th>\r\n                    <th className=\"text-center\">Total Iva</th>\r\n                    <th className=\"text-center\">Total Gastos</th>\r\n                    <th className=\"text-center\">Total Descuento Global</th>\r\n                    <th className=\"text-center\">Total Balance</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_product,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_iva,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_gastos,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.discount_global_amount,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_balance,2,',','.')}</Badge></td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={6} md={6} lg={6}>\r\n              {Object.keys(cotizationDetail).length > 0 ? (\r\n                <h5>Mostrar solo los Totales: <Badge variant=\"primary\" className=\"font-badge\">{cotizationDetail.total_with_iva ? 'No' : \"Si\"}</Badge></h5>\r\n              ) : ''}\r\n            </Col>\r\n            <Col sm={6} md={6} lg={6} className=\"text-center\">\r\n              {Object.keys(cotizationDetail).length > 0 ? (\r\n                <h5>Método de Traslado: <Badge variant=\"primary\" className=\"font-badge\">{cotizationDetail.type_transfer}</Badge></h5>\r\n              ) : ''}\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button size=\"md\" variant=\"secondary\" onClick={handleModalDetail}>cerrar</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <ModalInvoiceActions\r\n        isShow={isOpenModalAction}\r\n        onHide={onHideModalAction}\r\n        cotization={invoiceAction}\r\n        printInvoice={printInvoice}\r\n        goToInvoice={goToInvoice}\r\n        anulateInvoice={anulateInvoice}\r\n        seeDetailCotization={seeDetailCotization}\r\n        isGuide={true}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    id_branch_office : state.enterpriseSucursal.id_branch_office,\r\n    id_enterprise : state.enterpriseSucursal.id_enterprise,\r\n    configGeneral: state.configs.config,\r\n    configStore: state.configs.configStore\r\n  }\r\n}\r\n\r\nGuideDispatchSearchPage.propTypes ={\r\n  id_branch_office: PropTypes.string.isRequired,\r\n  id_enterprise : PropTypes.string.isRequired,\r\n  configGeneral: PropTypes.object,\r\n  configStore : PropTypes.object,\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(GuideDispatchSearchPage)\r\n"],"sourceRoot":""}