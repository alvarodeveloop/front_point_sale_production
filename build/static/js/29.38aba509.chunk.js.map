{"version":3,"sources":["assets/img/utils/empty_logo.jpg","components/modals/ScanEanModal.jsx","components/QuaggaScanner.jsx","components/FormProductSale.jsx","pages/ProductFormPage.jsx"],"names":["module","exports","ScanEanModal","props","show","onHide","size","aria-labelledby","centered","Header","closeButton","className","Title","id","Body","style","width","paddingLeft","catchCode","Footer","onClick","QuaggaScanner","useEffect","initQuagga","Quagga","stop","init","inputStream","name","type","target","document","querySelector","numOfWorkers","navigator","hardwareConcurrency","constraints","height","decoder","readers","err","toast","error","console","log","start","last_result","onDetected","data","last_code","codeResult","code","push","length","ordeByConcurrency","arr","count","forEach","v","Object","keys","sort","curtKey","nextKey","FormProductSale","useState","name_product","cost","code_ean","description","is_neto","id_category","is_auto_sale","img_product","method_sale","price","qr_image","sticker_color","detailCost","pack","categoryNames","minimun_stock","dataProduct","setDataStore","dataDetailHandle","isOpenScan","setIsOpenScan","setConfig","category","setCategory","validate","setValidate","isUpdate","setIsUpdate","imgProduct","setImgProduct","galleryImg","setGalleryImg","indexCarrousel","setIndexCarrousel","galleryImgUpdate","setGalleryImgUpdate","htmlImgGallery","setHtmlImgGallery","textButton","setTextButton","isSubmit","setIsSubmit","isShowPackField","setIsShowPackField","src","require","roundedCircle","imgComponent","setImgComponent","inputRef","useRef","fetchData","cleanForm","displayGalleryImg","onChange","e","a","value","val","promise","axios","get","API_URL","match","params","isInventary","atob","Promise","all","then","result","warning","categories","map","label","name_category","cost_details","inventary","thumbnail","gallery","catch","response","message","onSubmit","current","checkValidity","formData","FormData","objectNew","assign","concat","i","append","name_categories","item","substring","route_param","put","formDataGallery","filename","success","setTimeout","goToTable","handleSubmitProduct","post","getElementById","setAttribute","file","readerImg","img64","Item","key","alt","Caption","sm","md","lg","variant","title","removeImgFromGallery","groupHtml","groupHtmlUpdate","index","objectGallery","history","replace","fluid","noValidate","validated","ref","xs","click","block","display","files","reader","FileReader","onload","event","readAsDataURL","inputNameProduct","handleChange","placeholder","inputPrice","Group","Label","isMulti","options","inputDescription","Toggle","as","Card","eventKey","Collapse","inputCodeEan","removeAttribute","checked","inputSticker","inputMethodSale","inputPack","required","messageErrors","cols","multiple","accept","activeIndex","onSelect","selectedIndex","disabled","defaultProps","readonly","inputIsNeto","inputAutoSale","step","inputCategory","ProductFormPage","localStorage","getItem","layoutHelpers","toggleCollapsed"],"mappings":"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","file":"static/js/29.38aba509.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/empty_logo.258d3697.jpg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport{\r\n  Modal,\r\n  Button,\r\n  Row,\r\n  Col\r\n} from 'react-bootstrap'\r\nimport 'styles/components/modalComponents.css'\r\nimport QuaggaScanner from 'components/QuaggaScanner'\r\n\r\nconst ScanEanModal = (props) => {\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered>\r\n        <Modal.Header closeButton className=\"header_dark\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div style={{width: '100%', paddingLeft: '25%'}}>\r\n            <QuaggaScanner catchCode={props.catchCode}/>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button size=\"sm\" onClick={props.onHide}>Cerrar</Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nScanEanModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  catchCode: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ScanEanModal\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { barcode } from 'utils/scan'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport 'styles/components/scan.css'\r\nimport Quagga from 'quagga';\r\nimport { toast } from 'react-toastify'\r\n\r\nconst  QuaggaScanner= (props) => {\r\n\r\n  useEffect(() => {\r\n    initQuagga()\r\n    return () => {\r\n      Quagga.stop()\r\n    }\r\n  },[])\r\n\r\n  const initQuagga = () => {\r\n    Quagga.init({\r\n      inputStream : {\r\n        name : \"Live\",\r\n        type : \"LiveStream\",\r\n        target: document.querySelector('#camera'),\r\n        numOfWorkers: navigator.hardwareConcurrency,\r\n        constraints: {\r\n          width: 300,\r\n          height: 300,\r\n        },\r\n      },\r\n      decoder : {\r\n        readers : [\"ean_reader\"]\r\n      }\r\n    }, function(err) {\r\n      if (err) {\r\n        toast.error('Error, revise que la cámara de su dispositivo este conectada')\r\n        return\r\n      }\r\n      console.log(\"Initialization finished. Ready to start\");\r\n      Quagga.start();\r\n    });\r\n\r\n    let last_result = []\r\n    Quagga.onDetected(data => {\r\n\r\n      let last_code = data.codeResult.code\r\n      last_result.push(last_code)\r\n      if(last_result.length > 20){\r\n        let code = ordeByConcurrency(last_result)[0]\r\n        props.catchCode(code)\r\n      }\r\n    })\r\n  }\r\n\r\n  const ordeByConcurrency = arr => {\r\n    let count  = {}\r\n    arr.forEach(v => {\r\n      if(!count[v]){\r\n        count[v] = 0\r\n      }\r\n      count[v]++\r\n    })\r\n\r\n    return Object.keys(count).sort((curtKey,nextKey) => {\r\n      return count[curtKey] < count[nextKey]\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div id=\"camera\"></div>\r\n  )\r\n}\r\n\r\nQuaggaScanner.propTypes = {\r\n  catchCode: PropTypes.func.isRequired\r\n}\r\n\r\nexport default QuaggaScanner\r\n","import React, { useMemo, useState,useEffect,useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport 'styles/pages/productStyle.css'\r\nimport { FaImage,FaPlusCircle, FaTrash } from \"react-icons/fa\";\r\nimport InputField from 'components/input/InputComponent'\r\nimport { toast } from 'react-toastify'\r\nimport { readerImg } from 'utils/functions'\r\nimport { API_URL } from 'utils/constants'\r\nimport ScanEanModal from 'components/modals/ScanEanModal'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport Select from 'react-select';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Image,\r\n  Card,\r\n  Modal,\r\n  Carousel,\r\n  Accordion,\r\n} from 'react-bootstrap'\r\n\r\nconst FormProductSale = (props) => {\r\n\r\n  const [dataProduct,setDataStore] = useState({\r\n    name_product: '',\r\n    cost: '',\r\n    code_ean: '',\r\n    description: '',\r\n    is_neto: true,\r\n    id_category: [],\r\n    is_auto_sale: false,\r\n    img_product: '',\r\n    method_sale: 1,\r\n    price:'',\r\n    qr_image:'',\r\n    sticker_color: '#9c7901',\r\n    detailCost: [],\r\n    pack: '',\r\n    categoryNames: '',\r\n    minimun_stock: 0,\r\n  })\r\n\r\n\r\n  const [dataDetailHandle, setDataDetailHandle] = useState(false) //  variable para guardar temporalmente la data del detalle de los costos\r\n  const [isOpenScan, setIsOpenScan] = useState(false)\r\n  const [config, setConfig] = useState([])\r\n  const [category, setCategory] = useState([])\r\n  const [validate, setValidate] = useState(false)\r\n  const [isUpdate, setIsUpdate] = useState(false)\r\n  const [imgProduct, setImgProduct] = useState('')\r\n  const [galleryImg, setGalleryImg] = useState({})\r\n  const [indexCarrousel,setIndexCarrousel] = useState(0)\r\n  const [galleryImgUpdate, setGalleryImgUpdate] = useState({})\r\n  const [htmlImgGallery, setHtmlImgGallery] = useState('')\r\n  const [textButton, setTextButton] = useState('Guardar')\r\n  const [isSubmit, setIsSubmit] = useState(false)\r\n  const [galleryFromUpdate, setGalleryFromUpdate] = useState([])\r\n  const [isShowPackField, setIsShowPackField] = useState(false)\r\n  const [ imgComponent, setImgComponent ] = useState(\r\n    <Image src={  require('../assets/img/utils/empty_logo.jpg') }\r\n      id=\"imagen_logo\" style={{ width: '100px' }} roundedCircle />\r\n  )\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n    return () => {\r\n      cleanForm()\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    displayGalleryImg()\r\n  },[galleryImg,galleryImgUpdate])\r\n\r\n  const onChange = async e => {\r\n\r\n    if(e.target.name === \"method_sale\"){\r\n      let val_pack = ''\r\n      if(e.target.value == 2){\r\n        setIsShowPackField(true)\r\n      }else{\r\n        setIsShowPackField(false)\r\n      }\r\n      await setDataStore({...dataProduct, [e.target.name] : e.target.value})\r\n    }else if(e.target.name === \"is_neto\" || e.target.name === \"is_auto_sale\"){\r\n      let val = e.target.value === \"true\" ? true : false\r\n      await setDataStore({...dataProduct, [e.target.name] : val})\r\n    }else{\r\n      await setDataStore({...dataProduct, [e.target.name] : e.target.value})\r\n    }\r\n  }\r\n\r\n  const onChangeSelect = val => {\r\n    setDataStore({...dataProduct, id_category : val})\r\n  }\r\n\r\n  const fetchData = () => {\r\n    let promise = [\r\n      axios.get(API_URL+'category'),\r\n      axios.get(API_URL+'config_general')\r\n    ]\r\n\r\n    if(props.match.params.id){\r\n      if(props.isInventary){\r\n        promise.push(\r\n          axios.get(API_URL+'product/'+atob(props.match.params.id))\r\n        )\r\n      }else{\r\n        promise.push(\r\n          axios.get(API_URL+'product/'+props.match.params.id)\r\n        )\r\n      }\r\n    }\r\n    Promise.all(promise).then(result => {\r\n\r\n      if(result[0].data){\r\n        setCategory(result[0].data)\r\n      }else{\r\n        toast.warning('Debe realizar su configuración general')\r\n      }\r\n\r\n      setConfig(result[1].data)\r\n      if(result.length > 2){\r\n        if(props.isInventary){\r\n          setDataStore({\r\n            name_product: result[2].data.name_product,\r\n            cost: result[2].data.cost,\r\n            code_ean: result[2].data.code_ean,\r\n            description: result[2].data.description,\r\n            is_neto: result[2].data.is_neto,\r\n            id_category: result[2].data.categories.map(v => { return {value: v.categories.id, label : v.categories.name_category} }),\r\n            is_auto_sale: result[2].data.is_auto_sale,\r\n            img_product: result[2].data.img_product,\r\n            method_sale: result[2].data.method_sale,\r\n            price:result[2].data.price,\r\n            qr_image:result[2].data.qr_image,\r\n            sticker_color: result[2].data.sticker_color,\r\n            detailCost: result[2].data.cost_details,\r\n            pack: result[2].data.pack,\r\n            minimun_stock: result[2].data.inventary[0].minimun_stock,\r\n          })\r\n          \r\n          if(result[2].data.method_sale == 2){\r\n            setIsShowPackField(true)\r\n          }\r\n          setIsUpdate(true)\r\n\r\n          if(result[2].data.img_product){\r\n            setImgComponent(\r\n              <Image src={  API_URL+'images/product/principal/'+ result[2].data.img_product}\r\n                id=\"imagen_logo\" style={{ width: '150px' }} thumbnail />\r\n            )\r\n          }\r\n\r\n          if(result[2].data.gallery.length > 0){\r\n            setGalleryImgUpdate(result[2].data.gallery)\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err)\r\n        toast.error('Error,contacte con soporte')\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  const onSubmit = async () => {\r\n\r\n    try {\r\n      const form = inputRef.current;\r\n      if (form.checkValidity() === false) {\r\n        setValidate(true);\r\n        return\r\n      }\r\n\r\n      let formData = new FormData()\r\n\r\n      let objectNew = Object.assign({},dataProduct,{\r\n        detailCost: dataProduct.detailCost.concat(dataDetailHandle)\r\n      })\r\n\r\n      Object.keys(objectNew).forEach((v,i) => {\r\n        if(v === 'img_product'){\r\n          if(imgProduct){\r\n            formData.append(v,imgProduct)\r\n          }\r\n        }else if( v === 'id_category'){\r\n          let name_categories = \"\"\r\n          dataProduct[v].forEach((item, i) => {\r\n            formData.append('id_category',item.value)\r\n            name_categories+= item.label+\",\"\r\n          });\r\n          name_categories = name_categories.substring(0,name_categories.length - 1)\r\n          formData.append('name_categories',name_categories)\r\n        }else{\r\n          formData.append(v,dataProduct[v])\r\n\r\n        }\r\n      })\r\n\r\n      setTextButton('Guardando Datos, Espere por favor...')\r\n      setIsSubmit(true)\r\n      if(isUpdate){\r\n        let route_param = props.isInventary ? atob(props.match.params.id) : props.match.params.id\r\n        let result = await axios.put(API_URL+'product/'+route_param,formData)\r\n\r\n        setTextButton('Trabajando en galeria de imagénes...')\r\n\r\n        let formDataGallery = new FormData()\r\n        Object.keys(galleryImg).forEach((v,i) => {\r\n          formDataGallery.append('gallery',galleryImg[v])\r\n        })\r\n        Object.keys(galleryImgUpdate).forEach((v,i) => {\r\n          formDataGallery.append('galleryUpdate',galleryImgUpdate[v].filename)\r\n        })\r\n        await axios.put(API_URL+'update_gallery/'+route_param,formDataGallery)\r\n        toast.success('Producto Modificado')\r\n\r\n        setTimeout(() => {\r\n          if(props.isInventary){\r\n            goToTable()\r\n          }else{\r\n            props.handleSubmitProduct(Object.assign({},result.data))\r\n          }\r\n        },1500)\r\n\r\n      }else{\r\n        let result = await axios.post(API_URL+'product',formData)\r\n\r\n        if(galleryImg.length > 0){\r\n\r\n          setTextButton('Guardando Galeria de Imagenes...')\r\n\r\n          let formDataGallery = new FormData()\r\n          Object.keys(galleryImg).forEach((v,i) => {\r\n            formDataGallery.append('gallery',galleryImg[v])\r\n          })\r\n          formDataGallery.append('id_product',result.data.id)\r\n          await axios.post(API_URL+'product_gallery',formDataGallery)\r\n          toast.success('Producto Creado')\r\n          setTextButton('Guardar')\r\n          setIsSubmit(false)\r\n          setIsShowPackField(false)\r\n          cleanForm()\r\n        }else{\r\n          toast.success('Producto Creado')\r\n          setTextButton('Guardar')\r\n          setIsSubmit(false)\r\n          setIsShowPackField(false)\r\n          cleanForm()\r\n        }\r\n        setTimeout(function () {\r\n          if(props.isInventary){\r\n            goToTable()\r\n          }else{\r\n            props.handleSubmitProduct(Object.assign({},result.data))\r\n          }\r\n        }, 1500);\r\n      }\r\n    } catch (err) {\r\n      setTextButton('Guardar')\r\n      setIsSubmit(false)\r\n     if(err.response){\r\n       toast.error(err.response.data.message)\r\n     }else{\r\n       console.log(err);\r\n       toast.error('Error, contacte con soporte')\r\n     }\r\n    }\r\n  }\r\n\r\n  const cleanForm = () => {\r\n\r\n    setDataStore({\r\n      name_product: '',\r\n      cost: '',\r\n      code_ean: '',\r\n      description: '',\r\n      is_neto: '',\r\n      id_category: '',\r\n      is_auto_sale: '',\r\n      img_product: '',\r\n      method_sale: '',\r\n      price:'',\r\n      qr_image:'',\r\n      sticker_color: '#9c7901',\r\n      detailCost: [],\r\n      pack : '',\r\n      categoryNames: '',\r\n      minimun_stock : 0\r\n    })\r\n\r\n    setImgProduct(null)\r\n    setImgComponent(null)\r\n    setGalleryImg({})\r\n    setHtmlImgGallery('')\r\n\r\n    setImgComponent(\r\n      <Image src={  require('../assets/img/utils/empty_logo.jpg') }\r\n        id=\"img_show\" style={{ width: '80px' }} roundedCircle />\r\n    )\r\n\r\n    document.getElementById('code_ean').setAttribute('readonly',true)\r\n\r\n  }\r\n\r\n  const pickLogo = () => {\r\n    document.getElementById('file_product').click()\r\n  }\r\n\r\n  const readImgProduct = e => {\r\n\r\n    let file = e.target.files[0];\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = event => {\r\n      // The file's text will be printed here\r\n\r\n      setImgComponent(\r\n        <Image src={ event.target.result }\r\n          id=\"img_show\" style={{ width: '80%' }} roundedCircle />\r\n      )\r\n\r\n      setImgProduct(file)\r\n\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  const displayInputGallery = () => {\r\n    document.getElementById('galleryImg').click()\r\n  }\r\n\r\n  const displayGalleryImg = async () => {\r\n\r\n    let file = \"\"\r\n    let count = 0\r\n     let groupHtml = await Promise.all(Object.keys(galleryImg).map( async (v,i) => {\r\n       file = galleryImg[v]\r\n       let img64  = await readerImg(file)\r\n       return(\r\n          <Carousel.Item key={i}>\r\n            <img\r\n              className=\"d-block\"\r\n              src={img64}\r\n              alt=\"First slide\"\r\n              style={{height: \"300px\", width: \"100%\" }}\r\n              />\r\n            <Carousel.Caption>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={5} md={5} lg={5}>\r\n                  <Button size=\"sm\" variant=\"dark\" title=\"Eliminar\" onClick={() => removeImgFromGallery(v,false) } className=\"buttonTrashGallery\">Eliminar <FaTrash /></Button>\r\n                </Col>\r\n              </Row>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        )\r\n     }))\r\n\r\n     let groupHtmlUpdate = await Promise.all(Object.keys(galleryImgUpdate).map( async (v,i) => {\r\n       file = galleryImgUpdate[v]\r\n       return (\r\n         <Carousel.Item key={i+\"-update\"}>\r\n           <img\r\n             className=\"d-block\"\r\n             src={API_URL+'images/product/gallery/'+file.filename}\r\n             alt=\"First slide\"\r\n             style={{height: \"300px\", width: \"100%\" }}\r\n             />\r\n           <Carousel.Caption>\r\n             <Row className=\"justify-content-center\">\r\n               <Col sm={5} md={5} lg={5}>\r\n                 <Button size=\"sm\" variant=\"dark\" title=\"Eliminar\" onClick={() => removeImgFromGallery(v,true) } className=\"buttonTrashGallery\">Eliminar <FaTrash /></Button>\r\n               </Col>\r\n             </Row>\r\n           </Carousel.Caption>\r\n         </Carousel.Item>\r\n       )\r\n     }))\r\n\r\n\r\n    setHtmlImgGallery([...groupHtml,...groupHtmlUpdate])\r\n  }\r\n\r\n  const handleSelectCarrousel = (selectedIndex, e) => {\r\n    setIndexCarrousel(selectedIndex)\r\n  }\r\n\r\n  const galleryImgHandle = e => {\r\n    setGalleryImg(Object.assign({},galleryImg,e.target.files))\r\n  }\r\n\r\n  const removeImgFromGallery = (index,type) => {\r\n    if(type){\r\n      let objectGallery = Object.assign({},galleryImgUpdate)\r\n      delete objectGallery[index]\r\n      setGalleryImgUpdate(objectGallery)\r\n      setIndexCarrousel(0)\r\n    }else{\r\n      let objectGallery = Object.assign({},galleryImg)\r\n      delete objectGallery[index]\r\n      setGalleryImg(objectGallery)\r\n      setIndexCarrousel(0)\r\n    }\r\n  }\r\n\r\n  const unlockEanInput = () => {\r\n    document.getElementById('code_ean').removeAttribute('readonly')\r\n  }\r\n\r\n  const scannEan = () => {\r\n    document.getElementById('code_ean').setAttribute('readonly',true)\r\n    setIsOpenScan(true)\r\n  }\r\n\r\n  const catchCodeHandle = data => {\r\n    setIsOpenScan(false)\r\n  }\r\n\r\n  const goToTable = () => {\r\n    props.history.replace('/inventary')\r\n  }\r\n\r\n  return (\r\n    <Container fluid={true}>\r\n      <Row>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <h4 className=\"title_principal\">{isUpdate ? \"Modifcar producto en el invetario\" : \"Crear producto en el inventario\"}</h4>\r\n        </Col>\r\n      </Row>\r\n      <Form onSubmit={() => {}} noValidate validated={validate} ref={inputRef}>\r\n        <Row className=\"\">\r\n          <Col sm={12} md={12} lg={12} xs={12} className=\"\">\r\n            <Row className=\"justify-content-center align-items-center\">\r\n              <Col sm={4} md={4} lg={4} xs={12}>\r\n                <br/>\r\n                <Button size=\"sm\" onClick={pickLogo} variant=\"success\" block=\"true\" size=\"sm\">\r\n                  Escoger Imagen Producto <FaImage />\r\n                </Button>\r\n                <input type=\"file\" id=\"file_product\" style={{display: 'none'}} onChange={readImgProduct} />\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4} xs={12} className=\"text-center\">\r\n                {imgComponent}\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputNameProduct}\r\n                handleChange={onChange}\r\n                value={dataProduct.name_product}\r\n                placeholder=\"Nombre del Producto\"\r\n              />\r\n              <InputField\r\n                {...props.inputPrice}\r\n                handleChange={onChange}\r\n                value={dataProduct.price}\r\n              />\r\n             <Form.Group className={props.isInventary ? 'col-md-4 col-sm-4 col-lg-4' : 'col-md-3 col-sm-3 col-lg-3'}>\r\n                <Form.Label className=\"fontBold\">Categorías</Form.Label>\r\n                <Select\r\n                  value={dataProduct.id_category}\r\n                  onChange={onChangeSelect}\r\n                  isMulti={true}\r\n                  options={category.map((v,i) => {\r\n                    return {value: v.id, label: v.name_category}\r\n                  })}\r\n                />\r\n              </Form.Group>\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                {...props.inputDescription}\r\n                handleChange={onChange}\r\n                value={dataProduct.description}\r\n              />\r\n            </Row>\r\n            <Accordion>\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"header_card\">\r\n                  <b>Datos de Personalización</b> (hacer click para desplegar campos)\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <InputField\r\n                        {...props.inputCodeEan}\r\n                        handleChange={onChange}\r\n                        value={dataProduct.code_ean}\r\n                        />\r\n                      <Col sm={4} md={4} lg={4}>\r\n                        <br/>\r\n                        <Button size=\"sm\" variant='dark' size=\"sm\" onClick={unlockEanInput} block={true}>Escribir EAN</Button>\r\n                      </Col>\r\n                      <Col sm={4} md={4} lg={4}>\r\n                        <br/>\r\n                        <Button size=\"sm\" variant='dark' size=\"sm\" onClick={scannEan} block={true}>Scannear EAN</Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={6} md={6} lg={6} xs={12}>\r\n                        <label className=\"form-control-label\">Es Neto</label>\r\n                        <br/>\r\n                        <Row>\r\n                          <Col sm={6} md={6} lg={6} xs={12}>\r\n                            <label className=\"checkbox-inline\">\r\n                              Si &nbsp;&nbsp;&nbsp;\r\n                              <input type=\"checkbox\" name=\"is_neto\" checked={dataProduct.is_neto ? true : false} value={true} onChange={onChange} />\r\n                            </label>\r\n                          </Col>\r\n                          <Col sm={6} md={6} lg={6} xs={12}>\r\n                            <label className=\"checkbox-inline\">\r\n                              No &nbsp;&nbsp;&nbsp;\r\n                              <input type=\"checkbox\" name=\"is_neto\" checked={dataProduct.is_neto ? false : true} value={false} onChange={onChange}/>\r\n                            </label>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col sm={6} md={6} lg={6} xs={12}>\r\n                        <label className=\"form-control-label\">Es Auto Venta</label>\r\n                        <br/>\r\n                        <Row>\r\n                          <Col sm={6} md={6} lg={6} xs={12}>\r\n                            <label className=\"checkbox-inline\">\r\n                              Si &nbsp;&nbsp;&nbsp;\r\n                              <input type=\"checkbox\" name=\"is_auto_sale\" checked={dataProduct.is_auto_sale ? true : false} value={true} onChange={onChange} />\r\n                            </label>\r\n                          </Col>\r\n                          <Col sm={6} md={6} lg={6} xs={12}>\r\n                            <label className=\"checkbox-inline\">\r\n                              No &nbsp;&nbsp;&nbsp;\r\n                              <input type=\"checkbox\" name=\"is_auto_sale\" checked={dataProduct.is_auto_sale ? false : true} value={false} onChange={onChange} />\r\n                            </label>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                      <InputField\r\n                        {...props.inputSticker}\r\n                        handleChange={onChange}\r\n                        value={dataProduct.sticker_color}\r\n                        />\r\n                      <InputField\r\n                        {...props.inputMethodSale}\r\n                        handleChange={onChange}\r\n                        value={dataProduct.method_sale}\r\n                        >\r\n                        <option value=''>--Seleccione--</option>\r\n                        <option value={1}>Unidad</option>\r\n                        <option value={2}>Mayorista</option>\r\n                        <option value={3}>(Kilo, Litros, Metros, Entre Otros...)</option>\r\n                      </InputField>\r\n                      {isShowPackField ? (\r\n                        <InputField\r\n                          {...props.inputPack}\r\n                          handleChange={onChange}\r\n                          value={dataProduct.pack}\r\n                          />\r\n                      ) : ''}\r\n                    </Row>\r\n                    <Row>\r\n                      <InputField\r\n                       type='number'\r\n                       label='Stock minimo'\r\n                       name='minimun_stock'\r\n                       required={false}\r\n                       messageErrors={[\r\n                       ''\r\n                       ]}\r\n                       cols='col-md-4 col-lg-4 col-sm-4'\r\n                       value={dataProduct.minimun_stock}\r\n                       handleChange={onChange}\r\n                      />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col sm={6} md={6} lg={6} xs={12}>\r\n                        <Button size=\"sm\" variant=\"secondary\" onClick={displayInputGallery} block=\"true\">Imagénes de Galeria <FaImage /></Button>\r\n                        <input type=\"file\" id=\"galleryImg\" style={{display: 'none'}} multiple={true} accept=\".jpg, .png, .jpeg\" onChange={galleryImgHandle} />\r\n                      </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col sm={8} md={8} lg={8}>\r\n                        <Carousel activeIndex={indexCarrousel} onSelect={handleSelectCarrousel}>\r\n                          {htmlImgGallery}\r\n                        </Carousel>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n            <br/>\r\n            <Row className=\"justify-content-center\">\r\n              <Col md={4} sm={4} lg={4}>\r\n                <Button size=\"sm\" type=\"button\" onClick={onSubmit} disabled={isSubmit} variant=\"danger\" block={true}>{ textButton } <FaPlusCircle /> </Button>\r\n              </Col>\r\n              {props.isInventary ? (\r\n                <Col md={4} sm={4} lg={4}>\r\n                  <Button size=\"sm\" type=\"button\" onClick={goToTable} variant=\"secondary\" block={true}>Volver</Button>\r\n                </Col>\r\n              ) : ''}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <ScanEanModal\r\n        show={isOpenScan}\r\n        onHide={()=> setIsOpenScan(false)}\r\n        catchCode={catchCodeHandle}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\nFormProductSale.defaultProps ={\r\n  inputNameProduct: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'name_product',\r\n    label : 'Nombre',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputCodeEan: {\r\n    type: 'text',\r\n    required: false,\r\n    readonly: true,\r\n    name: 'code_ean',\r\n    label : 'Codigo EAN',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputIsNeto: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'is_neto',\r\n    label : 'Es Neto',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputDescription: {\r\n    type: 'textarea',\r\n    required: false,\r\n    name: 'description',\r\n    label : 'Descripción (opcional)',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputAutoSale: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'is_auto_sale',\r\n    label : 'Auto Venta',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputMethodSale: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'method_sale',\r\n    label : 'Método de Venta',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputPrice: {\r\n    type: 'number',\r\n    required: true,\r\n    name: 'price',\r\n    label : 'Precio',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    step: 'any',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputSticker: {\r\n    type: 'color',\r\n    required: true,\r\n    name: 'sticker_color',\r\n    label : 'color de la Etiqueta',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputCategory: {\r\n    type: 'select',\r\n    multiple: true,\r\n    required: false,\r\n    name: 'id_category',\r\n    label : 'Categoria',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputPack: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'pack',\r\n    label : 'Pack',\r\n    placeholder: 'Ingrese la cantidad de venta',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    step: 'any',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n}\r\n\r\nFormProductSale.propTypes = {\r\n  handleSubmitProduct : PropTypes.func,\r\n  isInventary: PropTypes.bool,\r\n}\r\n\r\nexport default FormProductSale\r\n","import React, { useMemo, useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { API_URL } from 'utils/constants'\r\nimport layoutHelpers from 'shared/layouts/helpers'\r\nimport FormProductSale from 'components/FormProductSale'\r\n\r\nconst ProductFormPage = (props) => {\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem('configStore')){\r\n      layoutHelpers.toggleCollapsed()\r\n      return () => {\r\n        layoutHelpers.toggleCollapsed()\r\n      }\r\n    }else{\r\n      toast.error('Error, debe hacer su configuración de empresa')\r\n      props.history.replace('/config/config_store')\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <FormProductSale\r\n      {...props}\r\n      handleSubmitProduct={() => {}}\r\n      isInventary={true}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default ProductFormPage\r\n"],"sourceRoot":""}