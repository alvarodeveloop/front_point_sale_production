{"version":3,"sources":["components/Table.jsx","components/modals/ModalInvoiceActions.jsx","components/StadisticsInvoiceComponent.jsx","pages/SaleNoteSearchPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","pageSizeHandler","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","pageSize","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","position","getCellProps","autoRemove","val","Table","ModalInvoiceActions","props","show","isShow","onHide","aria-labelledby","centered","Header","closeButton","Title","isLoading","Body","cotization","status","Fragment","isInvoice","sm","md","lg","seeDetailCotization","block","goToBond","printInvoice","noteCredit","isGuide","goToInvoice","anulateInvoice","Footer","optionsBar","responsive","maintainAspectRatio","animation","duration","hover","animationDuration","responsiveAnimationDuration","options_line","scales","yAxes","ticks","beginAtZero","data_donut_ss_status","labels","datasets","hoverBackgroundColor","data_donut_total_status","data_donut_status_bonds","data_bar_failure_tipology","label","borderColor","borderWidth","hoverBorderColor","data_line_by_year","fill","StadisticsInvoiceComponent","useEffect","redraw","handleDataDonutSsStatus","setDataForm","dataForm","name","statusCotization","statuses","forEach","v","push","parseFloat","total","ARRAY_COLORS","statusesBonds","bondsByMonth","mes","invoiceByYear","item","year","totalByStatus","handleDisplayFilter","xs","Toggle","as","Card","eventKey","Collapse","displayFilter","required","messageErrors","cols","date_desde","handleChange","date_hasta","handleStadistics","src","require","width","options","colSpan","Object","configGeneral","simbolo_moneda","showPriceWithDecimals","cotizacionColumns","connect","id_branch_office","enterpriseSucursal","id_enterprise","configs","config","configStore","useState","displayLoading","setDisplayLoading","invoiceData","setInvoiceData","saleNoteDetail","setSaleNoteDetail","isOpenModalDetail","setIsOpenModalDetail","setRedraw","setStatusCotization","setDisplayFilter","invoiceAction","setInvoiceAction","isOpenModalAction","setIsOpenModalAction","accessor","Cell","props1","original","placement","overlay","onHideModalAction","ref","name_seller","phone_seller","name_contact","phone_contact","comment","business_name_client","type_invoicing","moment","date_issue_invoice","tz","format","products","name_product","price","quantity","total_product","total_gastos","total_iva","ref_sale","type_discount_global","discount_global","discount_global_amount","discount_or_recharge_discount_global","total_balance","total_bond","debit_balance","assign","layoutHelpers","toggleCollapsed","fetchData","originalCoti","setTimeout","objectPost","promises","axios","get","API_URL","post","Promise","all","then","result","catch","err","tokenExpired","handleModalDetail","confirmAnulateInvoice","toast","info","put","success","fluid","history","replace","business_name_transmitter","rut_transmitter","address_transmitter","email_transmitter","phone_transmitter","country_transmitter","rut_client","address_client","city_client","comuna_client","spin_client","email_contact","email_seller","category","description","formatNumber","discount","method","method_sale","parseInt","is_neto","gastos","amount","refs","type_document","ref_invoice","ind","date_ref","reason_ref","type_code","total_with_iva","way_of_payment","window","open","datos","confirmAlert","customUI","onClose"],"mappings":"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","file":"static/js/40.9375541c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor, pageSizeHandler }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0, pageSize : pageSizeHandler[0] },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table_responsive_eddit\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {pageSizeHandler.map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td style={{position: \"relative\"}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {pageSizeHandler.map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor,pageSizeHandler}) => {\r\n  pageSizeHandler = pageSizeHandler ? pageSizeHandler : [10, 20, 30, 40, 50]; \r\n  return (\r\n    <Styles>\r\n      <DataTable pageSizeHandler={pageSizeHandler} data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n  pageSizeHandler : PropTypes.array,\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport 'styles/components/modalComponents.css'\r\nimport {Modal,Row,Col,Button} from 'react-bootstrap'\r\nimport {FaEye,FaFilePdf,FaBan,FaFileInvoice} from 'react-icons/fa'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nconst ModalInvoiceActions = (props) => {\r\n  return (\r\n    <Modal\r\n      show={props.isShow}\r\n      onHide={props.onHide}\r\n      size=\"xl\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton className=\"header_dark\">\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Acciones Disponibles\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      {props.isLoading ? (\r\n        <Modal.Body>\r\n          <LoadingComponent />\r\n        </Modal.Body>\r\n      ) : (\r\n        <Modal.Body>\r\n          {props.cotization.status >= 1 && props.cotization.status <= 3 ? (\r\n            <React.Fragment>\r\n              <h5 className=\"title_principal\">Acciones generales</h5>\r\n              <hr/>\r\n              {props.isInvoice ? (\r\n                <Row className=\"justify-content-center\">\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToBond(props.cotization)} block={true}>Pagos <FaFilePdf /></Button>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printInvoice(props.cotization)} block={true}>Ver factura pdf <FaFilePdf /></Button>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.noteCredit(props.cotization)} block={true}>Nota de crédito o Debito <FaFilePdf /></Button>\r\n                  </Col>\r\n                </Row>\r\n              ) : props.isGuide ? (\r\n                <Row className=\"justify-content-center\">\r\n                  <Col sm={4} md={4} lg={4}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                  </Col>\r\n                  <Col sm={4} md={4} lg={4}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToInvoice(props.cotization.id)} block={true}>Facturar <FaFileInvoice /></Button>\r\n                  </Col>\r\n                  <Col sm={4} md={4} lg={4}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printInvoice(props.cotization)} block={true}>Ver factura pdf <FaFilePdf /></Button>\r\n                  </Col>\r\n                </Row>\r\n              ) : (\r\n                <Row className=\"justify-content-center\">\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToBond(props.cotization)} block={true}>Pagos <FaFilePdf /></Button>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printInvoice(props.cotization)} block={true}>Ver factura pdf <FaFilePdf /></Button>\r\n                  </Col>\r\n                  {props.cotization.type == 2 ? (\r\n                    <Col sm={3} md={3} lg={3}>\r\n                      <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printInvoice(props.cotization,3)} block={true}>Generar nueva factura pdf <FaFilePdf /></Button>\r\n                    </Col>\r\n                  ) : ''}\r\n                </Row>\r\n              )}\r\n              <br/>\r\n              {props.cotization.status != 2 ? (\r\n                <Row className=\"justify-content-center\">\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <h5 className=\"title_principal\">Anular Documento</h5>\r\n                    <hr/>\r\n                  </Col>\r\n                  <Col sm={3} md={3} lg={3}>\r\n                    <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.anulateInvoice(props.cotization)} block={true}>Anular Documento <FaBan /></Button>\r\n                  </Col>\r\n                </Row>\r\n              ) : ''}\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <h5 className=\"title_principal\">Acciones generales</h5>\r\n              <hr/>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printInvoice(props.cotization)} block={true}>Ver factura pdf <FaFilePdf /></Button>\r\n                </Col>\r\n              </Row>\r\n            </React.Fragment>\r\n          )}\r\n        </Modal.Body>\r\n      )}\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" size=\"md\" onClick={props.onHide}>Cerrar</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nModalInvoiceActions.propTypes = {\r\n  isShow: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  cotization: PropTypes.object.isRequired,\r\n  printInvoice: PropTypes.func.isRequired,\r\n  goToBond: PropTypes.func,\r\n  noteCredit: PropTypes.func,\r\n  anulateInvoice: PropTypes.func.isRequired,\r\n  seeDetailCotization: PropTypes.func.isRequired,\r\n  goToInvoice: PropTypes.func,\r\n  isInvoice: PropTypes.bool,\r\n  isGuide: PropTypes.bool,\r\n  isLoading : PropTypes.bool,\r\n}\r\n\r\nexport default ModalInvoiceActions\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  Badge,\r\n  Accordion,\r\n  Card,\r\n  Image\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { showPriceWithDecimals } from 'utils/functions'\r\nimport { FaPlusCircle, FaChartLine } from \"react-icons/fa\";\r\nimport * as moment from 'moment-timezone'\r\nimport {Doughnut,Bar,Line} from 'react-chartjs-2';\r\nimport { ARRAY_COLORS, ARRAY_MONTH } from 'utils/constants'\r\n\r\nlet optionsBar = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    duration: 0\r\n  },\r\n  hover: {\r\n    animationDuration: 0\r\n  },\r\n  responsiveAnimationDuration: 0,\r\n}\r\n\r\nconst options_line = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  maintainAspectRatio: false,\r\n}\r\n\r\nlet data_donut_ss_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nlet data_donut_total_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nlet data_donut_status_bonds = {\r\n  labels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n}\r\n\r\nlet data_bar_failure_tipology = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'Monto acumulado de pagos hechos por mes',\r\n      backgroundColor: 'rgb(15, 13, 74)',\r\n      borderColor: 'rgb(27, 13, 74)',\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: 'rgb(15, 13, 74)',\r\n      hoverBorderColor: 'rgb(27, 13, 74)',\r\n      data: []\r\n    }\r\n  ]\r\n};\r\n\r\nlet data_line_by_year = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'Cantidad facturada por años',\r\n      data: [],\r\n      fill: false,\r\n      backgroundColor: 'rgb(125, 81, 52)',\r\n      borderColor: 'rgb(99, 56, 21)',\r\n    },\r\n  ],\r\n}\r\n\r\nconst  StadisticsInvoiceComponent = (props) => {\r\n\r\n  useEffect(() => {\r\n    if(props.redraw){\r\n\r\n      data_donut_ss_status = {\r\n      \tlabels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      };\r\n\r\n      data_donut_status_bonds = {\r\n        labels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      }\r\n\r\n      data_bar_failure_tipology = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Monto acumulado de pagos hechos por mes',\r\n            backgroundColor: 'rgb(15, 13, 74)',\r\n            borderColor: 'rgb(27, 13, 74)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgb(15, 13, 74)',\r\n            hoverBorderColor: 'rgb(27, 13, 74)',\r\n            data: []\r\n          }\r\n        ]\r\n      };\r\n\r\n      data_line_by_year =  {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Cantidad facturada por años',\r\n            data: [],\r\n            fill: false,\r\n            backgroundColor: 'rgb(125, 81, 52)',\r\n            borderColor: 'rgb(99, 56, 21)',\r\n          },\r\n        ],\r\n      }\r\n\r\n      data_donut_total_status = {\r\n      \tlabels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      };\r\n\r\n      handleDataDonutSsStatus()\r\n    }\r\n  },[props.redraw])\r\n\r\n  const onChange = e => {\r\n    props.setDataForm({...props.dataForm,[e.target.name] : e.target.value})\r\n  }\r\n\r\n  const handleDataDonutSsStatus = () => {\r\n    props.statusCotization.statuses.forEach((v, i) => {\r\n      data_donut_ss_status.labels.push(v.status)\r\n      data_donut_ss_status.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_ss_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_ss_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n    props.statusCotization.statusesBonds.forEach((v, i) => {\r\n      data_donut_status_bonds.labels.push(v.status)\r\n      data_donut_status_bonds.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_status_bonds.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_status_bonds.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n    props.statusCotization.bondsByMonth.forEach((v, i) => {\r\n      data_bar_failure_tipology.labels.push(v.mes)\r\n      data_bar_failure_tipology.datasets[0].data.push(v.total)\r\n    });\r\n\r\n    props.statusCotization.invoiceByYear.forEach((item, i) => {\r\n      data_line_by_year.labels.push(item.year)\r\n      data_line_by_year.datasets[0].data.push(item.total)\r\n    });\r\n\r\n    props.statusCotization.totalByStatus.forEach((v, i) => {\r\n      data_donut_total_status.labels.push(v.name)\r\n      data_donut_total_status.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_total_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_total_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n  }\r\n\r\n  const handleStadistics = () => {\r\n    props.handleStadistics()\r\n  }\r\n\r\n  const handleDisplayFilter = filter => {\r\n    props.handleDisplayFilter(filter)\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm={12} md={12} lg={12} xs={12}>\r\n        <Accordion>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"header_card\">\r\n              <b>Estadísticas</b> <FaChartLine />\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body>\r\n                <Row className=\"justify-content-center\">\r\n                  {props.displayFilter == 1 ? (\r\n                    <Col sm={2} md={2} lg={2}>\r\n                      <Button variant=\"secondary\" type=\"button\" size=\"sm\" block={true} onClick={() => handleDisplayFilter(2)}>Activar Filtros</Button>\r\n                    </Col>\r\n                  ) : props.displayFilter == 2 ? (\r\n                    <React.Fragment>\r\n                      <InputField\r\n                       type='date'\r\n                       label='Fecha desde'\r\n                       name='date_desde'\r\n                       required={true}\r\n                       messageErrors={[\r\n                       'Requerido*'\r\n                       ]}\r\n                       cols='col-md-3 col-lg-3 col-sm-3'\r\n                       value={props.dataForm.date_desde}\r\n                       handleChange={onChange}\r\n                      />\r\n                      <InputField\r\n                        type='date'\r\n                        label='Fecha Hasta'\r\n                        name='date_hasta'\r\n                        required={true}\r\n                        messageErrors={[\r\n                        'Requerido*'\r\n                        ]}\r\n                        cols='col-md-3 col-lg-3 col-sm-3'\r\n                        value={props.dataForm.date_hasta}\r\n                        handleChange={onChange}\r\n                      />\r\n                      <Col sm={3} md={3} lg={3}>\r\n                        <br/>\r\n                        <Button variant=\"danger\" type=\"button\" size=\"sm\" block={true} onClick={handleStadistics}>Buscar</Button>\r\n                      </Col>\r\n                      <Col sm={3} md={3} lg={3}>\r\n                        <br/>\r\n                        <Button variant=\"secondary\" type=\"button\" size=\"sm\" block={true} onClick={() => handleDisplayFilter(1)}>Ocultar Filtros</Button>\r\n                      </Col>\r\n                    </React.Fragment>\r\n\r\n                  ) : (\r\n                    <Col sm={12} md={12} lg={12} className=\"text-center\">\r\n                      <br/>\r\n                      <Image src={require('../assets/img/loading.gif')} width=\"30\" />\r\n                      <br/>\r\n                      Cargando datos...\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                  <Col sm={6} md={6} lg={6} style={{height: \"150px\"}}>\r\n                    <Doughnut data={data_donut_ss_status} redraw={props.redraw} options={optionsBar} />\r\n                  </Col>\r\n                  <Col sm={6} md={6} lg={6}>\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"text-center\" colSpan=\"2\" style={{backgroundColor: \"rgb(147, 52, 12)\", color: \"white\"}}>Monto acumulado por estados</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Estado</th>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"text-center\">\r\n                        {Object.keys(props.statusCotization).length > 0 ? (\r\n                          <React.Fragment>\r\n                            {props.statusCotization.statuses.map((v,i) => (\r\n                              <tr key={i}>\r\n                                <td>{v.status}</td>\r\n                                <td>{props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,v.total)}</td>\r\n                              </tr>\r\n                            ))}\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          <tr>\r\n                            <td colSpan=\"3\" className=\"text-center\">Sin registros...</td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={6} md={6} lg={6}>\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"text-center\" colSpan=\"2\" style={{backgroundColor: \"rgb(21, 26, 88)\", color: \"white\"}}>Monto pagado por estados</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Estado</th>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"text-center\">\r\n                        {Object.keys(props.statusCotization).length > 0 ? (\r\n                          <React.Fragment>\r\n                            {props.statusCotization.statusesBonds.map((v,i) => (\r\n                              <tr key={i}>\r\n                                <td>{v.status}</td>\r\n                                <td>{props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,v.total)}</td>\r\n                              </tr>\r\n                            ))}\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          <tr>\r\n                            <td colSpan=\"3\" className=\"text-center\">Sin registros...</td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </Col>\r\n                  <Col sm={6} md={6} lg={6} style={{height: \"150px\"}}>\r\n                    <Doughnut data={data_donut_status_bonds} redraw={props.redraw} options={optionsBar} />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={12} md={12} lg={12} style={{height: \"200px\"}}>\r\n                    <Bar\r\n                      data={data_bar_failure_tipology}\r\n                      options={optionsBar}\r\n                      redraw={props.redraw}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                  <Col sm={6} md={6} lg={6} style={{height: \"200px\"}}>\r\n                    <table className=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"text-center\" colSpan=\"2\" style={{backgroundColor: \"rgb(147, 52, 12)\", color: \"white\"}}>Total {props.dataForm.type == 1 ? \"facturas\" : props.dataForm.type == 2 ? \"notas de ventas\" : \"boletas\"} realizadas</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Estado</th>\r\n                          <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"text-center\">\r\n                        {Object.keys(props.statusCotization).length > 0 ? (\r\n                          <React.Fragment>\r\n                            {props.statusCotization.totalByStatus.map((v,i) => (\r\n                              <tr key={i}>\r\n                                <td>{v.name}</td>\r\n                                <td>{v.total}</td>\r\n                              </tr>\r\n                            ))}\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          <tr>\r\n                            <td colSpan=\"3\" className=\"text-center\">Sin registros...</td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </Col>\r\n                  <Col sm={6} md={6} lg={6} style={{height: \"150px\"}} className=\"text-center\">\r\n                    <Doughnut data={data_donut_total_status} redraw={props.redraw} options={optionsBar} />\r\n                  </Col>\r\n                </Row>\r\n                <br/><br/><br/>\r\n                <Row>\r\n                  <Col sm={12} md={12} lg={12} style={{height: \"200px\"}}>\r\n                    <Line data={data_line_by_year} options={options_line} />\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nStadisticsInvoiceComponent.propTypes = {\r\n  setDataForm: PropTypes.func.isRequired,\r\n  dataForm: PropTypes.object.isRequired,\r\n  redraw: PropTypes.bool.isRequired,\r\n  statusCotization: PropTypes.object.isRequired,\r\n  handleDisplayFilter: PropTypes.func.isRequired,\r\n  handleStadistics: PropTypes.func.isRequired,\r\n  displayFilter: PropTypes.any.isRequired,\r\n}\r\n\r\nexport default StadisticsInvoiceComponent\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  Badge,\r\n  Modal\r\n} from 'react-bootstrap'\r\nimport Table from 'components/Table'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport { showPriceWithDecimals } from 'utils/functions'\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport layoutHelpers from 'shared/layouts/helpers'\r\nimport * as moment from 'moment-timezone'\r\nimport { formatNumber } from 'utils/functions'\r\nimport 'styles/components/modalComponents.css'\r\nimport { connect } from 'react-redux'\r\nimport ModalInvoiceActions from 'components/modals/ModalInvoiceActions'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport StadisticsInvoiceComponent from 'components/StadisticsInvoiceComponent'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nlet cotizacionColumns = null\r\n\r\nconst SaleNoteSearchPage = props => {\r\n\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n  const [invoiceData, setInvoiceData] = useState([])\r\n  const [saleNoteDetail, setSaleNoteDetail] = useState({})\r\n  const [isOpenModalDetail, setIsOpenModalDetail] = useState(false)\r\n  const [redraw, setRedraw] = useState(false)\r\n  const [statusCotization, setStatusCotization] = useState({})\r\n  const [displayFilter,setDisplayFilter] = useState(1)\r\n  const [dataForm, setDataForm] = useState({\r\n    date_desde : '',\r\n    date_hasta: '',\r\n    type : 2\r\n  })\r\n  const [invoiceAction,setInvoiceAction] = useState({})\r\n  const [isOpenModalAction,setIsOpenModalAction] = useState(false)\r\n\r\n  useMemo(() => {\r\n    cotizacionColumns = [\r\n        {\r\n          Header: 'Referencia',\r\n          accessor: 'ref',\r\n          Cell: props1 => {\r\n            const {original} = props1.cell.row\r\n            return (\r\n              <OverlayTrigger placement={'bottom'} overlay={<Tooltip id=\"tooltip-disabled2\">Hacer click para acceder a las acciones de la Nota</Tooltip>}>\r\n                <Button variant=\"link\" block={true} type=\"button\" size=\"sm\" onClick={() => onHideModalAction(original)}>{ original.ref }</Button>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Referencia-Cotización',\r\n          accessor: 'ref_cotizacion',\r\n        },\r\n        {\r\n          Header: 'Referencia-Venta',\r\n          accessor: 'ref_sale',\r\n        },\r\n        {\r\n          Header: 'Rut Cliente',\r\n          accessor: 'rut_client',\r\n        },\r\n        {\r\n          Header: 'Razón Social',\r\n          accessor: 'business_name_client',\r\n          Cell: props1 => {\r\n            const {original} = props1.cell.row\r\n            return(\r\n              <OverlayTrigger placement={'right'} overlay={\r\n              <Tooltip id=\"tooltip-disabled2\">\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"><b>Vendedor: </b> {original.name_seller}</li>\r\n                  <li className=\"list-group-item\"><b>Fono del Vendedor: </b> {original.phone_seller ? original.phone_seller : 'No posee'}</li>\r\n                  <li className=\"list-group-item\"><b>Contacto</b> {original.name_contact ? original.name_contact : 'No posee'}</li>\r\n                  <li className=\"list-group-item\"><b>Fono del Contacto: </b> {original.phone_contact}</li>\r\n                  <li className=\"list-group-item\"><b>Comentario: </b> {original.comment}</li>\r\n                </ul>\r\n              </Tooltip>}>\r\n                <Button variant=\"link\" size=\"sm\" block={true} type=\"button\">{original.business_name_client}</Button>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Tipo',\r\n          accessor: props1 => props1.type_invoicing == 1 ? ['Afecta'] : ['Excento'],\r\n        },\r\n        {\r\n          Header: 'Fecha-Emisión',\r\n          accessor: props1 => [moment(props1.date_issue_invoice).tz('America/Santiago').format('DD-MM-YYYY')],\r\n        },\r\n        {\r\n          Header: 'Días de Vencimiento',\r\n          accessor: 'days_expiration'\r\n        },\r\n        {\r\n          Header: 'Status',\r\n          accessor: props1 => {\r\n            if(props1.status == 1){\r\n              return (<Badge variant=\"secondary\" className=\"font-badge\">Pendiente</Badge>)\r\n            }else if(props1.status == 2){\r\n              return (<Badge variant=\"secondary\" className=\"font-badge\">Pagada</Badge>)\r\n            }else if(props1.status == 3){\r\n              return (<Badge variant=\"secondary\" className=\"font-badge\">Vencida</Badge>)\r\n            }else{\r\n              return (<Badge variant=\"secondary\" className=\"font-badge\">Anulada</Badge>)\r\n            }\r\n          },\r\n        },\r\n        {\r\n          Header: 'Total Productos',\r\n          accessor: 'total_product',\r\n          Cell: props1 => {\r\n            return (\r\n              <OverlayTrigger placement={'left'} overlay={\r\n                <Tooltip id={\"tooltip-total_pagar\"+props1.cell.row.original.id}>\r\n                  <ul className=\"list-group\">\r\n                    {props1.cell.row.original.products.map((v,i) => (\r\n                      <li className=\"list-group-item\" key={i}>\r\n                        <b>Producto</b>: {v.name_product}<br/>\r\n                        <b>Precio</b> : {props.configGeneral ? props.configGeneral.simbolo_moneda : ''}{showPriceWithDecimals(props.configGeneral,v.price)}<br/>\r\n                        <b>Cantidad</b>: {v.quantity}</li>\r\n                    ))}\r\n                  </ul>\r\n                </Tooltip>}>\r\n                  <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                    {props.configGeneral ? props.configGeneral.simbolo_moneda : ''}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_product)}\r\n                  </Badge>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total gastos',\r\n          accessor: 'total_gastos',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral ? props.configGeneral.simbolo_moneda : ''}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_gastos)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total Iva',\r\n          accessor: 'total_iva',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral ? props.configGeneral.simbolo_moneda : ''}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_iva)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Descuento o Recargo Global',\r\n          accessor: 'discount_global_total',\r\n          Cell: props1 => {\r\n            const {original} = props1.cell.row\r\n            return (\r\n              <OverlayTrigger placement={'left'} overlay={\r\n                <Tooltip id={\"tooltip-total_pagar\"+original.id}>\r\n                  {original.ref_sale ? (\r\n                    <React.Fragment>\r\n                      Monto: { original.type_discount_global ? original.discount_global+\"%\" : showPriceWithDecimals(props.configGeneral,original.discount_global_amount)}\r\n                      <br/>\r\n                      {original.discount_global_amount > 0 ? (\r\n                        <React.Fragment>\r\n                          <b>Tipo:</b> { original.type_discount_global ? \"Porcentaje\" : \"Fijo\"} - {original.discount_or_recharge_discount_global ? \"Descuento\" : \"Recarga\"}\r\n                        </React.Fragment>\r\n                      ) : ''}\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    <React.Fragment>\r\n                      {original.discount_global}%\r\n                    </React.Fragment>\r\n                  )}\r\n                </Tooltip>}>\r\n                  <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                    {props.configGeneral ? props.configGeneral.simbolo_moneda : ''}{showPriceWithDecimals(props.configGeneral,original.discount_global_amount)}\r\n                  </Badge>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total Balance',\r\n          accessor: 'total_balance',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral ? props.configGeneral.simbolo_moneda : ''}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_balance)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Abonado',\r\n          accessor: 'total_bond',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"danger\" className=\"font-badge\">\r\n                {props.configGeneral ? props.configGeneral.simbolo_moneda : ''}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_bond)}\r\n              </Badge>\r\n\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Saldo Deudor',\r\n          accessor: 'debit_balance',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"danger\" className=\"font-badge\">\r\n                {props.configGeneral ? props.configGeneral.simbolo_moneda : ''}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.debit_balance)}\r\n              </Badge>\r\n\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Acciones',\r\n          Cell: props1 => {\r\n            let  original = Object.assign({},props1.cell.row.original)\r\n            return (\r\n              <Button variant=\"primary\" block={true} type=\"button\" size=\"sm\" onClick={() => onHideModalAction(original)}>Acciones</Button>\r\n            )\r\n          }\r\n        }\r\n    ]\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    layoutHelpers.toggleCollapsed()\r\n    return () =>{\r\n      cotizacionColumns = null\r\n      layoutHelpers.toggleCollapsed()\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  },[props.id_branch_office])\r\n\r\n  useEffect(() => {\r\n    if(redraw){\r\n      handleDataDonutSsStatus()\r\n    }\r\n  },[redraw])\r\n\r\n  const onHideModalAction = (originalCoti = false) => {\r\n    if(!isOpenModalAction && originalCoti){\r\n      setInvoiceAction(originalCoti)\r\n    }\r\n    setIsOpenModalAction(!isOpenModalAction)\r\n  }\r\n\r\n  const handleDataDonutSsStatus = () => {\r\n    setTimeout(function () {\r\n      setRedraw(false)\r\n    }, 2000);\r\n  }\r\n\r\n  const handleStadistics = () => {\r\n    let objectPost = Object.assign({},dataForm)\r\n    setDisplayFilter(3)\r\n     axios.post(API_URL+'invoice_stadistics',objectPost).then(result => {\r\n      setStatusCotization({...statusCotization,statusesBonds: result.data.statusesBonds, statuses : result.data.statuses, bondsByMonth: result.data.bondsByMonth, invoiceByYear: result.data.invoiceByYear, totalByStatus: result.data.totalByStatus})\r\n      setTimeout(function () {\r\n        setRedraw(true)\r\n        setDisplayFilter(1)\r\n      }, 1000);\r\n     }).catch(err => {\r\n       setDisplayFilter(1)\r\n      props.tokenExpired(err)\r\n     })\r\n  }\r\n\r\n  const handleDisplayFilter = filter => {\r\n    if(filter == 3){\r\n      setDataForm({date_desde: '', date_hasta: ''})\r\n    }\r\n    setDisplayFilter(filter)\r\n  }\r\n\r\n  const fetchData = () => {\r\n\r\n    let objectPost = Object.assign({},dataForm)\r\n    let promises = [\r\n      axios.get(API_URL+'invoice/0/2'),\r\n      axios.post(API_URL+'invoice_stadistics',objectPost),\r\n    ]\r\n    Promise.all(promises).then(result => {\r\n      setInvoiceData(result[0].data)\r\n      setStatusCotization({...statusCotization, statusesBonds: result[1].data.statusesBonds, statuses : result[1].data.statuses, bondsByMonth: result[1].data.bondsByMonth, invoiceByYear: result[1].data.invoiceByYear, totalByStatus: result[1].data.totalByStatus})\r\n      setTimeout(function () {\r\n        setRedraw(true)\r\n      }, 1000);\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const goToForm = () => {\r\n    props.history.replace('/sale_note/sale_note_create')\r\n  }\r\n\r\n  const printInvoice = (original,type = 0) => {\r\n    toast.info('Cargando documento, espere por favor')\r\n    setDisplayLoading(true)\r\n    setIsOpenModalAction(false)\r\n    axios.get(API_URL+'invoice_print/'+original.id+\"/\"+type+\"/2\").then(result => {\r\n      window.open(API_URL+'documents/sale_note/files_pdf/'+result.data.name)\r\n      setDisplayLoading(false)\r\n      setIsOpenModalAction(true)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const handleModalDetail = () => {\r\n    setIsOpenModalDetail(!isOpenModalDetail)\r\n  }\r\n\r\n  const displayMehotdSale = method => {\r\n    method = parseInt(method)\r\n    if(method === 1){\r\n      return \"Unidad\"\r\n    }else if(method === 2){\r\n      return \"Mayorista\"\r\n    }else{\r\n      return \"(Litros, Kg, Etc..)\"\r\n    }\r\n  }\r\n\r\n  const seeDetailCotization = data => {\r\n    setSaleNoteDetail(data)\r\n    handleModalDetail()\r\n  }\r\n\r\n  const goToBond = datos => {\r\n    props.history.replace('/sale_note/sale_note_bond/'+datos.id)\r\n  }\r\n\r\n  const anulateInvoice = datos => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui-edit'>\r\n            <h1>¿Esta seguro?</h1>\r\n            <p className=\"font-alert\">¿Desea realmente anular este registro?</p>\r\n            <button className=\"button-alert\"\r\n              onClick={() => {\r\n                confirmAnulateInvoice(datos.id);\r\n                onClose();\r\n              }}\r\n            >\r\n              Si, Aceptar\r\n            </button>\r\n            <button className=\"button-alert\" onClick={onClose}>No</button>\r\n          </div>\r\n        );\r\n      }\r\n    }); \r\n  }\r\n\r\n  const confirmAnulateInvoice = id => {\r\n    toast.info('Anulando nota, esto podría tardar algunos segundos... espere por favor')\r\n    setDisplayLoading(true)\r\n    axios.put(API_URL+'invoice_status/'+id).then(result => {\r\n        toast.success('Nota de venta anulada con éxito')\r\n        setInvoiceAction({...invoiceAction,status: 4})\r\n        fetchData()\r\n     }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n  return (\r\n\r\n    <Container fluid>\r\n      <Row>\r\n        <Col sm={6} md={6} lg={6} className=\"text-center\">\r\n          <h4 className=\"title_principal\">Tabla de Notas de Ventas</h4>\r\n          <Button block={true} variant=\"success\" onClick={goToForm} size=\"sm\">Nueva Nota <FaPlusCircle /></Button>\r\n        </Col>\r\n        <Col sm={6} md={6} lg={6} className=\"text-center title_principal\">\r\n          <h4>Total Notas Realizadas</h4>\r\n          <Badge variant=\"danger\">{invoiceData.length}</Badge>\r\n        </Col>\r\n      </Row>\r\n      <hr/>\r\n      {displayLoading ? (\r\n        <LoadingComponent />\r\n      ) : (\r\n        <>\r\n          <StadisticsInvoiceComponent\r\n            setDataForm={setDataForm}\r\n            dataForm={dataForm}\r\n            redraw={redraw}\r\n            statusCotization={statusCotization}\r\n            handleDisplayFilter={handleDisplayFilter}\r\n            handleStadistics={handleStadistics}\r\n            displayFilter={displayFilter}\r\n            configGeneral={props.configGeneral}\r\n          />\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} xs={12}>\r\n              <Table columns={cotizacionColumns} data={invoiceData}/>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n      <Modal\r\n        show={isOpenModalDetail}\r\n        onHide={handleModalDetail}\r\n        size=\"xl\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        >\r\n        <Modal.Header closeButton className=\"header_dark\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Detalles de la Nota N° {Object.keys(saleNoteDetail).length > 0 ? saleNoteDetail.ref : ''}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Registrador</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Rut</th>\r\n                    <th className=\"text-center\">Dirección</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">País</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(saleNoteDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{saleNoteDetail.business_name_transmitter}</td>\r\n                      <td>{saleNoteDetail.rut_transmitter}</td>\r\n                      <td>{saleNoteDetail.address_transmitter}</td>\r\n                      <td>{saleNoteDetail.email_transmitter}</td>\r\n                      <td>{saleNoteDetail.phone_transmitter}</td>\r\n                      <td>{saleNoteDetail.country_transmitter}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Cliente</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Razon Social / Nombre</th>\r\n                    <th className=\"text-center\">Rut</th>\r\n                    <th className=\"text-center\">Dirección</th>\r\n                    <th className=\"text-center\">Ciudad</th>\r\n                    <th className=\"text-center\">Comuna</th>\r\n                    <th className=\"text-center\">Giro</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(saleNoteDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{saleNoteDetail.business_name_client}</td>\r\n                      <td>{saleNoteDetail.rut_client}</td>\r\n                      <td>{saleNoteDetail.address_client}</td>\r\n                      <td>{saleNoteDetail.city_client}</td>\r\n                      <td>{saleNoteDetail.comuna_client}</td>\r\n                      <td>{saleNoteDetail.spin_client}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Contacto</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(saleNoteDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{saleNoteDetail.name_contact}</td>\r\n                      <td>{saleNoteDetail.phone_contact}</td>\r\n                      <td>{saleNoteDetail.email_contact}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Vendedor</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(saleNoteDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{saleNoteDetail.name_seller}</td>\r\n                      <td>{saleNoteDetail.phone_seller}</td>\r\n                      <td>{saleNoteDetail.email_seller}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n              <h4 className=\"title_principal text-center\">Productos de la Factura</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Categoria</th>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Descripción</th>\r\n                    <th className=\"text-center\">Cantidad</th>\r\n                    <th className=\"text-center\">Precio</th>\r\n                    <th className=\"text-center\">Descuento</th>\r\n                    <th className=\"text-center\">Método de Venta</th>\r\n                    <th className=\"text-center\">Neto</th>\r\n                    <th className=\"text-center\">Total</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(saleNoteDetail).length > 0 ? (\r\n                    <React.Fragment>\r\n                      {saleNoteDetail.products.map((v,i) => (\r\n                        <tr>\r\n                          <td>{v.category}</td>\r\n                          <td>{v.name_product}</td>\r\n                          <td>{v.description}</td>\r\n                          <td>{v.quantity}</td>\r\n                          <td>{props.configGeneral.simbolo_moneda}{formatNumber(v.price,2,',','.')}</td>\r\n                          <td>{v.discount}</td>\r\n                          <td>{displayMehotdSale(v.method_sale)}</td>\r\n                          <td>{v.is_neto ? 'Neto' : \"Iva\"}</td>\r\n                          <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(v.total,2,',','.')}</Badge></td>\r\n                        </tr>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"\">\r\n              <h4 className=\"title_principal text-center\">Gastos de la Factura</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Descripción</th>\r\n                    <th className=\"text-center\">Monto</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(saleNoteDetail).length > 0 ? (\r\n                    <React.Fragment>\r\n                      {saleNoteDetail.gastos.map((v,i) => (\r\n                        <tr>\r\n                          <td>{v.description}</td>\r\n                          <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(v.amount,2,',','.')}</Badge></td>\r\n                        </tr>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          {Object.keys(saleNoteDetail).length > 0 && saleNoteDetail.refs.length > 0 ? (\r\n            <Row>\r\n              <Col sm={12} md={12} lg={12} className=\"\">\r\n                <h4 className=\"title_principal text-center\">Referencias de la Factura</h4>\r\n                <br/>\r\n                <table className=\"table table-striped table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-center\">Tipo de Documento</th>\r\n                      <th className=\"text-center\">Referencia Cotiz.</th>\r\n                      <th className=\"text-center\">Ind</th>\r\n                      <th className=\"text-center\">Fecha Ref.</th>\r\n                      <th className=\"text-center\">Razón de Referencia</th>\r\n                      <th className=\"text-center\">Tipo de Código</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"text-center\">\r\n                    {Object.keys(saleNoteDetail).length > 0 ? (\r\n                      <React.Fragment>\r\n                        {saleNoteDetail.refs.map((v,i) => (\r\n                          <tr>\r\n                            <td>{v.type_document}</td>\r\n                            <td>{v.ref_invoice}</td>\r\n                            <td>{v.ind}</td>\r\n                            <td>{v.date_ref ? moment(v.date_ref).tz('America/Santiago').format('DD-MM-YYYY') : ''}</td>\r\n                            <td>{v.reason_ref}</td>\r\n                            <td>{v.type_code}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </React.Fragment>\r\n                    ) : ''}\r\n                  </tbody>\r\n                </table>\r\n              </Col>\r\n            </Row>\r\n          ) : ''}\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"\">\r\n              <h4 className=\"title_principal text-center\">Totales</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Total Neto</th>\r\n                    <th className=\"text-center\">Total Iva</th>\r\n                    <th className=\"text-center\">Total Gastos</th>\r\n                    <th className=\"text-center\">Total Descuento Global</th>\r\n                    <th className=\"text-center\">Total Balance</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(saleNoteDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(saleNoteDetail.total_product,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(saleNoteDetail.total_iva,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(saleNoteDetail.total_gastos,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(saleNoteDetail.discount_global_amount,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(saleNoteDetail.total_balance,2,',','.')}</Badge></td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={6} md={6} lg={6}>\r\n              {Object.keys(saleNoteDetail).length > 0 ? (\r\n                <h5>Mostrar solo los Totales: <Badge variant=\"primary\" className=\"font-badge\">{saleNoteDetail.total_with_iva ? 'No' : \"Si\"}</Badge></h5>\r\n              ) : ''}\r\n            </Col>\r\n            <Col sm={6} md={6} lg={6} className=\"text-center\">\r\n              {Object.keys(saleNoteDetail).length > 0 ? (\r\n                <h5>Método de Pago: <Badge variant=\"primary\" className=\"font-badge\">{saleNoteDetail.way_of_payment}</Badge></h5>\r\n              ) : ''}\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button size=\"md\" variant=\"secondary\" onClick={handleModalDetail}>cerrar</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <ModalInvoiceActions\r\n        isShow={isOpenModalAction}\r\n        onHide={onHideModalAction}\r\n        cotization={invoiceAction}\r\n        printInvoice={printInvoice}\r\n        goToBond={goToBond}\r\n        anulateInvoice={anulateInvoice}\r\n        seeDetailCotization={seeDetailCotization}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    id_branch_office : state.enterpriseSucursal.id_branch_office,\r\n    id_enterprise : state.enterpriseSucursal.id_enterprise,\r\n    configGeneral: state.configs.config,\r\n    configStore: state.configs.configStore\r\n  }\r\n}\r\n\r\nSaleNoteSearchPage.propTypes ={\r\n  id_branch_office: PropTypes.string.isRequired,\r\n  id_enterprise : PropTypes.string.isRequired,\r\n  configGeneral: PropTypes.object,\r\n  configStore : PropTypes.object,\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(SaleNoteSearchPage)\r\n"],"sourceRoot":""}