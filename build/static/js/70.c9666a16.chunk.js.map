{"version":3,"sources":["pages/SignUpPage.jsx"],"names":["SignUpPage","props","useState","displayLoading","setDisplayLoading","validatedForm","setValidatedForm","name","rut","email","password","password_repeat","id_rol","name_enterprise","address_enterprise","user","setUser","imgLogin","setImgLogin","useEffect","fetchAidyConfig","axios","get","API_URL","then","result","data","img_login","catch","err","tokenExpired","onChange","e","target","val","formatRut","value","className","style","backgroundImage","process","src","require","width","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","userSave","Object","assign","toast","error","post","success","localStorage","setItem","JSON","stringify","token","setAuthorizationToken","login","setTimeout","history","replace","noValidate","validated","inputName","handleChange","inputEmail","inputRut","inputPassword","inputPasswordRepeat","sm","md","lg","size","variant","block","type","onClick","defaultProps","required","label","messageErrors","cols","connect","state","isLogin","auth","isAuthenticated"],"mappings":"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","file":"static/js/70.c9666a16.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Image\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport { API_URL } from 'utils/constants'\r\nimport axios from 'axios'\r\nimport 'vendor/styles/pages/authentication.scss'\r\nimport {formatRut} from 'utils/functions'\r\nimport { connect } from 'react-redux'\r\nimport { login } from 'actions/auth'\r\nimport { setAuthorizationToken } from 'utils/functions'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nconst SignUpPage = (props) => {\r\n\r\n  const [displayLoading, setDisplayLoading] = useState(false)\r\n  const [validatedForm, setValidatedForm] = useState(false)\r\n  const [user,setUser] = useState({\r\n    name: '',\r\n    rut: '',\r\n    email: '',\r\n    password: '',\r\n    password_repeat: '',\r\n    id_rol: 2,\r\n    name_enterprise: '',\r\n    address_enterprise: ''\r\n  })\r\n  const [imgLogin,setImgLogin] = useState(null)\r\n\r\n  useEffect(() => {\r\n    fetchAidyConfig()\r\n  },[])\r\n\r\n  const fetchAidyConfig = () => {\r\n     axios.get(API_URL+'config_aidy_login').then(result => {\r\n      if(result.data && result.data.img_login){\r\n        setImgLogin(result.data.img_login)\r\n      }\r\n    }).catch(err => {\r\n      props.tokenExpired(err)\r\n     })\r\n  }\r\n\r\n  const onChange = e => {\r\n    if(e.target.name === \"rut\"){\r\n      let val = formatRut(e.target.value)\r\n      setUser({...user, [e.target.name] : val})\r\n    }else{\r\n      setUser({...user, [e.target.name] : e.target.value})\r\n    }\r\n  }\r\n\r\n  const onSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidatedForm(true);\r\n      return\r\n    }\r\n\r\n    let userSave = Object.assign({},user)\r\n\r\n    if(userSave.password !== userSave.password_repeat){\r\n      toast.error('Las contraseñas no coinciden')\r\n      return false\r\n    }\r\n    setDisplayLoading(true)\r\n    axios.post(API_URL+'user_free',userSave).then(result => {\r\n      toast.success('Felicidades, usuario registrado con éxito')\r\n      localStorage.setItem('user',JSON.stringify(result.data.user))\r\n      localStorage.setItem('token',result.data.token)\r\n      setAuthorizationToken(result.data.token)\r\n      props.login(result.data.user)\r\n      setDisplayLoading(false)\r\n      setTimeout(() => {\r\n        props.history.replace('/dashboard')\r\n      },1500)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"authentication-wrapper authentication-3\">\r\n      <div className=\"authentication-inner\">\r\n        {/* Side container */}\r\n        {/* Do not display the container on extra small, small and medium screens */}\r\n\r\n        {!imgLogin ? (\r\n          <div className=\"d-none d-lg-flex col-lg-8 align-items-center ui-bg-cover ui-bg-overlay-container p-5\" style={{ backgroundImage: `url('${process.env.PUBLIC_URL}/background_1920-16.jpg')` }}>\r\n            <div className=\"ui-bg-overlay bg-dark opacity-50\"></div>\r\n\r\n            {/* Text */}\r\n            <div className=\"w-100 text-white px-5\">\r\n              <h1 className=\"display-2 font-weight-bolder mb-4\">REGISTRO DE CUENTA</h1>\r\n              <div className=\"text-large font-weight-light\">\r\n                Crea tu usuario nivel empresa para empezar el manejo de negocio en aidy\r\n              </div>\r\n            </div>\r\n            {/* /.Text */}\r\n          </div>\r\n        ) : (\r\n          <div className=\"d-none d-lg-flex col-lg-8 align-items-center ui-bg-cover ui-bg-overlay-container p-5\" style={{ backgroundImage: `url('${API_URL}images/aidy/${imgLogin}')` }}>\r\n            <div className=\"ui-bg-overlay bg-dark opacity-50\"></div>\r\n\r\n            {/* Text */}\r\n            <div className=\"w-100 text-white px-5\">\r\n              <h1 className=\"display-2 font-weight-bolder mb-4\">REGISTRO DE CUENTA</h1>\r\n              <div className=\"text-large font-weight-light\">\r\n                Crea tu usuario nivel empresa para empezar el manejo de negocio en aidy\r\n              </div>\r\n            </div>\r\n            {/* /.Text */}\r\n          </div>\r\n        )}\r\n        {/* / Side container */}\r\n\r\n        {/* Form container */}\r\n        <div className=\"d-flex col-lg-4 align-items-center theme-bg-white p-5\">\r\n          {/* Inner container */}\r\n          {/* Have to add `.d-flex` to control width via `.col-*` classes */}\r\n          <div className=\"d-flex col-sm-7 col-md-5 col-lg-12 px-0 px-xl-4 mx-auto\">\r\n            <div className=\"w-100\">\r\n              {/* Logo */}\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <div className=\"position-relative text-center\">\r\n                  <Image src={require('../assets/img/logo/AIDY_01.jpg')} width=\"150px\" />\r\n                </div>\r\n              </div>\r\n              {/* / Logo */}\r\n\r\n              <h4 className=\"text-center text-lighter font-weight-normal mt-5 mb-0\"></h4>\r\n\r\n              {/* Form */}\r\n              {displayLoading ? (\r\n                <LoadingComponent />\r\n              ) : (\r\n                <Form onSubmit={onSubmit} noValidate validated={validatedForm}>\r\n                  <Row className=\"justify-content-center\">\r\n                    <InputField\r\n                      {...props.inputName}\r\n                      handleChange={onChange}\r\n                      value={user.name}\r\n                    />\r\n                  </Row>\r\n                  <Row className=\"justify-content-center\">\r\n                    <InputField\r\n                      {...props.inputEmail}\r\n                      handleChange={onChange}\r\n                      value={user.email}\r\n                    />\r\n                  </Row>\r\n                  <Row className=\"justify-content-center\">\r\n                    <InputField\r\n                      {...props.inputRut}\r\n                      handleChange={onChange}\r\n                      value={user.rut}\r\n                    />\r\n                  </Row>\r\n                  <Row className=\"justify-content-center\">\r\n                    <InputField\r\n                      {...props.inputPassword}\r\n                      handleChange={onChange}\r\n                      value={user.password}\r\n                    />\r\n                  </Row>\r\n                  <Row className=\"justify-content-center\">\r\n                    <InputField\r\n                      {...props.inputPasswordRepeat}\r\n                      handleChange={onChange}\r\n                      value={user.password_repeat}\r\n                    />\r\n                  </Row>\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Button size=\"sm\" variant=\"primary\" block={true} type=\"submit\">Enviar</Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Button size=\"sm\" variant=\"secondary\" block={true} type=\"button\" onClick={() => props.history.replace('/')}>Volver</Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* / Form container */}\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nSignUpPage.propTypes = {\r\n    isLogin : PropTypes.bool.isRequired,\r\n    login: PropTypes.func.isRequired\r\n}\r\n\r\nSignUpPage.defaultProps = {\r\n  inputName: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'name',\r\n    label : 'Nombre Completo',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-12 col-md-12 col-lg-12 col-xs-12\"\r\n  },\r\n  inputEmail: {\r\n    type: 'email',\r\n    required: true,\r\n    name: 'email',\r\n    label : 'Correo',\r\n    messageErrors: [\r\n      'Requerido*',' Formato tipo Email*'\r\n    ],\r\n    cols:\"col-sm-12 col-md-12 col-lg-12 col-xs-12\"\r\n  },\r\n  inputRut: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'rut',\r\n    label : 'Rut',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-12 col-md-12 col-lg-12 col-xs-12\"\r\n  },\r\n  inputPassword: {\r\n    type: 'password',\r\n    required: true,\r\n    name: 'password',\r\n    label : 'Contraseña',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-12 col-md-12 col-lg-12 col-xs-12\"\r\n  },\r\n  inputPasswordRepeat: {\r\n    type: 'password',\r\n    required: true,\r\n    name: 'password_repeat',\r\n    label : 'Repita la Contraseña',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-12 col-md-12 col-lg-12 col-xs-12\"\r\n  },\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    isLogin : state.auth.isAuthenticated\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(){\r\n    return {\r\n      login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps())(SignUpPage);\r\n"],"sourceRoot":""}