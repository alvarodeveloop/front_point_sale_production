{"version":3,"sources":["../node_modules/react-bootstrap/esm/DropdownButton.js","pages/HistorySalePage.jsx"],"names":["propTypes","id","PropTypes","any","href","string","onClick","func","title","node","isRequired","disabled","bool","menuRole","renderMenuOnMount","rootCloseEvent","bsPrefix","variant","size","DropdownButton","React","forwardRef","_ref","ref","children","props","_objectWithoutPropertiesLoose","createElement","Dropdown","_extends","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName","saleColumns","data_donut_ss_status","labels","datasets","data","backgroundColor","hoverBackgroundColor","connect","state","config","configs","configStore","id_branch_office","enterpriseSucursal","useState","sales","setSales","isOpenSolvedSale","setIsOpenSolvedSale","saleDataOption","setSaleDataOption","isOpenDetailSale","setIsOpenDetailSale","setRedraw","stadistics","setStadistics","displayLoading","setDisplayLoading","useEffect","toast","error","setTimeout","history","replace","layoutHelpers","toggleCollapsed","resetChartData","fetchData","handleDataDonutSsStatus","useMemo","Header","accessor","props1","client","name_client","data_document","Cell","showPriceWithDecimals","cell","row","original","total","payment","status","className","moment","createdAt","format","block","Fragment","Item","solvedSale","seeDetails","anulateSale","printInvoice","forEach","v","i","push","name","parseFloat","ARRAY_COLORS","datos","axios","get","API_URL","then","result","voucher","window","open","catch","err","tokenExpired","pdf_public_url_bill","promise","Promise","all","sale","fluid","sm","md","lg","length","xs","columns","isShow","onHide","isPost","dataToPay","dataSale"],"mappings":"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","file":"static/js/58.9a0c5e2f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`.\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"]);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import React, { useMemo, useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Modal,\r\n  Badge\r\n} from 'react-bootstrap'\r\nimport { toast } from 'react-toastify'\r\nimport { API_URL } from 'utils/constants'\r\nimport Table from 'components/Table'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import\r\nimport { formatNumber } from 'utils/functions'\r\nimport ModalSolvedSale from 'components/modals/ModalSolvedSale'\r\nimport ModalDetailSale from 'components/modals/ModalDetailSale'\r\nimport 'styles/components/modalComponents.css'\r\nimport * as moment from 'moment-timezone'\r\nimport { showPriceWithDecimals } from 'utils/functions'\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport { ARRAY_COLORS } from 'utils/constants'\r\nimport { connect } from 'react-redux'\r\nimport layoutHelpers from 'shared/layouts/helpers'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nlet saleColumns = []\r\n\r\nlet optionsBar = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    duration: 0\r\n  },\r\n  hover: {\r\n    animationDuration: 0\r\n  },\r\n  responsiveAnimationDuration: 0,\r\n}\r\n\r\nlet data_donut_ss_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nconst HistorySalePage = (props) => {\r\n\r\n  const [sales,setSales] = useState([])\r\n  const [isOpenSolvedSale,setIsOpenSolvedSale] = useState(false)\r\n  const [saleDataOption, setSaleDataOption] = useState({})\r\n  const [isOpenDetailSale,setIsOpenDetailSale] = useState(false)\r\n  const [redraw,setRedraw] = useState(false)\r\n  const [stadistics,setStadistics] = useState([])\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n\r\n  useEffect(() =>{\r\n    if(!props.config || !props.configStore){\r\n      if(!props.config){\r\n        toast.error('Error, debe hacer su configuración general')\r\n        setTimeout(function () {\r\n          props.history.replace('/config/config_general')\r\n        }, 2000);\r\n      }else if(!props.configStore){\r\n        toast.error('Error, debe hacer su configuración de la tienda primero')\r\n        setTimeout(function () {\r\n          props.history.replace('/config/config_store')\r\n        }, 2000);\r\n      }\r\n    }\r\n    layoutHelpers.toggleCollapsed()\r\n    return () =>{\r\n      layoutHelpers.toggleCollapsed()\r\n      saleColumns = []\r\n      resetChartData()\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    resetChartData()\r\n    fetchData()\r\n  },[props.id_branch_office])\r\n\r\n  useEffect(() => {\r\n    handleDataDonutSsStatus()\r\n    setTimeout(function () {\r\n      setRedraw(false)\r\n    }, 3000);\r\n  },[stadistics])\r\n\r\n  useMemo(() =>{\r\n    saleColumns = [\r\n        {\r\n          Header: 'Referencia',\r\n          accessor: 'ref',\r\n        },\r\n        {\r\n          Header: 'Cliente',\r\n          accessor: props1 => props1.client ? [props1.client.name_client+' '+props1.client.data_document] : [],\r\n\r\n        },\r\n        {\r\n          Header: 'Total',\r\n          accessor: 'total',\r\n          Cell: props1 => {\r\n            return showPriceWithDecimals(props1.config,props1.cell.row.original.total)\r\n          }\r\n        },\r\n        {\r\n          Header: 'Pago',\r\n          accessor: 'payment',\r\n          Cell: props1 => {\r\n            return showPriceWithDecimals(props1.config,props1.cell.row.original.payment)\r\n          }\r\n        },\r\n        {\r\n          Header: 'Status',\r\n          accessor: props1 => [props1.status === 2 ? 'En Espera' : 'Pagado'],\r\n          Cell : props1 => {\r\n            const {original} = props1.cell.row\r\n            if(original.status === 2){\r\n              return (<Badge variant=\"danger\" className=\"font-badge\">En espera</Badge>)\r\n            }else{\r\n              return (<Badge variant=\"success\" className=\"font-badge\">Pagado</Badge>)\r\n            }\r\n          }\r\n        },\r\n        {\r\n          Header: 'Fecha',\r\n          accessor: props1 => [moment(props1.createdAt).format('DD-MM-YYYY')],\r\n        },\r\n        {\r\n          Header: 'Acciones',\r\n          Cell: props1 =>{\r\n            return(\r\n              <DropdownButton size=\"sm\" id={'drop'+props1.cell.row.original.id} title=\"Seleccione\"  block=\"true\">\r\n                {props1.cell.row.original.status === 2 ? (\r\n                  <React.Fragment>\r\n                    <Dropdown.Item onClick={() => solvedSale(props1.cell.row.original)}>Pagar Pedido</Dropdown.Item>\r\n                      <Dropdown.Item onClick={() => seeDetails(props1.cell.row.original)}>Ver Detalle</Dropdown.Item>\r\n                      <Dropdown.Item onClick={() => anulateSale(props1.cell.row.original)}>Anular Venta</Dropdown.Item>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Dropdown.Item onClick={() => printInvoice(props1.cell.row.original)}>Imprimir Factura</Dropdown.Item>\r\n                      <Dropdown.Item onClick={() => seeDetails(props1.cell.row.original)}>Ver Detalle</Dropdown.Item>\r\n                      <Dropdown.Item onClick={() => anulateSale(props1.cell.row.original)}>Anular Venta</Dropdown.Item>\r\n                  </React.Fragment>\r\n                )}\r\n\r\n              </DropdownButton>\r\n            )\r\n          }\r\n        }\r\n      ]\r\n  })\r\n\r\n  const anulateSale = () => {\r\n\r\n  }\r\n  \r\n  const handleDataDonutSsStatus = () => {\r\n\r\n    stadistics.forEach((v, i) => {\r\n      data_donut_ss_status.labels.push(v.name)\r\n      data_donut_ss_status.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_ss_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_ss_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n    setTimeout(function () {\r\n      setRedraw(true)\r\n    }, 1500);\r\n\r\n  }\r\n\r\n  const printInvoice = datos => {\r\n    let params = \"/\"+datos.ref;\r\n    setDisplayLoading(true)\r\n    axios.get(API_URL+\"sale_print_invoice_history/\"+datos.ref).then(result => {\r\n      if(datos.voucher){\r\n        \r\n        axios.get(API_URL+'invoice_print/'+result.data.id+\"/2/2\").then(result => {\r\n          window.open(API_URL+'documents/sale_note/files_pdf/'+result.data.name)\r\n          setDisplayLoading(false)\r\n        }).catch(err => {\r\n          setDisplayLoading(false)\r\n          props.tokenExpired(err)\r\n        })\r\n\r\n      }else{\r\n        setDisplayLoading(false)\r\n        window.open(result.data.pdf_public_url_bill,\"_blank\")\r\n      }\r\n    }).catch(error => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(error)\r\n    })\r\n  }\r\n\r\n  const solvedSale = data => {\r\n    setSaleDataOption(data)\r\n    setIsOpenSolvedSale(true)\r\n  }\r\n\r\n  const seeDetails = data => {\r\n    setSaleDataOption(data)\r\n    setIsOpenDetailSale(true)\r\n  }\r\n\r\n  const fetchData = () => {\r\n    let promise = [\r\n      axios.get(API_URL+'sale'),\r\n      axios.get(API_URL+'sale_stadistics')\r\n    ]\r\n    Promise.all(promise).then(result => {\r\n      setSales(result[0].data)\r\n      setStadistics(result[1].data.sale)\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const handleOnhideSaleFiao = (isPost = false) => {\r\n    setIsOpenSolvedSale(false)\r\n    if(isPost){\r\n      resetChartData()\r\n      fetchData()\r\n    }\r\n  }\r\n\r\n  const resetChartData = () => {\r\n    data_donut_ss_status = {\r\n      labels: [],\r\n    \tdatasets: [{\r\n    \t\tdata: [],\r\n    \t\tbackgroundColor: [],\r\n    \t\thoverBackgroundColor: []\r\n    \t}]\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {displayLoading ? (\r\n        <Container>\r\n          <LoadingComponent />\r\n        </Container>\r\n      ) : (\r\n        <Container fluid>\r\n          <Row>\r\n            <Col sm={6} md={6} lg={6}>\r\n              <h4 className=\"title_principal\">Tabla de Ventas</h4>\r\n            </Col>\r\n            <Col sm={6} md={6} lg={6} className=\"text-center\">\r\n              <h4 className=\"title_principal\">Total ventas <Badge variant=\"danger\" className=\"font-badge\">{sales.length}</Badge></h4>\r\n            </Col>\r\n          </Row>\r\n          <hr/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} xs={12} className=\"containerDiv\">\r\n              <Table columns={saleColumns} data={sales} />\r\n            </Col>\r\n          </Row>\r\n          <ModalSolvedSale\r\n            isShow={isOpenSolvedSale}\r\n            onHide={handleOnhideSaleFiao}\r\n            config={props.config}\r\n            configStore={props.configStore}\r\n            dataToPay={saleDataOption}\r\n          />\r\n          {props.config && props.configStore ? (\r\n            <ModalDetailSale\r\n              isShow={isOpenDetailSale}\r\n              onHide={() => setIsOpenDetailSale(false) }\r\n              config={props.config}\r\n              configStore={props.configStore}\r\n              dataSale={saleDataOption}\r\n            />\r\n          ) : ''}\r\n\r\n        </Container>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nHistorySalePage.propTypes = {\r\n config: PropTypes.object,\r\n configStore: PropTypes.object,\r\n}\r\n\r\nfunction mapDispatchToProps(state){\r\n  return {\r\n    config: state.configs.config,\r\n    configStore: state.configs.configStore,\r\n    id_branch_office: state.enterpriseSucursal.id_branch_office\r\n  }\r\n}\r\n\r\nexport default connect(mapDispatchToProps,{})(HistorySalePage)\r\n"],"sourceRoot":""}