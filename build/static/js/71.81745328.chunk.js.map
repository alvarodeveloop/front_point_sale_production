{"version":3,"sources":["pages/ProviderFormPage.jsx"],"names":["ProviderFormPage","props","useState","name_fantasy","rut_provider","id_country","comuna","city","phone","spin","social_razon","address","type_id","dataProvider","setDataProvider","paises","setPaises","isCreated","setIsCreated","validate","setValidate","isUpdate","setIsUpdate","displayLoading","setDisplayLoading","useEffect","validateConfig","fetchData","configStore","Object","keys","length","country","id_branch_office","onChange","e","a","target","name","value","formatRut","promise","axios","get","API_URL","match","params","id","push","atob","Promise","all","then","result","data","catch","err","tokenExpired","cleanForm","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","assign","put","toast","success","setTimeout","history","post","noValidate","validated","className","sm","md","lg","xs","inputSocialRazon","handleChange","inputTypeId","inputRut","inputId","inputNameFantasy","inputCountry","map","v","i","key","nombre","inputComuna","inputCity","inputPhone","inputSpin","inputAddress","size","type","onClick","variant","block","replace","defaultProps","required","label","cols","messageErrors","placeholder","rows","maskInput","formatChars","mask","connect","state","configs","enterpriseSucursal"],"mappings":"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","file":"static/js/71.81745328.chunk.js","sourcesContent":["import React, { useMemo, useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport { FaTruck,FaPlusCircle } from \"react-icons/fa\";\r\nimport InputField from 'components/input/InputComponent'\r\nimport { toast } from 'react-toastify'\r\nimport { API_URL } from 'utils/constants'\r\nimport { formatRut } from 'utils/functions'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Image\r\n} from 'react-bootstrap'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nconst ProviderFormPage = (props) => {\r\n\r\n  const [dataProvider,setDataProvider] = useState({\r\n    name_fantasy: '',\r\n    rut_provider: '',\r\n    id_country: '',\r\n    comuna: '',\r\n    city: '',\r\n    phone: '',\r\n    spin: '',\r\n    social_razon: '',\r\n    address: '',\r\n    type_id: 1,\r\n  })\r\n\r\n  const [paises, setPaises] = useState([])\r\n  const [isCreated,setIsCreated] = useState(false)\r\n  const [validate, setValidate] = useState(false)\r\n  const [isUpdate, setIsUpdate] = useState(false)\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    validateConfig()\r\n    fetchData()\r\n  },[])\r\n\r\n  useEffect(() => {\r\n\r\n    setDataProvider({...dataProvider,id_country : props.configStore && Object.keys(props.configStore).length > 0 ? props.configStore.country : ''})\r\n  },[props.id_branch_office])\r\n\r\n  const onChange = async e => {\r\n    if(e.target.name === \"type_id\"){\r\n      setDataProvider({...dataProvider, [e.target.name] : e.target.value, rut_provider: ''})\r\n    }else if(e.target.name === \"rut_provider\"){\r\n      setDataProvider({...dataProvider, [e.target.name] : dataProvider.type_id == 1 ? formatRut(e.target.value) : e.target.value})\r\n    }else{\r\n      setDataProvider({...dataProvider, [e.target.name] : e.target.value})\r\n    }\r\n  }\r\n\r\n  const fetchData = () => {\r\n    let promise = [\r\n      axios.get(API_URL+'country')\r\n    ]\r\n\r\n    if(props.match.params.id){\r\n      promise.push(\r\n        axios.get(API_URL+'provider/'+atob(props.match.params.id))\r\n      )\r\n    }\r\n\r\n    Promise.all(promise).then(result => {\r\n\r\n      setPaises(result[0].data)\r\n      if(result.length > 1){\r\n        setDataProvider({\r\n          name_fantasy: result[1].data.name_fantasy,\r\n          rut_provider: result[1].data.rut_provider,\r\n          id_country: result[1].data.id_country,\r\n          comuna: result[1].data.comuna,\r\n          city: result[1].data.city,\r\n          phone: result[1].data.phone,\r\n          spin: result[1].data.spin,\r\n          social_razon: result[1].data.social_razon,\r\n          address: result[1].data.address,\r\n          type_id: result[1].data.type_id,\r\n        })\r\n        setIsUpdate(true)\r\n      }\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const onSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidate(true);\r\n      return\r\n    }\r\n\r\n    let data = Object.assign({},dataProvider)\r\n    setDisplayLoading(true)\r\n    if(isUpdate){\r\n      axios.put(API_URL+'provider/'+atob(props.match.params.id),data).then(result => {\r\n        toast.success('Configuración Modificada')\r\n\r\n        setTimeout(() => {\r\n          props.history.push('/provider/list')\r\n        },1500)\r\n        setDisplayLoading(false)\r\n      }).catch(err => {\r\n        setDisplayLoading(false)\r\n        props.tokenExpired(err)\r\n      })\r\n    }else{\r\n      axios.post(API_URL+'provider',data).then(result => {\r\n        toast.success('Proveedor Creado')\r\n\r\n        cleanForm()\r\n        setDisplayLoading(false)\r\n      }).catch(err => {\r\n        setDisplayLoading(false)\r\n        props.tokenExpired(err)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const goToProvider = () => {\r\n    props.history.replace('/provider/list')\r\n  }\r\n\r\n  const cleanForm = () => {\r\n    setIsCreated(true)\r\n    setDataProvider({\r\n      name_fantasy: '',\r\n      rut_provider: '',\r\n      id_country: '',\r\n      comuna: '',\r\n      city: '',\r\n      phone: '',\r\n      spin: '',\r\n      social_razon: '',\r\n      address: '',\r\n      type_id: 1,\r\n    })\r\n    setValidate(false)\r\n  }\r\n\r\n  const registerAnotherOne = () => {\r\n    setIsCreated(false)\r\n  }\r\n\r\n  const validateConfig = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={onSubmit} noValidate validated={validate}>\r\n        <>\r\n          {displayLoading ? (\r\n            <LoadingComponent />\r\n          ) : (\r\n            <>\r\n              <Row className=\"justify-content-center align-items-center\">\r\n                <Col sm={12} md={12} lg={12} xs={12} className=\"containerDivSeparated\">\r\n                  <h4 className=\"title_principal\">Formulario de Proveedores</h4>\r\n                  <br/>\r\n                  <Row>\r\n                    <InputField\r\n                      {...props.inputSocialRazon}\r\n                      handleChange={onChange}\r\n                      value={dataProvider.social_razon}\r\n                    />\r\n                    <InputField\r\n                      {...props.inputTypeId}\r\n                      handleChange={onChange}\r\n                      value={dataProvider.type_id}\r\n                    >\r\n                      <option value=\"\">--Seleccione--</option>\r\n                      <option value={1}>Rut</option>\r\n                      <option value={2}>Identificación Fiscal</option>\r\n                    </InputField>\r\n                    {dataProvider.type_id && dataProvider.type_id == 1 ? (\r\n                        <InputField\r\n                          onChange={onChange} value={dataProvider.rut_provider} {...props.inputRut} handleChange={onChange}\r\n                        />\r\n                    ) : dataProvider.type_id && dataProvider.type_id == 2 ? (\r\n                        <InputField\r\n                          {...props.inputId}\r\n                          handleChange={onChange}\r\n                          value={dataProvider.rut_provider}\r\n                        />\r\n                    ) : ''}\r\n                    <InputField\r\n                      {...props.inputNameFantasy}\r\n                      handleChange={onChange}\r\n                      value={dataProvider.name_fantasy}\r\n                    />\r\n                  </Row>\r\n                  <Row>\r\n                    <InputField\r\n                      {...props.inputCountry}\r\n                      handleChange={onChange}\r\n                      value={dataProvider.id_country}\r\n                    >\r\n                      <option value=''>--Seleccione--</option>\r\n                      {paises.map((v,i) => (\r\n                        <option value={v.id} key={i}>{v.nombre}</option>\r\n                      ))}\r\n                    </InputField>\r\n                    <InputField\r\n                      {...props.inputComuna}\r\n                      handleChange={onChange}\r\n                      value={dataProvider.comuna}\r\n                    />\r\n                    <InputField\r\n                      {...props.inputCity}\r\n                      handleChange={onChange}\r\n                      value={dataProvider.city}\r\n                    />\r\n                  </Row>\r\n                  <Row>\r\n                    <InputField\r\n                      {...props.inputPhone}\r\n                      handleChange={onChange}\r\n                      value={dataProvider.phone}\r\n                    />\r\n                    <InputField\r\n                      {...props.inputSpin}\r\n                      handleChange={onChange}\r\n                      value={dataProvider.spin}\r\n                    />\r\n                    <InputField\r\n                      {...props.inputAddress}\r\n                      handleChange={onChange}\r\n                      value={dataProvider.address}\r\n                    />\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={4} md={4} lg={4} xs={6}>\r\n                  {isCreated ? (\r\n                    <Button size=\"sm\" type=\"button\" onClick={registerAnotherOne} variant=\"primary\" block={true}>Crear otro <FaPlusCircle /></Button>\r\n                  ) : (\r\n                    <Button size=\"sm\" type=\"submit\" variant=\"danger\" block={true}>Guardar <FaPlusCircle /></Button>\r\n                  )}\r\n                </Col>\r\n                <Col sm={4} md={4} lg={4} xs={6}>\r\n                  <Button size=\"sm\" type=\"button\" onClick={goToProvider} variant=\"secondary\" block={true}>Volver a los Proveedores</Button>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          )}\r\n        </>\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\nProviderFormPage.defaultProps ={\r\n  inputNameFantasy: {\r\n    type: 'text',\r\n    required: false,\r\n    name: 'name_fantasy',\r\n    label : 'Nombre Fantasia',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputRut: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'rut_provider',\r\n    placeholder: 'Introduzca su información',\r\n    label : 'Rut',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\"\r\n  },\r\n  inputCountry: {\r\n    type: 'select',\r\n    required: false,\r\n    name: 'id_country',\r\n    label : 'País',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\"\r\n  },\r\n  inputComuna: {\r\n    type: 'text',\r\n    required: false,\r\n    name: 'comuna',\r\n    label : 'Comuna',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\"\r\n  },\r\n  inputCity: {\r\n    type: 'text',\r\n    required: false,\r\n    name: 'city',\r\n    label : 'Ciudad',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\"\r\n  },\r\n  inputSpin: {\r\n    type: 'textarea',\r\n    required: false,\r\n    name: 'spin',\r\n    label : 'Giro',\r\n    rows: 1,\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\"\r\n  },\r\n  inputPhone: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'phone',\r\n    label : 'Teléfono',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\"\r\n  },\r\n  inputSocialRazon: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'social_razon',\r\n    label : 'Razón Social',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\"\r\n  },\r\n  inputAddress: {\r\n    type: 'textarea',\r\n    required: false,\r\n    name: 'address',\r\n    label : 'Dirección',\r\n    rows: 1,\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\"\r\n  },\r\n  inputTypeId: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'type_id',\r\n    label : 'Tipo de Id',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\"\r\n  },\r\n  inputId: {\r\n    type: 'number',\r\n    required: true,\r\n    name: 'rut_provider',\r\n    label : 'Identificación Fiscal',\r\n    placeholder: 'Ingrese su información personal',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-6\"\r\n  },\r\n  maskInput : {\r\n    formatChars: {\r\n      '*': '[A-Za-z0-9]'\r\n    },\r\n    mask: '**.***.***-*'\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    configStore: state.configs.configStore,\r\n    id_branch_office: state.enterpriseSucursal.id_branch_office\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(ProviderFormPage)\r\n"],"sourceRoot":""}