{"version":3,"sources":["../node_modules/react-table/index.js","../node_modules/match-sorter/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/match-sorter/dist/match-sorter.esm.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../node_modules/remove-accents/index.js"],"names":["module","exports","require","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","rankings","CASE_SENSITIVE_EQUAL","EQUAL","STARTS_WITH","WORD_STARTS_WITH","STRING_CASE","STRING_CASE_ACRONYM","CONTAINS","ACRONYM","MATCHES","NO_MATCH","caseRankings","CAMEL","PASCAL","KEBAB","SNAKE","NO_CASE","matchSorter","defaultBaseSortFn","a","b","String","rankedItem","localeCompare","items","value","options","_options","keys","_options$threshold","threshold","_options$baseSort","baseSort","reduce","matches","item","index","_getHighestRanking","rank","getMatchRanking","keyIndex","keyThreshold","allVals","values","indexOf","split","itemObj","nestedKey","concat","getItemValues","forEach","itemValue","push","attributes","getKeyAttributes","getAllValuesToRank","_ref2","_ref3","newRank","newRankedItem","minRanking","maxRanking","getHighestRanking","_getHighestRanking$ke","sort","aRank","aKeyIndex","bRank","bKeyIndex","sortRankedItems","map","_ref","testString","stringToRank","prepareValueForComparison","caseRank","containsUpperCase","toLowerCase","containsDash","containsUnderscore","toUpperCase","getCaseRanking","isPartial","caseRanking","testIndex","isPartialOfCase","isCasedAcronym","splitValue","splitTestString","correct","char","charIndex","splitItem","isCaseAcronym","string","acronym","wordInString","splitByHyphenWord","substr","getAcronym","matchingInOrderCharCount","charNumber","findMatchingCharacter","matchChar","j","firstIndex","spread","inOrderPercentage","getRanking","getClosenessRanking","_ref4","keepDiacritics","removeAccents","Infinity","actions","init","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","props","next","style","className","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","React","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","getPrototypeOf","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","from","Set","size","emptyArray","emptyObject","resetGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","setGroupBy","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","aggregateFn","aggregate","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValueByColumnID","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","resetSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","floor","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","flex","totalColumnsMinWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","characterMap","chars","allAccents","RegExp","firstAccent","match","has","remove"],"mappings":"yHACEA,EAAOC,QAAUC,EAAQ,M,iCCDZ,SAASC,IAetB,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,W,sBCZ1BS,EAAW,CACbC,qBAAsB,EACtBC,MAAO,EACPC,YAAa,EACbC,iBAAkB,EAClBC,YAAa,EACbC,oBAAqB,EACrBC,SAAU,EACVC,QAAS,EACTC,QAAS,EACTC,SAAU,GAERC,EAAe,CACjBC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,MAAO,GACPC,QAAS,GAEXC,EAAYjB,SAAWA,EACvBiB,EAAYN,aAAeA,EAE3B,IAAIO,EAAoB,SAAUC,EAAGC,GACnC,OAAOC,OAAOF,EAAEG,YAAYC,cAAcH,EAAEE,aAW9C,SAASL,EAAYO,EAAOC,EAAOC,GAMjC,QALgB,IAAZA,IACFA,EAAU,KAIPD,EAAO,OAAOD,EACnB,IAAIG,EAAWD,EACXE,EAAOD,EAASC,KAChBC,EAAqBF,EAASG,UAC9BA,OAAmC,IAAvBD,EAAgC7B,EAASS,QAAUoB,EAC/DE,EAAoBJ,EAASK,SAC7BA,OAAiC,IAAtBD,EAA+Bb,EAAoBa,EAElE,OADmBP,EAAMS,QAQzB,SAA6BC,EAASC,EAAMC,GAC1C,IAAIC,EA8BR,SAA2BF,EAAMP,EAAMH,EAAOC,GAC5C,IAAKE,EACH,MAAO,CAELN,WAAYa,EACZG,KAAMC,EAAgBJ,EAAMV,EAAOC,GACnCc,UAAW,EACXC,aAAcf,EAAQI,WAK1B,OAsXF,SAA4BK,EAAMP,GAChC,OAAOA,EAAKK,QAAO,SAAUS,EAAShD,GACpC,IAAIiD,EAhCR,SAAuBR,EAAMzC,GACR,kBAARA,IACTA,EAAMA,EAAIA,KAGZ,IAAI+B,EAGFA,EADiB,oBAAR/B,EACDA,EAAIyC,IACmB,IAAtBzC,EAAIkD,QAAQ,KAEblD,EAAImD,MAAM,KAAKZ,QAAO,SAAUa,EAASC,GAC/C,OAAOD,EAAUA,EAAQC,GAAa,OACrCZ,GAEKA,EAAKzC,GAKf,OAAgB,MAAT+B,EAAgB,GAAGuB,OAAOvB,GAAS,KAY3BwB,CAAcd,EAAMzC,GAWjC,OATIiD,GACFA,EAAOO,SAAQ,SAAUC,GACvBT,EAAQU,KAAK,CACXD,UAAWA,EACXE,WAAYC,EAAiB5D,QAK5BgD,IACN,IArYgBa,CAAmBpB,EAAMP,GACxBK,QAAO,SAAUuB,EAAOC,EAAOnE,GACjD,IAAIgD,EAAOkB,EAAMlB,KACbhB,EAAakC,EAAMlC,WACnBkB,EAAWgB,EAAMhB,SACjBC,EAAee,EAAMf,aACrBU,EAAYM,EAAMN,UAClBE,EAAaI,EAAMJ,WACnBK,EAAUnB,EAAgBY,EAAW1B,EAAOC,GAC5CiC,EAAgBrC,EAChBsC,EAAaP,EAAWO,WACxBC,EAAaR,EAAWQ,WACxB/B,EAAYuB,EAAWvB,UAe3B,OAbI4B,EAAUE,GAAcF,GAAW1D,EAASS,QAC9CiD,EAAUE,EACDF,EAAUG,IACnBH,EAAUG,GAGRH,EAAUpB,IACZA,EAAOoB,EACPlB,EAAWlD,EACXmD,EAAeX,EACf6B,EAAgBR,GAGX,CACL7B,WAAYqC,EACZrB,KAAMA,EACNE,SAAUA,EACVC,aAAcA,KAEf,CACDH,KAAMtC,EAASU,SACf8B,UAAW,EACXC,aAAcf,EAAQI,YA7EGgC,CAAkB3B,EAAMP,EAAMH,EAAOC,GAC1DJ,EAAae,EAAmBf,WAChCgB,EAAOD,EAAmBC,KAC1BE,EAAWH,EAAmBG,SAC9BuB,EAAwB1B,EAAmBI,aAG3CH,SAFyC,IAA1ByB,EAAmCjC,EAAYiC,IAGhE7B,EAAQkB,KAAK,CACX9B,WAAYA,EACZa,KAAMA,EACNG,KAAMA,EACNF,MAAOA,EACPI,SAAUA,IAId,OAAON,IA1B4C,IACjC8B,MAAK,SAAU7C,EAAGC,GACpC,OA4VJ,SAAyBD,EAAGC,EAAGY,GAC7B,IAEIiC,EAAQ9C,EAAEmB,KACV4B,EAAY/C,EAAEqB,SACd2B,EAAQ/C,EAAEkB,KACV8B,EAAYhD,EAAEoB,SAElB,OAAIyB,IAAUE,EACRD,IAAcE,EAETpC,EAASb,EAAGC,GAEZ8C,EAAYE,GAZV,EACA,EAcJH,EAAQE,GAfJ,EACA,EA9VJE,CAAgBlD,EAAGC,EAAGY,MAC5BsC,KAAI,SAAUC,GAEf,OADWA,EAAKpC,QA8FpB,SAASI,EAAgBiC,EAAYC,EAAc/C,GAKjD,GAHA8C,EAAaE,EAA0BF,EAAY9C,IACnD+C,EAAeC,EAA0BD,EAAc/C,IAEtClC,OAASgF,EAAWhF,OACnC,OAAOQ,EAASU,SAIlB,GAAI8D,IAAeC,EACjB,OAAOzE,EAASC,qBAGlB,IAAI0E,EA6EN,SAAwBH,GACtB,IAAII,EAAoBJ,EAAWK,gBAAkBL,EACjDM,EAAeN,EAAW5B,QAAQ,MAAQ,EAC1CmC,EAAqBP,EAAW5B,QAAQ,MAAQ,EAEpD,IAAKgC,IAAsBG,GAAsBD,EAC/C,OAAOnE,EAAaG,MAGtB,IAAK8D,GAAqBG,IAAuBD,EAC/C,OAAOnE,EAAaI,MAGtB,GAAI6D,IAAsBE,IAAiBC,EAAoB,CAG7D,OAF0BP,EAAW,GAAGQ,gBAAkBR,EAAW,GAG5D7D,EAAaE,OAGfF,EAAaC,MAGtB,OAAOD,EAAaK,QApGLiE,CAAeT,GAC1BU,EAoHN,SAAyBV,EAAYC,EAAcU,GACjD,IAAIC,EAAYZ,EAAWK,cAAcjC,QAAQ6B,EAAaI,eAE9D,OAAQM,GACN,KAAKxE,EAAaI,MAChB,MAAqC,MAA9ByD,EAAWY,EAAY,GAEhC,KAAKzE,EAAaG,MAChB,MAAqC,MAA9B0D,EAAWY,EAAY,GAEhC,KAAKzE,EAAaE,OAClB,KAAKF,EAAaC,MAChB,OAAsB,IAAfwE,GAAoBZ,EAAWY,KAAeZ,EAAWY,GAAWJ,cAE7E,QACE,OAAO,GAnIKK,CAAgBb,EAAYC,EAAcE,GACtDW,EAiJN,SAAuBd,EAAYC,EAAcE,GAC/C,IAAIY,EAAa,KAEjB,OAAQZ,GACN,KAAKhE,EAAaI,MAChBwE,EAAa,IACb,MAEF,KAAK5E,EAAaG,MAChByE,EAAa,IACb,MAEF,KAAK5E,EAAaE,OAClB,KAAKF,EAAaC,MAChB2E,EAAa,YACb,MAEF,QACEA,EAAa,KAGjB,IAAIC,EAAkBhB,EAAW3B,MAAM0C,GACvC,OAAOd,EAAaI,cAAchC,MAAM,IAAIZ,QAAO,SAAUwD,EAASC,EAAMC,GAC1E,IAAIC,EAAYJ,EAAgBG,GAChC,OAAOF,GAAWG,GAAaA,EAAU,GAAGf,gBAAkBa,KAC7D,GA1KkBG,CAAcrB,EAAYC,EAAcE,GAK7D,OAHAH,EAAaA,EAAWK,kBACxBJ,EAAeA,EAAaI,eAGnB7E,EAASE,MAAQyE,EAIe,IAArCH,EAAW5B,QAAQ6B,GACdzE,EAASG,YAAcwE,GAIgB,IAA5CH,EAAW5B,QAAQ,IAAM6B,GACpBzE,EAASI,iBAAmBuE,EAIjCO,EACKlF,EAASK,YAAcsE,EAI5BA,EAAW,GAAKW,EACXtF,EAASM,oBAAsBqE,GAIE,IAAtCH,EAAW5B,QAAQ6B,GACdzE,EAASO,SAAWoE,EACM,IAAxBF,EAAajF,OAIfQ,EAASU,UAIoC,IAgBxD,SAAoBoF,GAClB,IAAIC,EAAU,GAQd,OAPoBD,EAAOjD,MAAM,KACnBK,SAAQ,SAAU8C,GACLA,EAAanD,MAAM,KACzBK,SAAQ,SAAU+C,GACnCF,GAAWE,EAAkBC,OAAO,EAAG,SAGpCH,EAzBHI,CAAW3B,GAAY5B,QAAQ6B,GAC1BzE,EAASQ,QAAUmE,EA+I9B,SAA6BH,EAAYC,GACvC,IAAI2B,EAA2B,EAC3BC,EAAa,EAEjB,SAASC,EAAsBC,EAAWT,EAAQ1D,GAChD,IAAK,IAAIoE,EAAIpE,EAAOoE,EAAIV,EAAOtG,OAAQgH,IAAK,CAG1C,GAFiBV,EAAOU,KAELD,EAEjB,OADAH,GAA4B,EACrBI,EAAI,EAIf,OAAQ,EASV,IAAIC,EAAaH,EAAsB7B,EAAa,GAAID,EAAY,GAEpE,GAAIiC,EAAa,EACf,OAAOzG,EAASU,SAGlB2F,EAAaI,EAEb,IAAK,IAAInH,EAAI,EAAGA,EAAImF,EAAajF,OAAQF,IAAK,CAC5C,IAAIiH,EAAY9B,EAAanF,GAI7B,MAHA+G,EAAaC,EAAsBC,EAAW/B,EAAY6B,KAChC,GAGxB,OAAOrG,EAASU,SAKpB,OAzBA,SAAoBgG,GAClB,IAAIC,EAAoBP,EAA2B3B,EAAajF,OAEhE,OADcQ,EAASS,QAAUkG,GAAqB,EAAID,GAuBrDE,CADMP,EAAaI,GAnLnBI,CAAoBrC,EAAYC,GAyNzC,SAASC,EAA0BjD,EAAOqF,GAQxC,OANArF,EAAQ,GAAKA,EADQqF,EAAMC,iBAIzBtF,EAAQuF,IAAcvF,IAGjBA,EA+DT,SAAS6B,EAAiB5D,GAOxB,MANmB,kBAARA,IACTA,EAAM,CACJA,IAAKA,IAIFR,EAAS,CACd2E,WAAYoD,IACZrD,YAAaqD,KACZvH,GAGUuB,O,8jCC7ff,IAEaiG,EAAU,CACrBC,KAAM,QAGKC,EAAgB,CAC3BC,KAAM,oBAAG5F,wBAAQ,MACjB6F,MAAO,IACPC,SAAU,EACVC,SAAUC,OAAOC,kBAGnB,SAASC,+BAAcC,oDACdA,EAAS3F,QAAO,SAAC4F,EAAOC,OACrBC,EAA8BD,EAA9BC,MAAOC,EAAuBF,EAAvBE,iBAEfH,OACKA,OAHiCC,0BAOlCC,IACFF,EAAME,MAAQF,EAAME,WACVF,EAAME,OAAS,MAASA,GAAS,IACvCA,GAGFC,IACFH,EAAMG,UAAYH,EAAMG,UACpBH,EAAMG,UAAY,IAAMA,EACxBA,GAGkB,KAApBH,EAAMG,kBACDH,EAAMG,UAGRH,IACN,QAkBQI,EAAiB,SAACC,EAAOC,yBAAO,IACpC,SAACC,yBAAY,IAClB,UAAIF,GAAOE,IAAWnG,QACpB,SAACoG,EAAMP,UAlBb,SAASQ,EAAiBC,EAAWH,EAAWD,SAErB,mBAAdC,EACFE,EAAiB,GAAIF,EAAUG,EAAWJ,IAI/CK,MAAMC,QAAQL,GACTT,gBAAWY,UAAcH,IAI3BT,EAAWY,EAAWH,GAZ/B,CAmByBC,EAAMP,OAClBK,GACHC,iBAEJ,MAIOM,EAAc,SAACR,EAAOS,EAASR,EAAWS,mBAAXT,MAAO,IACjDD,EAAMjG,QAAO,SAACoG,EAAMP,UACAA,EAAKO,EAAMF,KAU5BQ,IAEQE,EAAY,SAACX,EAAOY,EAASX,yBAAO,IAC/CD,EAAMhF,SAAQ,YACM6F,EAAKD,EAASX,OAW7B,SAASa,EAAkBC,EAASC,EAASC,EAAYC,GAM1CH,EAAQI,WAC1B,mBAAUC,EAAOH,aAAeA,KAalCD,EAAQhG,SAAQ,YACM+F,EAAQI,WAC1B,mBAAUC,EAAOH,aAAeI,QAY/B,SAASC,EAAiBC,EAASC,SACd,mBAAZD,EAAyBA,EAAQC,GAAOD,EAGjD,SAASE,EAAaC,OACrBC,EAAMC,EAAMC,gBAClBF,EAAIG,QAAUJ,EAEPE,EAAMG,aAAY,kBAAMJ,EAAIG,UAAS,QAIjCE,EACS,oBAAbC,SAA2BL,EAAMM,gBAAkBN,EAAMO,UAE3D,SAASC,EAAuBC,EAAIC,OACnCC,EAAaX,EAAMC,WAEzBG,GAAoB,WACdO,EAAWT,SACbO,IAEFE,EAAWT,aAEVQ,GAuCE,SAASE,EAAaC,EAAUC,EAAQzC,yBAAO,IAC7C,SAAC0C,EAAMzC,kBAAY,QAClB0C,EAAuB,iBAATD,EAAoBD,EAAOC,GAAQA,cAE5CC,QACTC,QAAQC,KAAKJ,GACP,IAAIK,MAvMA,sCA0MLC,EAAWJ,OAAWH,GAAUC,UAAWzC,KAASC,KAIxD,SAAS8C,EAAWJ,EAAMjD,UAYjC,SAA0BsD,SAED,mBAAdA,IAECC,EAAQjM,OAAOkM,eAAeF,IACvBxL,WAAayL,EAAMzL,UAAU2L,iBAF3C,IACOF,EAJZ,CAR0BD,EAHAL,IAMD,mBAAdK,GAeX,SAA2BA,SAEF,iBAAdA,GACuB,iBAAvBA,EAAUI,UACjB,CAAC,aAAc,qBAAqBC,SAASL,EAAUI,SAASE,aAJpE,CAdsBN,GAPYrB,gBAACgB,EAASjD,GAAYiD,EAGxD,IAA0BK,ECtMnB,SAASO,EAAoBC,EAASC,EAAQC,yBAAQ,GACpDF,EAAQrH,KAAI,mBAOjBwH,EANAlB,OACKA,GACHgB,SACAC,WAKEjB,EAAOe,UACTf,EAAOe,QAAUD,EAAoBd,EAAOe,QAASf,EAAQiB,EAAQ,IAEhEjB,KAIJ,SAASmB,EAAeJ,UACtBK,EAAUL,EAAS,WAGrB,SAASG,EAAqBlB,OAE7BqB,EAAyBrB,EAAzBqB,GAAIC,EAAqBtB,EAArBsB,SAAUC,EAAWvB,EAAXuB,UAEI,iBAAbD,EAAuB,CAChCD,EAAKA,GAAMC,MACLE,EAAeF,EAASrJ,MAAM,KACpCqJ,EAAW,mBAyHR,SAAetC,EAAKyC,EAAMC,OAC1BD,SACIzC,MAYL2C,EAVEC,EAA2B,mBAATH,EAAsBA,EAAOI,KAAKC,UAAUL,GAE9DM,EACJC,EAAaC,IAAIL,IAChB,eACOG,EA+IZ,SAAuB/C,UAevB,SAASkD,EAAYC,EAAKC,GAAS,QAATA,UAAS,IAC5BxE,MAAMC,QAAQsE,OAGZ,IAAIzN,EAAI,EAAGA,EAAIyN,EAAIvN,OAAQF,GAAK,EACnCwN,EAAYC,EAAIzN,GAAI0N,QAHtBA,EAAO5J,KAAK2J,UAMPC,EART,CAbgBpD,GAETtF,KAAI,mBAAKjD,OAAO4L,GAAGC,QAAQ,IAAK,QAEhCC,KAAK,KAELD,QAAQE,EAAe,KACvBF,QAAQG,EAAgB,IAExBxK,MAAM,KAXb,CA/IoCwJ,UAC9BO,EAAaU,IAAId,EAAUG,GACpBA,EAHR,OASDJ,EAAMI,EAAQ1K,QAAO,SAACsL,EAAQC,UAAaD,EAAOC,KAAW5D,GAC7D,MAAO6D,oBAGKlB,EAAsBA,OArB/B,GAzHqBmB,EAAKtB,QAG1BH,GAAwB,iBAAXE,GAAuBA,IACvCF,EAAKE,IAGFF,GAAMrB,EAAOe,cAChBZ,QAAQ4C,MAAM/C,GACR,IAAIK,MAAM,2DAGbgB,QACHlB,QAAQ4C,MAAM/C,GACR,IAAIK,MAAM,wDAGlB9L,OAAOC,OAAOwL,EAAQ,CACpBqB,KACAC,aAGKtB,EAGF,SAASgD,EAAehD,EAAQiD,OAChCA,QACG,IAAI5C,aAEZ9L,OAAOC,OAAOwL,KAEZuB,OAAQ,kBAAMrC,yCACdgE,OAAQ,kBAAMhE,0CACX1C,KACAyG,KACAjD,IAGLzL,OAAOC,OAAOwL,EAAQ,CACpBmD,cAAenD,EAAOtD,QAGjBsD,EAIF,SAASoD,EAAiBC,EAAY7G,WACrC8G,EAAe,GAEjBC,EAAcF,EAEdG,EAAM,EACJC,EAAS,kBAAMD,sBAIbE,EAAc,CAClBC,QAAS,IAILC,EAAgB,GAEhBC,EAAaN,EAAYO,MAAK,mBAAKzB,EAAErB,UAG3CuC,EAAYjL,SAAQ,gBAIdyL,EAFAC,EAAqB,UAAIJ,GAAeK,UAAU,GAIlDJ,IAGAE,EADE/D,EAAOgB,OACT+C,KACK/D,EAAOgB,QACVkD,WAAYlE,EAAOgB,OAAOK,GAC1BA,GAAOrB,EAAOgB,OAAOK,OAAMoC,IAC3BE,QAAS,CAAC3D,KAKAgD,EACV,CACEkB,WAHkBlE,EAAOqB,kBAIzBA,GAAOrB,EAAOqB,mBAAkBoC,IAChCU,cAAenE,EACf2D,QAAS,CAAC3D,IAEZxD,GAOFwH,GACAA,EAAmBE,aAAeH,EAAUG,WAE5CF,EAAmBL,QAAQnL,KAAKwH,GAEhC4D,EAAcpL,KAAKuL,IAIvBL,EAAYC,QAAQnL,KAAKwH,MAG3BsD,EAAa9K,KAAKkL,GAGlBH,EAAcK,GA3DTL,EAAY3O,mBA8DZ0O,EAAaW,UAGtB,IAAMjC,EAAe,IAAIoC,IA0BlB,SAASC,+BAAmBC,iDAC5B,IAAI5P,EAAI,EAAGA,EAAI4P,EAAK1P,OAAQF,GAAK,cACzB4P,EAAK5P,UACP4P,EAAK5P,GA8BX,SAAS6P,EAAWhO,MACR,mBAANA,SACFA,EAIJ,SAAS6K,EAAUe,EAAKrN,OACvB0P,EAAO,UAEG,SAAVC,EAAU,GACdtC,EAAI7J,SAAQ,YACL+J,EAAEvN,GAGL2P,EAAQpC,EAAEvN,IAFV0P,EAAKhM,KAAK6J,MAHA,CAURF,GAEDqC,EAGF,SAASE,EACdC,SACEC,sBAAmBC,iBAAUC,8BAEzBC,EAAe,UAerBJ,EAAKrM,SAba,SAAZ0M,EAAY,GAChBlC,EAAImC,WACDnC,EAAIoC,UAAYpC,EAAIoC,SAASN,IAAuBC,EAAS/B,EAAIzB,IAEpEyB,EAAIqC,UAAYrC,EAAIsC,WAAatC,EAAIsC,QAAQxQ,OAE7CmQ,EAAavM,KAAKsK,GAEdgC,GAAiBhC,EAAIsC,SAAWtC,EAAIsC,QAAQxQ,QAAUkO,EAAImC,YAC5DnC,EAAIsC,QAAQ9M,QAAQ0M,MAMjBD,EAGF,SAASM,EAAgBC,EAAQC,EAAiBC,UAErDjB,EAAWe,IACXC,EAAgBD,IAChBE,EAAYF,IACZE,EAAYC,KAIT,SAASC,EAAuBC,EAAY9O,EAAOmJ,UACjD2F,EAAaA,EAAW9O,EAAOmJ,YAAiBnJ,EAGlD,SAAS+O,UACR,IAAIvF,MACR,mGAIJ,IAAIwF,EAAmB,KAyBjBrD,EAAgB,MAChBC,EAAiB,MCzTjBqD,EAAuB,sBAC3BC,KAAM,SACH9I,IAGC+I,EAA2B,sBAC/BD,KAAM,YACH9I,IAGCgJ,EAAwB,SAAChJ,SAAS+C,qBACtClL,cAAekL,EAAOqB,GACtB6E,QAASlG,EAAOmG,wBAChBJ,KAAM,gBACH9I,IAGCmJ,EAAwB,SAACnJ,SAAS+C,qBACtClL,cAAekL,EAAOqB,GACtB6E,QAASlG,EAAOmG,yBACblJ,IAGCoJ,EAA6B,SAACpJ,eAClCnI,qBAD2C0C,MAE3CuO,KAAM,OACH9I,IAGCqJ,EAA6B,SAACrJ,eAClCnI,qBAD2C0C,OAExCyF,IAGCsJ,EAAqB,SAACtJ,eAC1BnI,aADmCgO,IACnBzB,GAChB0E,KAAM,OACH9I,IAGCuJ,EAAsB,SAACvJ,SAASwJ,mBACpC3R,YAAa2R,EAAK3D,IAAIzB,OAAMoF,EAAKzG,OAAOqB,GACxC0E,KAAM,QACH9I,IAGU,SAASyJ,UACf,CACLC,WAAY,GACZC,cAAe,GACfC,mBAAoB,GACpB9F,QAAS,GACT+F,YAAa,GACbzD,WAAY,GACZ0D,eAAgB,GAChBC,YAAa,GACbC,oBAAqB,GACrBC,wBAAyB,GACzBC,qBAAsB,GACtBC,eAAgB,GAChBC,mBAAoB,GACpB/D,aAAc,GACdgE,iBAAkB,GAClBC,4BAA6B,GAC7BC,YAAa,GACbC,WAAY,GACZC,cAAe,CAAC5B,GAChB6B,kBAAmB,CAAC3B,GACpB4B,oBAAqB,CAACvB,GACtBwB,oBAAqB,CAACvB,GACtBwB,eAAgB,CAAC7B,GACjB8B,eAAgB,CAAC3B,GACjB4B,YAAa,CAACzB,GACd0B,aAAc,CAACzB,GACf0B,iBAAkB,IChEtB5L,EAAQ6L,mBAAqB,qBAC7B7L,EAAQ8L,iBAAmB,mBAC3B9L,EAAQ+L,iBAAmB,mBAC3B/L,EAAQgM,qBAAuB,uBAExB,IAAMC,EAAsB,YACjCjL,EAAMkL,qBAAuB,CAACC,GAC9BnL,EAAMoL,6BAA+B,CAACC,GAEtCrL,EAAMsJ,cAAcpO,KAAKoQ,GACzBtL,EAAMiK,4BAA4B/O,KAAK+O,GACvCjK,EAAMgK,iBAAiB9O,MAAK,SAACoH,SAAQG,6BAChCH,GACHG,EAAS8I,MAAMC,mBAEjBxL,EAAMkK,YAAYhP,KAAKgP,IAGzBe,EAAoBhK,WAAa,sBAEjC,IAAMkK,EAA8B,SAACxL,SAAS+C,iBAAa,CACzD/C,EACA,CACE8L,SAAU,SAAAlG,GACR7C,EAAOgJ,cAAcnG,EAAEpO,OAAOwU,UAEhC9L,MAAO,CACLwF,OAAQ,WAEVsG,QAASjJ,EAAOkJ,UAChBC,MAAO,2BAILR,EAAsC,SAAC1L,SAAS8C,mBAAe,CACnE9C,EACA,CACE8L,SAAU,SAAAlG,GACR9C,EAASuI,sBAAsBzF,EAAEpO,OAAOwU,UAE1C9L,MAAO,CACLwF,OAAQ,WAEVsG,SAAUlJ,EAASqJ,mBAAqBrJ,EAAS8I,MAAMC,cAAclU,OACrEuU,MAAO,4BACPE,eACGtJ,EAASqJ,kBAAoBrJ,EAAS8I,MAAMC,cAAclU,UAIjE,SAASgU,EAAQC,EAAOS,EAAQC,EAAexJ,MACzCuJ,EAAOrJ,OAAS3D,EAAQC,eAExBuM,cAAe,IACZD,MAIHS,EAAOrJ,OAAS3D,EAAQ6L,+BAErBU,GACHC,cAAe/I,EAASyJ,aAAaV,eAAiB,QAItDQ,EAAOrJ,OAAS3D,EAAQ8L,iBAAkB,KAMtCU,YAJGQ,EAAOzS,MACVyS,EAAOzS,OACNgS,EAAMC,cAAclI,SAAS0I,EAAOG,qBAGnCZ,EAAMC,eAAeQ,EAAOG,WAChCZ,EAAMC,cAAcxD,QAAO,mBAAKjD,IAAMiH,EAAOG,wBAG5CZ,GACHC,yBAIAQ,EAAOrJ,OAAS3D,EAAQ+L,sBAErBQ,GACHC,cAAelK,EAAiB0K,EAAOzS,MAAOgS,EAAMC,iBAIpDQ,EAAOrJ,OAAS3D,EAAQgM,0BAOrBO,GACHC,wBANOQ,EAAOzS,MACVyS,EAAOzS,OACNgS,EAAMC,cAAclU,QAIEmL,EAASsD,WAAW3J,KAAI,mBAAK2I,EAAEhB,MAAM,YAKtE,SAASkG,EAA4BxH,OAEjC4D,EAEE5D,EAFF4D,QACSmF,EACP/I,EADF8I,MAASC,cAGU5J,EAAMC,WAETC,YAsBd+G,EAA0B,EAE9BxC,EAAQrL,SACN,mBAAc6N,GAtBK,SAAfuD,EAAgB1J,EAAQ2J,GAC5B3J,EAAOkJ,UAAYS,IAAkBb,EAAclI,SAASZ,EAAOqB,QAE/D8E,EAA0B,SAE1BnG,EAAO2D,SAAW3D,EAAO2D,QAAQ/O,OACnCoL,EAAO2D,QAAQrL,SACb,mBACG6N,GAA2BuD,EAAaE,EAAW5J,EAAOkJ,cAG/D/C,EAA0BnG,EAAOkJ,UAAY,EAAI,EAGnDlJ,EAAOmG,wBAA0BA,EAE1BA,EAhBY,CAsBmC0D,SAI1D,SAASrC,EAAYzH,OAEjBgB,EAOEhB,EAPFgB,QACA+I,EAME/J,EANF+J,YACAC,EAKEhK,EALFgK,SACA1G,EAIEtD,EAJFsD,WACA2G,EAGEjK,EAHFiK,SACSlB,EAEP/I,EAFF8I,MAASC,gBAEP/I,EADFkK,uCAGIC,EAAcnL,EAAagB,GAE3BqJ,EAAmB/F,EAAWzO,SAAWkU,EAAclU,OAEvDwT,EAAmBlJ,EAAMG,aAC7B,SAACoK,EAAU5S,UACTkT,EAAS,CAAE9J,KAAM3D,EAAQ8L,iBAAkBqB,WAAU5S,YACvD,CAACkT,IAGG1B,EAAmBnJ,EAAMG,aAC7B,mBAAS0K,EAAS,CAAE9J,KAAM3D,EAAQ+L,iBAAkBxR,YACpD,CAACkT,IAGGzB,EAAuBpJ,EAAMG,aACjC,mBAAS0K,EAAS,CAAE9J,KAAM3D,EAAQgM,qBAAsBzR,YACxD,CAACkT,IAGGrB,EAA+BrL,EACnC2M,IAAWtB,6BACX,CAAE3I,SAAUmK,MAGdJ,EAAYxR,SAAQ,YAClB0H,EAAOgJ,aAAe,YACpBe,EAAS,CACP9J,KAAM3D,EAAQ8L,iBACdqB,SAAUzJ,EAAOqB,GACjBxK,WAIJmJ,EAAOwI,qBAAuBnL,EAC5B2M,IAAWxB,qBACX,CACEzI,SAAUmK,IACVlK,kBAKAmK,EAA4BpL,EAAakL,GAE/CvK,GAAuB,WACjByK,KACFJ,EAAS,CAAE9J,KAAM3D,EAAQ6L,uBAE1B,CAAC4B,EAAUhJ,IAEdxM,OAAOC,OAAOuL,EAAU,CACtBqJ,mBACAhB,mBACAC,mBACAC,uBACAI,iCC7LJ,IAAM0B,EAAsB,GACtBC,EAAwB,GACxBC,GAAiB,SAACzB,EAAOS,EAAQiB,UAAc1B,GAC/C2B,GAAoB,SAAC1H,EAAKtL,UAAUsL,EAAIsC,SAAW,IACnDqF,GAAkB,SAAC3H,EAAKtL,EAAOwJ,aAChCA,EAAS,CAACA,EAAOK,GAAI7J,GAAO+K,KAAK,KAAO/K,IACvCkT,GAA4B,mBAAKrI,GAEvC,SAASsI,GAAc1N,SASjBA,EAPFuM,0BAAeY,MAObnN,EANFT,2BAAgB6N,MAMdpN,EALF2N,wBAAaJ,OAKXvN,EAJF4N,sBAAWJ,OAITxN,EAHF6N,0BAAeR,OAGbrN,EAFF4J,gCAAqB6D,mBAEnBzN,iGAIFuM,eACAhN,gBACAoO,aACAC,WACAC,eACAjE,uBAmZJ,SAASkE,GAAsBpH,EAASqH,kBAAO,OACzCC,EAAmB,EACnBC,EAAgB,EAChBC,EAAmB,EACnBC,EAAoB,SAExBzH,EAAQrL,SAAQ,gBACC+S,EAAeC,EAAxB3H,WAEN2H,EAAOC,UAAYP,EAEfK,GAAcA,EAAWzW,OAAQ,OAM/BmW,GAAsBM,EAAYL,GAJpCQ,OACAC,OACAC,OACAC,OAEFL,EAAOE,cAAgBA,EACvBF,EAAOG,WAAaA,EACpBH,EAAOI,cAAgBA,EACvBJ,EAAOK,eAAiBA,OAExBL,EAAOE,cAAgBF,EAAO3O,SAC9B2O,EAAOG,WAAaG,KAAKC,IACvBD,KAAKE,IAAIR,EAAO3O,SAAU2O,EAAO5O,OACjC4O,EAAO1O,UAET0O,EAAOI,cAAgBJ,EAAO1O,SAC9B0O,EAAOK,eAAiBL,EAAOS,UAAYT,EAAOG,WAAa,EAE7DH,EAAOpC,YACT8B,GAAQM,EAAOG,WACfR,GAAoBK,EAAOE,cAC3BN,GAAiBI,EAAOG,WACxBN,GAAoBG,EAAOI,cAC3BN,GAAqBE,EAAOK,mBAIzB,CAACV,EAAkBC,EAAeC,EAAkBC,GAG7D,SAASY,UACPC,SACAtH,SACAuH,aACAC,aACAnM,WACA6K,aACAD,eACAwB,qBACAlC,gBA6EA+B,EAAK3T,SAAQ,SAAC+T,EAAaC,UAxET,SAAZC,EAAaF,EAAaC,EAAUrL,EAAWD,EAAQwL,YAAnBvL,MAAQ,OAE1CiE,EAAWmH,EAEXhL,EAAKwJ,EAASwB,EAAaC,EAAUtL,GAEvC8B,EAAMqJ,EAAS9K,MAGdyB,EAsCMA,EAAIsC,SAIbtC,EAAI2J,gBAAgBnU,SAAQ,SAAC+J,EAAG3N,UAAM6X,EAAUlK,EAAG3N,EAAGuM,EAAQ,EAAG6B,eAzCjEA,EAAM,CACJzB,KACA6D,WACA1N,MAAO8U,EACPrL,QACAyL,MAAO,CAAC,MAKNA,MAAMhT,IAAMkM,EAChB9C,EAAI4J,MAAMpH,OAASM,EACnB9C,EAAI4J,MAAMpU,QAAUsN,EACpB9C,EAAI4J,MAAM,GAAGzE,aAAerC,EAG5B9C,EAAI/K,OAAS,GAGbyU,EAAWhU,KAAKsK,GAEhBoJ,EAAS1T,KAAKsK,GAEdqJ,EAAS9K,GAAMyB,EAGfA,EAAI2J,gBAAkB7B,EAAWyB,EAAaC,GAG1CxJ,EAAI2J,gBAAiB,KACjBrH,EAAU,GAChBtC,EAAI2J,gBAAgBnU,SAAQ,SAAC+J,EAAG3N,UAC9B6X,EAAUlK,EAAG3N,EAAGuM,EAAQ,EAAG6B,EAAKsC,MAGlCtC,EAAIsC,QAAUA,EAUdpF,EAAOsB,WACTwB,EAAI/K,OAAOiI,EAAOqB,IAAMrB,EAAOsB,SAAS+K,EAAaC,EAAUxJ,IAIjEA,EAAI/K,OAAOiI,EAAOqB,IAAMvD,EACtBsO,EACAtJ,EAAI/K,OAAOiI,EAAOqB,IAClB,CACEyB,MACA9C,SACAD,SAAUmK,MAlEE,CAyENmC,EAAaC,EAAU,SAAc3H,MC5jBnDrI,EAAQqQ,cAAgB,gBACxBrQ,EAAQsQ,kBAAoB,oBAC5BtQ,EAAQuQ,sBAAwB,4BAEnBC,GAAc,YACzBxP,EAAMyP,8BAAgC,CAACC,IACvC1P,EAAM2P,0BAA4B,CAACC,IACnC5P,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAMkK,YAAYhP,KAAKgP,IACvBlK,EAAMmK,WAAWjP,KAAKiP,KAGxBqF,GAAYvO,WAAa,cAEzB,IAAMyO,GAAuC,SAAC/P,SAAS8C,mBAAe,CACpE9C,EACA,CACEkQ,QAAS,SAAAtK,GACP9C,EAAS8M,yBAEX1P,MAAO,CACLwF,OAAQ,WAEVwG,MAAO,8BAIL+D,GAAmC,SAACjQ,SAAS6F,cAAU,CAC3D7F,EACA,CACEkQ,QAAS,WACPrK,EAAI8J,qBAENzP,MAAO,CACLwF,OAAQ,WAEVwG,MAAO,yBAKX,SAASP,GAAQC,EAAOS,EAAQC,EAAexJ,MACzCuJ,EAAOrJ,OAAS3D,EAAQC,eAExBsI,SAAU,IACPgE,MAIHS,EAAOrJ,OAAS3D,EAAQqQ,0BAErB9D,GACHhE,SAAU9E,EAASyJ,aAAa3E,UAAY,QAI5CyE,EAAOrJ,OAAS3D,EAAQuQ,sBAAuB,KACzChW,EAAUyS,EAAVzS,MACAuW,EAAgCrN,EAAhCqN,kBAAmBjB,EAAapM,EAAboM,qBAEFtV,EAAwBA,GAASuW,EAE3C,KACPvI,EAAW,UAEjBtQ,OAAOyC,KAAKmV,GAAU7T,SAAQ,YAC5BuM,EAASwI,SAAS,KAIfxE,GACHhE,yBAKCgE,GACHhE,SAAU,QAIVyE,EAAOrJ,OAAS3D,EAAQsQ,kBAAmB,OACrCvL,EAA2BiI,EAA3BjI,GAAWiM,EAAgBhE,EAAvBzS,MACN0W,EAAS1E,EAAMhE,SAASxD,GAExBmM,WACGF,EAA8BA,GAAeC,MAEjDA,GAAUC,cAER3E,GACHhE,cACKgE,EAAMhE,iBACRxD,MAAK,MAGL,GAAIkM,IAAWC,EAAa,OACJ3E,EAAMhE,SAA1BxD,OAA0BwD,EAA1BxD,QAEJwH,GACHhE,cAHOxD,oBAMFwH,GAKb,SAASrB,GAAYzH,OAEjBkM,EAWElM,EAXFkM,KACAtH,EAUE5E,EAVF4E,KACAwH,EASEpM,EATFoM,WASEpM,EARF6E,+BAAoB,eAQlB7E,EAPF0N,uCAOE1N,EANF+E,gCAME/E,EALF2N,kCACA1D,EAIEjK,EAJFiK,SACA3L,EAGE0B,EAHF1B,QACSwG,EAEP9E,EAFF8I,MAAShE,SACTkF,EACEhK,EADFgK,SAGF3L,EACEC,EACA,CAAC,YAAa,aAAc,kBAAmB,mBAC/C,mBAGIsP,EAAuB5O,EAAa2O,GAEtCN,EAAoBQ,QACtBrZ,OAAOyC,KAAKmV,GAAUvX,QAAUL,OAAOyC,KAAK6N,GAAUjQ,QAGpDwY,GACE7Y,OAAOyC,KAAKmV,GAAUrI,MAAK,mBAAOe,EAASxD,QAC7C+L,MAKJ1N,GAAuB,WACjBiO,KACF5D,EAAS,CAAE9J,KAAM3D,EAAQqQ,kBAE1B,CAAC5C,EAAUkC,QAERW,EAAoB1N,EAAMG,aAC9B,SAACgC,EAAIxK,GACHkT,EAAS,CAAE9J,KAAM3D,EAAQsQ,kBAAmBvL,KAAIxK,YAElD,CAACkT,IAGG8C,EAAwB3N,EAAMG,aAClC,mBAAS0K,EAAS,CAAE9J,KAAM3D,EAAQuQ,sBAAuBhW,YACzD,CAACkT,IAGGhF,EAAe7F,EAAM2O,SAAQ,kBAC7BJ,EACK/I,EAAWC,EAAM,CAAEC,oBAAmBC,WAAUC,kBAGlDH,IACN,CAAC8I,EAAsB9I,EAAMC,EAAmBC,EAAUC,IAEvDgJ,EAAgB5O,EAAM2O,SAAQ,kBAmCtC,SAA2BhJ,OACrBkJ,EAAW,SAEfxZ,OAAOyC,KAAK6N,GAAUvM,SAAQ,gBACtB0V,EAAU3M,EAAGpJ,MAAM,KACzB8V,EAAWnC,KAAKE,IAAIiC,EAAUC,EAAQpZ,WAGjCmZ,EART,CAnC8DlJ,KAAW,CACrEA,IAGIqF,EAAcnL,EAAagB,GAE3BgN,EAAgC1P,EACpC2M,IAAW+C,8BACX,CAAEhN,SAAUmK,MAGd3V,OAAOC,OAAOuL,EAAU,CACtBkO,gBAAiBtJ,EACjBI,eACAJ,KAAMI,EACN+I,gBACAV,oBACAR,oBACAC,wBACAE,kCAIJ,SAAStF,GAAW3E,SAAmBkH,IAAZjK,SAAYiK,SAAYjK,aACjD+C,EAAI8J,kBAAoB,mBAAO7M,EAAS6M,kBAAkB9J,EAAIzB,GAAIqB,IAElEI,EAAImK,0BAA4B5P,EAC9B2M,IAAWiD,0BACX,CACElN,WACA+C,YCnNO2C,GAAO,SAACd,EAAMuJ,EAAKC,UACvBxJ,EAAKW,QAAO,mBACV4I,EAAIpK,MAAK,gBACRsK,EAAWtL,EAAI/K,OAAOsJ,UACrB5K,OAAO2X,GACXnU,cACA2G,SAASnK,OAAO0X,GAAalU,sBAMtCwL,GAAKE,WAAa,mBAAQhE,GAEnB,IAAM0M,GAAY,SAAC1J,EAAMuJ,EAAKC,UAC5BxJ,EAAKW,QAAO,mBACV4I,EAAIpK,MAAK,gBACRsK,EAAWtL,EAAI/K,OAAOsJ,mBACrB+M,GACH3X,OAAO2X,GAAUnU,gBAAkBxD,OAAO0X,GAAalU,qBAMjEoU,GAAU1I,WAAa,mBAAQhE,GAExB,IAAM2M,GAAgB,SAAC3J,EAAMuJ,EAAKC,UAChCxJ,EAAKW,QAAO,mBACV4I,EAAIpK,MAAK,gBACRsK,EAAWtL,EAAI/K,OAAOsJ,mBACrB+M,GACH3X,OAAO2X,KAAc3X,OAAO0X,UAMtCG,GAAc3I,WAAa,mBAAQhE,GAE5B,IAAMf,GAAW,SAAC+D,EAAMuJ,EAAKC,UAC3BxJ,EAAKW,QAAO,mBACV4I,EAAIpK,MAAK,mBACGhB,EAAI/K,OAAOsJ,GACZT,SAASuN,UAK/BvN,GAAS+E,WAAa,mBAAQhE,IAAQA,EAAI/M,QAEnC,IAAM2Z,GAAc,SAAC5J,EAAMuJ,EAAKC,UAC9BxJ,EAAKW,QAAO,mBACV4I,EAAIpK,MAAK,gBACRsK,EAAWtL,EAAI/K,OAAOsJ,UAE1B+M,GACAA,EAASxZ,QACTuZ,EAAYK,OAAM,mBAAOJ,EAASxN,SAASe,aAMnD4M,GAAY5I,WAAa,mBAAQhE,IAAQA,EAAI/M,QAEtC,IAAM6Z,GAAe,SAAC9J,EAAMuJ,EAAKC,UAC/BxJ,EAAKW,QAAO,mBACV4I,EAAIpK,MAAK,gBACRsK,EAAWtL,EAAI/K,OAAOsJ,UAE1B+M,GACAA,EAASxZ,QACTuZ,EAAYrK,MAAK,mBAAOsK,EAASxN,SAASe,aAMlD8M,GAAa9I,WAAa,mBAAQhE,IAAQA,EAAI/M,QAEvC,IAAM8Z,GAAgB,SAAC/J,EAAMuJ,EAAKC,UAChCxJ,EAAKW,QAAO,mBACV4I,EAAIpK,MAAK,gBACRsK,EAAWtL,EAAI/K,OAAOsJ,UACrB8M,EAAYvN,SAASwN,UAKlCM,GAAc/I,WAAa,mBAAQhE,IAAQA,EAAI/M,QAExC,IAAM+Z,GAAQ,SAAChK,EAAMuJ,EAAKC,UACxBxJ,EAAKW,QAAO,mBACV4I,EAAIpK,MAAK,mBACGhB,EAAI/K,OAAOsJ,KACR8M,SAK1BQ,GAAMhJ,WAAa,4BAAchE,GAE1B,IAAMiN,GAAS,SAACjK,EAAMuJ,EAAKC,UACzBxJ,EAAKW,QAAO,mBACV4I,EAAIpK,MAAK,mBACGhB,EAAI/K,OAAOsJ,IAET8M,SAKzBS,GAAOjJ,WAAa,mBAAc,MAAPhE,GAEpB,IAAMkN,GAAU,SAAClK,EAAMuJ,EAAKC,SAChBA,GAAe,GAA3BtC,OAAKC,WAEVD,EAAqB,iBAARA,EAAmBA,SAChCC,EAAqB,iBAARA,EAAmBA,EAAMzP,KAEvB,KACPyS,EAAOjD,EACbA,EAAMC,EACNA,EAAMgD,SAGDnK,EAAKW,QAAO,mBACV4I,EAAIpK,MAAK,gBACRsK,EAAWtL,EAAI/K,OAAOsJ,UACrB+M,GAAYvC,GAAOuC,GAAYtC,SAK5C+C,GAAQlJ,WAAa,mBAClBhE,GAA0B,iBAAXA,EAAI,IAAqC,iBAAXA,EAAI,2KCtHpDrF,EAAQyS,aAAe,eACvBzS,EAAQ0S,UAAY,YACpB1S,EAAQ2S,cAAgB,oBAEXC,GAAa,YACxB5R,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAMkK,YAAYhP,KAAKgP,KAKzB,SAASoB,GAAQC,EAAOS,EAAQC,EAAexJ,MACzCuJ,EAAOrJ,OAAS3D,EAAQC,eAExB4S,QAAS,IACNtG,MAIHS,EAAOrJ,OAAS3D,EAAQyS,yBAErBlG,GACHsG,QAASpP,EAASyJ,aAAa2F,SAAW,QAI1C7F,EAAOrJ,OAAS3D,EAAQ0S,UAAW,KAC7BvF,EAA0BH,EAA1BG,SAAU0E,EAAgB7E,EAAhB6E,YACV9K,EAA6CtD,EAA7CsD,WAAyBkC,EAAoBxF,EAAjCyF,YAEdxF,EAASqD,EAAW+L,MAAK,mBAAK/M,EAAEhB,KAAOoI,SAExCzJ,QACG,IAAIK,uDACyCoJ,OAI/C4F,EAAehK,EACnBrF,EAAOsF,OACPC,GAAmB,GACnBC,IAGI8J,EAAiBzG,EAAMsG,QAAQC,MAAK,mBAAK/M,EAAEhB,KAAOoI,KAElD8F,EAAY3Q,EAChBuP,EACAmB,GAAkBA,EAAezY,cAI/B6O,EAAuB2J,EAAa1J,WAAY4J,EAAWvP,QAExD6I,GACHsG,QAAStG,EAAMsG,QAAQ7J,QAAO,mBAAKjD,EAAEhB,KAAOoI,YAMzCZ,EAFHyG,GAGAH,QAAStG,EAAMsG,QAAQzV,KAAI,mBACrB2I,EAAEhB,KAAOoI,EACJ,CAAEpI,GAAIoI,EAAU5S,MAAO0Y,GAEzBlN,OAOX8M,kBAAatG,EAAMsG,SAAS,CAAE9N,GAAIoI,EAAU5S,MAAO0Y,UAInDjG,EAAOrJ,OAAS3D,EAAQ2S,cAAe,KACjCE,EAAY7F,EAAZ6F,QACA9L,EAA6CtD,EAA7CsD,WAAyBkC,EAAoBxF,EAAjCyF,wBAGfqD,GAEHsG,QAASvQ,EAAiBuQ,EAAStG,EAAMsG,SAAS7J,QAAO,gBACjDtF,EAASqD,EAAW+L,MAAK,mBAAK/M,EAAEhB,KAAOiE,EAAOjE,aAQlDqE,EAPmBL,EACnBrF,EAAOsF,OACPC,GAAmB,GACnBC,IAIoCG,WAAYL,EAAOzO,MAAOmJ,SAUxE,SAASwH,GAAYzH,OAEjBkM,EAYElM,EAZFkM,KACAtH,EAWE5E,EAXF4E,KACAuH,EAUEnM,EAVFmM,SACAC,EASEpM,EATFoM,SACA9I,EAQEtD,EARFsD,WACakC,EAOXxF,EAPFyF,YACAgK,EAMEzP,EANFyP,gBAMEzP,EALF0P,iCACAC,EAIE3P,EAJF2P,eACSP,EAGPpP,EAHF8I,MAASsG,QACTpF,EAEEhK,EAFFgK,WAEEhK,EADF4P,iCAGIX,EAAY9P,EAAMG,aACtB,SAACoK,EAAU0E,GACTpE,EAAS,CAAE9J,KAAM3D,EAAQ0S,UAAWvF,WAAU0E,kBAEhD,CAACpE,IAGGkF,EAAgB/P,EAAMG,aAC1B,YACE0K,EAAS,CACP9J,KAAM3D,EAAQ2S,cACdE,cAGJ,CAACpF,IAGH1G,EAAW/K,SAAQ,gBAEf+I,EAIErB,EAJFqB,GACAC,EAGEtB,EAHFsB,SACkBsO,EAEhB5P,EAFFyP,iBACgBI,EACd7P,EADF0P,eAIF1P,EAAO8P,UAAYxO,EACf+C,OACEwL,WAAwCE,IACxCL,WAAkCK,GAGpC1L,EAAgBuL,EAAwBH,MAG5CzP,EAAOgP,UAAY,mBAAOA,EAAUhP,EAAOqB,GAAIM,QAIzCqO,EAAQb,EAAQC,MAAK,mBAAK/M,EAAEhB,KAAOA,KACzCrB,EAAOmO,YAAc6B,GAASA,EAAMnZ,eAOlCqI,EAAM2O,SAAQ,cACZ2B,IAAkBL,EAAQva,aACrB,CAAC+P,EAAMuH,EAAUC,OAGpB8D,EAAmB,GACnBC,EAAmB,SAiElB,CA9DY,SAAbC,EAAcxL,EAAM1D,kBAAQ,OAC5BmP,EAAezL,SAEnByL,EAAejB,EAAQ9X,QACrB,SAACgZ,SAAqB5G,IAAJpI,GAAqB8M,IAAPtX,MAExBmJ,EAASqD,EAAW+L,MAAK,mBAAK/M,EAAEhB,KAAOoI,SAExCzJ,SACIqQ,EAGK,IAAVpP,IACFjB,EAAOsQ,gBAAkBD,OAGrBhB,EAAehK,EACnBrF,EAAOsF,OACPC,GAAmB,GACnBC,WAGG6J,GASLrP,EAAOoQ,aAAef,EACpBgB,EACA,CAAC5G,GACD0E,GAGKnO,EAAOoQ,eAdZjQ,QAAQoQ,uEAC4DvQ,EAAOqB,QAEpEgP,KAaX1L,IAOWrM,SAAQ,YACnB2X,EAAiBzX,KAAKsK,GACtBoN,EAAiBpN,EAAIzB,IAAMyB,EACtBA,EAAIsC,UAITtC,EAAIsC,QACFtC,EAAIsC,SAAWtC,EAAIsC,QAAQxQ,OAAS,EAChCub,EAAWrN,EAAIsC,QAASnE,EAAQ,GAChC6B,EAAIsC,YAGLgL,EA3DU,CA8DAzL,GAAOsL,EAAkBC,KAC3C,CACDV,EACAL,EACAxK,EACAuH,EACAC,EACA9I,EACAkC,IAlFA6K,OACAH,OACAC,OAmFFhR,EAAM2O,SAAQ,WAGexK,EAAWiC,QACpC,mBAAW6J,EAAQC,MAAK,mBAAK/M,EAAEhB,KAAOrB,EAAOqB,SAK5B/I,SAAQ,YACzB0H,EAAOsQ,gBAAkBF,EACzBpQ,EAAOoQ,aAAeA,OAEvB,CAACA,EAAcjB,EAAS9L,QAErBmN,EAAsBzR,EAAa4Q,GAEzCjQ,GAAuB,WACjB8Q,KACFzG,EAAS,CAAE9J,KAAM3D,EAAQyS,iBAE1B,CAAChF,EAAUyF,EAAgB,KAAOvD,IAErC1X,OAAOC,OAAOuL,EAAU,CACtBuQ,gBAAiB3L,EACjB8L,oBAAqBvE,EACrBwE,oBAAqBvE,EACrBiE,eACAH,mBACAC,mBACAvL,KAAMyL,EACNlE,SAAU+D,EACV9D,SAAU+D,EACVlB,YACAC,kBAjRJC,GAAW3Q,WAAa,aCTxBjC,EAAQqU,kBAAoB,oBAC5BrU,EAAQsU,gBAAkB,sBAEbC,GAAkB,YAC7BvT,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAMkK,YAAYhP,KAAKgP,KAKzB,SAASoB,GAAQC,EAAOS,EAAQC,EAAexJ,MACzCuJ,EAAOrJ,OAAS3D,EAAQqU,8BAErB9H,GACHiI,aAAc/Q,EAASyJ,aAAasH,uBAAgBf,GAIpDzG,EAAOrJ,OAAS3D,EAAQsU,gBAAiB,KACnCzC,EAAgB7E,EAAhB6E,YACA5I,EAAoBxF,EAApBwF,gBAEF8J,EAAehK,EACnBtF,EAAS+Q,aACTvL,GAAmB,GACnBC,IAGI+J,EAAY3Q,EAAiBuP,EAAatF,EAAMiI,qBAGlDpL,EAAuB2J,EAAa1J,WAAY4J,IACI1G,EAA9CiI,eAA8CjI,0BAKnDA,GACHiI,aAAcvB,KAKpB,SAAS/H,GAAYzH,OAEjBkM,EAYElM,EAZFkM,KACAtH,EAWE5E,EAXF4E,KACAuH,EAUEnM,EAVFmM,SACAC,EASEpM,EATFoM,SACA9I,EAQEtD,EARFsD,WACakC,EAOXxF,EAPFyF,YACAsL,EAME/Q,EANF+Q,aACAC,EAKEhR,EALFgR,mBACuBC,EAIrBjR,EAJF8I,MAASiI,aACT/G,EAGEhK,EAHFgK,WAGEhK,EAFFkR,sCACAC,EACEnR,EADFmR,oBAGIN,EAAkB1R,EAAMG,aAC5B,YACE0K,EAAS,CAAE9J,KAAM3D,EAAQsU,gBAAiBzC,kBAE5C,CAACpE,MAYC7K,EAAM2O,SAAQ,cACZkD,YAA6BC,QACxB,CAACrM,EAAMuH,EAAUC,OAGpB8D,EAAmB,GACnBC,EAAmB,GAEnBb,EAAehK,EACnByL,EACAvL,GAAmB,GACnBC,QAGG6J,SACHlP,QAAQoQ,sDACD5L,EAGTtB,EAAW/K,SAAQ,gBACY6Y,EAA8BnR,EAAnDkR,oBAERlR,EAAO8P,UAAYzL,OACjB8M,WAA6CpB,IAC7CmB,WAAuCnB,MACvC,IAIEqB,EAAoB/N,EAAWiC,QAAO,uBAAK+L,EAAEvB,mBAuB5C,CApBY,SAAbK,EAAa,UACjBC,EAAef,EACbe,EACAgB,EAAkB1X,KAAI,mBAAK2I,EAAEhB,MAC7B2P,IAGW1Y,SAAQ,YACnB2X,EAAiBzX,KAAKsK,GACtBoN,EAAiBpN,EAAIzB,IAAMyB,EAE3BA,EAAIsC,QACFtC,EAAIsC,SAAWtC,EAAIsC,QAAQxQ,OACvBub,EAAWrN,EAAIsC,SACftC,EAAIsC,WAGLgL,EAjBU,CAoBAzL,GAAOsL,EAAkBC,KAC3C,CACDa,EACAC,EACAF,EACAvL,EACAlC,EACAsB,EACAuH,EACAC,EACA+E,IAjEAI,OACAC,OACAC,OAkEIC,EAA2B1S,EAAakS,GAE9CvR,GAAuB,WACjB+R,KACF1H,EAAS,CAAE9J,KAAM3D,EAAQqU,sBAE1B,CAAC5G,EAAUgH,EAAqB,KAAO9E,IAE1C1X,OAAOC,OAAOuL,EAAU,CACtB2R,sBAAuB/M,EACvBgN,0BAA2BzF,EAC3B0F,0BAA2BzF,EAC3BmF,qBACAC,yBACAC,yBACA7M,KAAM2M,EACNpF,SAAUqF,EACVpF,SAAUqF,EACVZ,kBACAM,wBCjLG,SAASW,GAAI9Z,EAAQ+Z,UAGnBA,EAAiBza,QACtB,SAACwa,EAAK3U,UAAS2U,GAAuB,iBAAT3U,EAAoBA,EAAO,KACxD,GDqBJ2T,GAAgBtS,WAAa,kECjBtB,SAAaxG,OACd8T,EAAM,SAEV9T,EAAOO,SAAQ,YACQ,iBAAVzB,IACTgV,EAAMD,KAAKC,IAAIA,EAAKhV,OAIjBgV,OAGF,SAAa9T,OACd+T,EAAM,SAEV/T,EAAOO,SAAQ,YACQ,iBAAVzB,IACTiV,EAAMF,KAAKE,IAAIA,EAAKjV,OAIjBiV,UAGF,SAAgB/T,OACjB8T,EAAM,EACNC,EAAM,SAEV/T,EAAOO,SAAQ,YACQ,iBAAVzB,IACTgV,EAAMD,KAAKC,IAAIA,EAAKhV,GACpBiV,EAAMF,KAAKE,IAAIA,EAAKjV,OAIdgV,OAAQC,WAGb,SAAiB/T,UACf8Z,GAAI,EAAM9Z,GAAUA,EAAOnD,eAG7B,SAAgBmD,OAChBA,EAAOnD,cACH,SAGLiX,EAAM,EACNC,EAAM,SAEV/T,EAAOO,SAAQ,YACQ,iBAAVzB,IACTgV,EAAMD,KAAKC,IAAIA,EAAKhV,GACpBiV,EAAMF,KAAKE,IAAIA,EAAKjV,QAIhBgV,EAAMC,GAAO,UAGhB,SAAgB/T,UACd6F,MAAMmU,KAAK,IAAIC,IAAIja,GAAQA,uBAG7B,SAAqBA,UACnB,IAAIia,IAAIja,GAAQka,YAGlB,SAAela,UACbA,EAAOnD,UChEVsd,GAAa,GACbC,GAAc,GAGpB7V,EAAQ8V,aAAe,eACvB9V,EAAQ+V,cAAgB,oBAEXC,GAAa,YACxBhV,EAAMiV,sBAAwB,CAACC,IAC/BlV,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAM+J,mBAAmB7O,MAAK,SAACoH,SAAQG,6BAClCH,GACHG,EAAS8I,MAAM4J,aAEjBnV,EAAM8J,eAAe5O,KAAK4O,IAC1B9J,EAAMkK,YAAYhP,KAAKgP,IACvBlK,EAAMmK,WAAWjP,KAAKiP,KAGxB6K,GAAW/T,WAAa,aAExB,IAAMiU,GAA+B,SAACvV,SAASqO,iBAAa,CAC1DrO,EACA,CACEkQ,QAAS7B,EAAOoH,WACZ,SAAA7P,GACEA,EAAE8P,UACFrH,EAAO+G,wBAGblV,MAAO,CACLwF,OAAQ2I,EAAOoH,WAAa,kBAE9BvJ,MAAO,oBAKX,SAASP,GAAQC,EAAOS,EAAQC,EAAexJ,MACzCuJ,EAAOrJ,OAAS3D,EAAQC,eAExBkW,QAAS,IACN5J,MAIHS,EAAOrJ,OAAS3D,EAAQ8V,yBAErBvJ,GACH4J,QAAS1S,EAASyJ,aAAaiJ,SAAW,QAI1CnJ,EAAOrJ,OAAS3D,EAAQ+V,cAAe,KACjC5I,EAAgCH,EAAhCG,SAAiBmJ,EAAetJ,EAAtBzS,MAEZgc,WACGD,EACHA,GACC/J,EAAM4J,QAAQ7R,SAAS6I,eAIvBZ,EAFHgK,GAGAJ,kBAAa5J,EAAM4J,SAAShJ,MAM9BgJ,QAAS5J,EAAM4J,QAAQnN,QAAO,mBAAKjD,IAAMoH,QAK/C,SAASrC,GACPrG,SAGa0R,IADX1S,SACE8I,MAAS4J,QAOPK,EAAiBL,EACpB/Y,KAAI,mBAAKqH,EAAQqO,MAAK,mBAAO2D,EAAI1R,KAAO2R,QACxC1N,OAAOsI,SAEJqF,EAAoBlS,EAAQuE,QAAO,mBAAQmN,EAAQ7R,SAASmS,EAAI1R,cAEtEN,YAAc+R,EAAmBG,IAEzB3a,SAAQ,YACd0H,EAAOkT,UAAYT,EAAQ7R,SAASZ,EAAOqB,IAC3CrB,EAAOmT,aAAeV,EAAQza,QAAQgI,EAAOqB,OAGxCN,EAGT,IAAMqS,GAA0B,GAEhC,SAAS5L,GAAYzH,OAEjBkM,EAgBElM,EAhBFkM,KACAtH,EAeE5E,EAfF4E,KACAuH,EAcEnM,EAdFmM,SACAC,EAaEpM,EAbFoM,SACA9I,EAYEtD,EAZFsD,WACAyG,EAWE/J,EAXF+J,cAWE/J,EAVFsT,uBAAYC,KACZC,EASExT,EATFwT,gBASExT,EARFyT,aAAcC,aAAmBL,KACjC/U,EAOE0B,EAPF1B,QACSoU,EAMP1S,EANF8I,MAAS4J,QACT1I,EAKEhK,EALFgK,WAKEhK,EAJF2T,iCACAC,EAGE5T,EAHF4T,eACAC,EAEE7T,EAFF6T,kBACA5J,EACEjK,EADFiK,SAGF5L,EAAkBC,EAAS,CAAC,iBAAkB,cAAe,kBAEvD6L,EAAcnL,EAAagB,GAEjCsD,EAAW/K,SAAQ,gBAEfgJ,EAGEtB,EAHFsB,SACgBuS,EAEd7T,EAFF8T,eACgBC,EACd/T,EADF2T,eAGF3T,EAAO0S,WAAapR,EAChB+C,EACErE,EAAO0S,gBACPqB,WAAwChE,IACxC4D,WAAkC5D,GAGpC1L,EACErE,EAAO0S,WACPmB,EACAD,MAIF5T,EAAO0S,aACT1S,EAAOqS,cAAgB,kBAAMtS,EAASsS,cAAcrS,EAAOqB,MAG7DrB,EAAOgU,WAAahU,EAAOgU,YAAchU,EAAOvD,YAG5C4V,EAAgBnT,EAAMG,aAC1B,SAACoK,EAAU5S,GACTkT,EAAS,CAAE9J,KAAM3D,EAAQ+V,cAAe5I,WAAU5S,YAEpD,CAACkT,IAGHD,EAAYxR,SAAQ,YAClBgT,EAAOiH,sBAAwBlV,EAC7B2M,IAAWuI,sBACX,CAAExS,SAAUmK,IAAeoB,oBAY3BpM,EAAM2O,SAAQ,cACZ0F,IAAkBd,EAAQ7d,aACrB,CACL+P,EACAuH,EACAC,EACA+F,GACAC,GACAjG,EACAC,OAKE8H,EAAkBxB,EAAQnN,QAAO,mBACrCjC,EAAW+L,MAAK,mBAAO2D,EAAI1R,KAAO2R,QAiEhCkB,EAAkB,GAChBC,EAAkB,GAClBC,EAAsB,GACtBC,EAAsB,GACtBC,EAAqB,GACrBC,EAAqB,GA6DrBC,EA1DqB,SAArBC,EAAsB9P,EAAM1D,EAAWyT,eAAXzT,MAAQ,GAEpCA,IAAUgT,EAAgBrf,cACrB+P,MAGH8E,EAAWwK,EAAgBhT,GAG7B0T,EAAetB,EAAU1O,EAAM8E,UAGLlV,OAAOqgB,QAAQD,GAAcjb,KACzD,WAA4BlC,OAA1Bqd,OAAYL,OACRnT,EAAQoI,MAAYoL,EAIlBzP,EAAUqP,EAAmBD,EAAavT,EAAQ,EAHxDI,EAAKqT,EAAcA,MAAYrT,EAAOA,GAMhCyT,EAAW7T,EACbG,EAAUoT,EAAa,YACvBA,EAEEzc,EA7FkB,SAAC+c,EAAUN,EAAavT,OAC9ClJ,EAAS,UAEfsL,EAAW/K,SAAQ,eAEb2b,EAAgBrT,SAASZ,EAAOqB,IAClCtJ,EAAOiI,EAAOqB,IAAMmT,EAAY,GAC5BA,EAAY,GAAGzc,OAAOiI,EAAOqB,IAC7B,cAKA0T,EAAgBP,EAAY9a,KAAI,mBAAOoJ,EAAI/K,OAAOiI,EAAOqB,OAGzD2T,EAAaF,EAASpb,KAAI,gBAC1Bub,EAAcnS,EAAI/K,OAAOiI,EAAOqB,QAE/BJ,GAASjB,EAAOkV,eAAgB,KAC7BC,EAC6B,mBAA1BnV,EAAOkV,eACVlV,EAAOkV,eACPzB,EAAiBzT,EAAOkV,iBACxB1B,GAAaxT,EAAOkV,oBAErBC,QACHhV,QAAQC,KAAK,CAAEJ,WACT,IAAIK,mFAKZ4U,EAAcE,EAAiBF,EAAanS,EAAK9C,UAE5CiV,KAILG,EAC0B,mBAArBpV,EAAOqV,UACVrV,EAAOqV,UACP5B,EAAiBzT,EAAOqV,YACxB7B,GAAaxT,EAAOqV,cAEtBD,EACFrd,EAAOiI,EAAOqB,IAAM+T,EAAYJ,EAAYD,OACvC,IAAI/U,EAAOqV,gBAChBlV,QAAQC,KAAK,CAAEJ,WACT,IAAIK,8EAIVtI,EAAOiI,EAAOqB,IAAM,UAIjBtJ,EAzDqB,CA6Fa+c,EAAUN,EAAavT,GAEtD6B,EAAM,CACVzB,KACA6R,aACAoC,UAAW7L,EACXoL,aACA9c,SACAqN,UACA0P,WACA7T,QACAzJ,gBAGF4N,EAAQ9M,SAAQ,YACd4b,EAAgB1b,KAAK+c,GACrBpB,EAAgBoB,EAAOlU,IAAMkU,EACzBA,EAAOrC,WACTkB,EAAoB5b,KAAK+c,GACzBlB,EAAoBkB,EAAOlU,IAAMkU,IAEjCjB,EAAmB9b,KAAK+c,GACxBhB,EAAmBgB,EAAOlU,IAAMkU,MAI7BzS,KAnDc,CA0DY6B,UAEvC6P,EAAYlc,SAAQ,YAClB4b,EAAgB1b,KAAK+c,GACrBpB,EAAgBoB,EAAOlU,IAAMkU,EACzBA,EAAOrC,WACTkB,EAAoB5b,KAAK+c,GACzBlB,EAAoBkB,EAAOlU,IAAMkU,IAEjCjB,EAAmB9b,KAAK+c,GACxBhB,EAAmBgB,EAAOlU,IAAMkU,MAK7B,CACLf,EACAN,EACAC,EACAC,EACAC,EACAC,EACAC,KAED,CACDhB,EACAd,EACA9N,EACAuH,EACAC,EACA9I,EACAoQ,EACAJ,IAzLAmB,OACAN,OACAC,OACAC,OACAC,OACAC,OACAC,OAsLIiB,EAAsBzW,EAAa2U,GAEzChU,GAAuB,WACjB8V,KACFzL,EAAS,CAAE9J,KAAM3D,EAAQ8V,iBAE1B,CAACrI,EAAUwJ,EAAgB,KAAOtH,IAErC1X,OAAOC,OAAOuL,EAAU,CACtB0V,eAAgB9Q,EAChB+Q,kBAAmBxJ,EACnByJ,mBAAoBxJ,EACpBqI,cACAN,kBACAC,kBACAC,sBACAC,sBACAC,qBACAC,qBACA5P,KAAM6P,EACNtI,SAAUgI,EACV/H,SAAUgI,EACV9B,kBAIJ,SAAS5K,GAAW3E,GAClBA,EAAI8S,SAAStd,SAAQ,YAEnBmO,EAAKyM,UAAYzM,EAAKzG,OAAOkT,WAAazM,EAAKzG,OAAOqB,KAAOyB,EAAIwS,UAEjE7O,EAAKoP,eAAiBpP,EAAKyM,WAAazM,EAAKzG,OAAOkT,UAEpDzM,EAAKqP,cAAgBrP,EAAKyM,YAAczM,EAAKoP,eAAiB/S,EAAIqC,aAI/D,SAASmO,GAAiB3O,EAAM8E,UAC9B9E,EAAKtN,QAAO,SAACoG,EAAMqF,EAAKpO,OAGvBqhB,KAAYjT,EAAI/K,OAAO0R,UAC7BhM,EAAKsY,GAAUnY,MAAMC,QAAQJ,EAAKsY,IAAWtY,EAAKsY,GAAU,GAC5DtY,EAAKsY,GAAQvd,KAAKsK,GACXrF,IACN,IClaL,IAAMuY,GAAsB,aA0E5B,SAASC,GAAa1f,EAAGC,UAChBD,IAAMC,EAAI,EAAID,EAAIC,EAAI,GAAK,EAGpC,SAAS0f,GAAsBpT,EAAK2G,UAC3B3G,EAAI/K,OAAO0R,GAGpB,SAAS0M,GAAS5f,SACC,iBAANA,EACL6f,MAAM7f,IAAMA,IAAM8F,KAAY9F,SACzB,GAEFE,OAAOF,GAEC,iBAANA,EACFA,EAEF,qDAvFmB,SAAC8f,EAAMC,EAAM7M,OACnClT,EAAI2f,GAAsBG,EAAM5M,GAChCjT,EAAI0f,GAAsBI,EAAM7M,OAEpClT,EAAI4f,GAAS5f,GACbC,EAAI2f,GAAS3f,GAIbD,EAAIA,EAAE0B,MAAM+d,IAAqB1Q,OAAOsI,SACxCpX,EAAIA,EAAEyB,MAAM+d,IAAqB1Q,OAAOsI,SAGjCrX,EAAE3B,QAAU4B,EAAE5B,QAAQ,KACvB2hB,EAAKhgB,EAAEigB,QACPC,EAAKjgB,EAAEggB,QAELE,EAAKC,SAASJ,EAAI,IAClBK,EAAKD,SAASF,EAAI,IAElBI,EAAQ,CAACH,EAAIE,GAAIxd,UAGnBgd,MAAMS,EAAM,QACVN,EAAKE,SACA,KAELA,EAAKF,SACC,UAMRH,MAAMS,EAAM,WACPT,MAAMM,IAAO,EAAI,KAItBA,EAAKE,SACA,KAELA,EAAKF,SACC,UAILngB,EAAE3B,OAAS4B,EAAE5B,iBAGf,SAAkByhB,EAAMC,EAAM7M,OAC/BlT,EAAI2f,GAAsBG,EAAM5M,GAChCjT,EAAI0f,GAAsBI,EAAM7M,UAK7BwM,GAHP1f,EAAIA,EAAEugB,UACNtgB,EAAIA,EAAEsgB,kBAKD,SAAeT,EAAMC,EAAM7M,UAIzBwM,GAHCC,GAAsBG,EAAM5M,GAC5ByM,GAAsBI,EAAM7M,OCnDtCnN,EAAQya,YAAc,cACtBza,EAAQ0a,aAAe,eACvB1a,EAAQ2a,YAAc,cAEtBza,EAAc0a,SAAW,eACzB1a,EAAc2a,iBAAgB,IAEjBC,GAAY,YACvB9Z,EAAM+Z,qBAAuB,CAACC,IAC9Bha,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAMkK,YAAYhP,KAAKgP,KAGzB4P,GAAU7Y,WAAa,YAEvB,IAAM+Y,GAA8B,SAACra,SAAS8C,aAAUC,aACPD,EAAvCwX,8BAAmB,SAAA1U,GAAA,OAAKA,EAAE2U,kBAE3B,CACLva,EACA,CACEkQ,QAASnN,EAAOyX,QACZ,SAAA5U,GACEA,EAAE8P,UACF3S,EAAOgX,qBAEJjX,EAAS2X,kBAAoBH,EAAiB1U,YAIvD1F,MAAO,CACLwF,OAAQ3C,EAAOyX,QAAU,kBAE3BtO,MAAOnJ,EAAOyX,QAAU,0BAM9B,SAAS7O,GAAQC,EAAOS,EAAQC,EAAexJ,MACzCuJ,EAAOrJ,OAAS3D,EAAQC,eAExBob,OAAQ,IACL9O,MAIHS,EAAOrJ,OAAS3D,EAAQya,wBAErBlO,GACH8O,OAAQ5X,EAASyJ,aAAamO,QAAU,QAIxCrO,EAAOrJ,OAAS3D,EAAQ2a,wBAKrBpO,GACH8O,OALiB9O,EAAX8O,OACiBrS,QAAO,mBAAKjD,EAAEhB,KAAOiI,EAAOG,iBAQnDH,EAAOrJ,OAAS3D,EAAQ0a,aAAc,KAyBpCY,EAxBInO,EAA0BH,EAA1BG,SAAUoO,EAAgBvO,EAAhBuO,KAAMC,EAAUxO,EAAVwO,MAGtBzU,EAKEtD,EALFsD,WACAqU,EAIE3X,EAJF2X,iBACAK,EAGEhY,EAHFgY,kBACAC,EAEEjY,EAFFiY,qBAEEjY,EADFkY,kCAAuBpb,OAAOC,mBAGxB6a,EAAW9O,EAAX8O,OAIAR,EADO9T,EAAW+L,MAAK,mBAAK/M,EAAEhB,KAAOoI,KACrC0N,cAGFe,EAAiBP,EAAOvI,MAAK,mBAAK/M,EAAEhB,KAAOoI,KAC3C0O,EAAgBR,EAAOlZ,WAAU,mBAAK4D,EAAEhB,KAAOoI,KAC/C2O,EAAiB,MAAOP,EAE1BQ,EAAY,SAwBC,YAjBbT,GAFCF,GAAoBI,EACnBI,EACW,SAEA,MAIXC,IAAkBR,EAAO/iB,OAAS,EACvB,UACJsjB,EACI,SAEA,YAOdH,GACAK,GACAN,GAASE,KACRE,GACAA,EAAeL,OACdV,IACCe,EAAeL,MAAQV,KAE3BS,EAAa,UAGI,YAAfA,EACFS,EAAY,CACV,CACEhX,GAAIoI,EACJoO,KAAMO,EAAiBP,EAAOV,IAGV,QAAfS,GACTS,YACKV,GACH,CACEtW,GAAIoI,EACJoO,KAAMO,EAAiBP,EAAOV,MAIxBmB,OAAO,EAAGD,EAAUzjB,OAASqjB,GACf,WAAfL,EAETS,EAAYV,EAAOje,KAAI,mBACjB2I,EAAEhB,KAAOoI,OAENpH,GACHwV,KAAMO,EAAiBP,GAAQK,EAAeL,OAG3CxV,KAEe,WAAfuV,IACTS,EAAYV,EAAOrS,QAAO,mBAAKjD,EAAEhB,KAAOoI,WAIrCZ,GACH8O,OAAQU,KAKd,SAAS7Q,GAAYzH,OAEjBkM,EAeElM,EAfFkM,KACAtH,EAcE5E,EAdF4E,KACAuH,EAaEnM,EAbFmM,SACA7I,EAYEtD,EAZFsD,aAYEtD,EAXFwY,uBAAYC,KACDC,EAUT1Y,EAVF2Y,UACAC,EASE5Y,EATF4Y,aACAC,EAQE7Y,EARF6Y,eACAC,EAOE9Y,EAPF8Y,cACA/O,EAME/J,EANF+J,YACS6N,EAKP5X,EALF8I,MAAS8O,OACT5N,EAIEhK,EAJFgK,SACA1L,EAGE0B,EAHF1B,QACA2L,EAEEjK,EAFFiK,WAEEjK,EADF+Y,gCAGF1a,EACEC,EACA,CAAC,aAAc,kBAAmB,aAAc,mBAChD,iBAII2Y,EAAe9X,EAAMG,aACzB,SAACoK,EAAUoO,EAAMC,GACf/N,EAAS,CAAE9J,KAAM3D,EAAQ0a,aAAcvN,WAAUoO,OAAMC,YAEzD,CAAC/N,IAIGG,EAAcnL,EAAagB,GAGjC+J,EAAYxR,SAAQ,gBAEhBgJ,EAIEtB,EAJFsB,SACSyX,EAGP/Y,EAHFyX,QACeuB,EAEbhZ,EAFF6Y,cACAxX,EACErB,EADFqB,GAGIoW,EAAUnW,EACZ+C,OACE2U,WAAuCjJ,IACvC8I,WAAiC9I,GAGnC1L,EAAgBuU,EAAgBG,MAEpC/Y,EAAOyX,QAAUA,EAEbzX,EAAOyX,UACTzX,EAAOgX,aAAe,SAACa,EAAMC,UAC3Bd,EAAahX,EAAOqB,GAAIwW,EAAMC,IAEhC9X,EAAOiX,YAAc,WACnBlN,EAAS,CAAE9J,KAAM3D,EAAQ2a,YAAaxN,SAAUzJ,EAAOqB,OAI3DrB,EAAOqX,qBAAuBha,EAC5B2M,IAAWqN,qBACX,CACEtX,SAAUmK,IACVlK,eAIEiZ,EAAatB,EAAOvI,MAAK,mBAAK/M,EAAEhB,KAAOA,KAC7CrB,EAAOkZ,WAAaD,EACpBjZ,EAAOmZ,YAAcxB,EAAOlZ,WAAU,mBAAK4D,EAAEhB,KAAOA,KACpDrB,EAAOoZ,aAAepZ,EAAOkZ,SAAWD,EAAWpB,eAAO9H,MAGvB7Q,EAAM2O,SAAQ,cAC7C8K,IAAiBhB,EAAO/iB,aACnB,CAAC+P,EAAMuH,OAGVmN,EAAiB,GAGjBC,EAAkB3B,EAAOrS,QAAO,mBACpCjC,EAAW+L,MAAK,mBAAO2D,EAAI1R,KAAOjI,EAAKiI,eAoElC,CAjEU,SAAXkY,EAAW,OAITC,EAAajB,EACjB5T,EACA2U,EAAgB5f,KAAI,gBAEZsG,EAASqD,EAAW+L,MAAK,mBAAK/M,EAAEhB,KAAOjI,EAAKiI,UAE7CrB,QACG,IAAIK,uDACyCjH,EAAKiI,yBAIlD6V,EAAalX,EAAbkX,SASFuC,EACJlV,EAAW2S,KACVuB,GAAiB,IAAIvB,IACtBwB,GAAUxB,OAEPuC,QACG,IAAIpZ,0DAC4C6W,mBAAyB9d,EAAKiI,gBAM/E,SAAC9K,EAAGC,UAAMijB,EAAWljB,EAAGC,EAAG4C,EAAKiI,GAAIjI,EAAKye,UAGlDyB,EAAgB5f,KAAI,gBAEZsG,EAASqD,EAAW+L,MAAK,mBAAK/M,EAAEhB,KAAOjI,EAAKiI,aAE9CrB,GAAUA,EAAO0Z,aACZtgB,EAAKye,MAGNze,EAAKye,gBAKjB2B,EAAWlhB,SAAQ,YACjB+gB,EAAe7gB,KAAKsK,IACfA,EAAIsC,SAAWtC,EAAIsC,QAAQxQ,OAAS,IAGzCkO,EAAIsC,QAAUmU,EAASzW,EAAIsC,aAGtBoU,EA9DQ,CAiEA7U,GAAO0U,KACvB,CACDV,EACAhB,EACAhT,EACAuH,EACA7I,EACAkV,EACAE,IArFKkB,OAAYN,OAwFbO,EAAqB7a,EAAa+Z,GAExCpZ,GAAuB,WACjBka,KACF7P,EAAS,CAAE9J,KAAM3D,EAAQya,gBAE1B,CAAC4B,EAAe,KAAO1M,IAE1B1X,OAAOC,OAAOuL,EAAU,CACtB8Z,cAAelV,EACfmV,kBAAmB5N,EACnByN,aACAN,iBACA1U,KAAMgV,EACNzN,SAAUmN,EACVrC,iBAIG,SAASwB,GAAiBrW,EAAK4X,EAAOC,SACpC,UAAI7X,GAAK/I,MAAK,SAACid,EAAMC,OACrB,IAAI5hB,EAAI,EAAGA,EAAIqlB,EAAMnlB,OAAQF,GAAK,EAAG,KAClCulB,EAASF,EAAMrlB,GACfmjB,OAAOmC,EAAKtlB,IAA4B,SAAZslB,EAAKtlB,GACjCwlB,EAAUD,EAAO5D,EAAMC,MACb,IAAZ4D,SACKrC,GAAQqC,EAAUA,SAGtBF,EAAK,GAAK3D,EAAK7e,MAAQ8e,EAAK9e,MAAQ8e,EAAK9e,MAAQ6e,EAAK7e,SCnWjE8E,EAAQ6d,UAAY,YACpB7d,EAAQ8d,SAAW,WACnB9d,EAAQ+d,YAAc,kBAETC,GAAgB,YAC3Bhd,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAMkK,YAAYhP,KAAKgP,KAKzB,SAASoB,GAAQC,EAAOS,EAAQC,EAAexJ,MACzCuJ,EAAOrJ,OAAS3D,EAAQC,eAExBge,SAAU,GACVC,UAAW,GACR3R,MAIHS,EAAOrJ,OAAS3D,EAAQ6d,sBAErBtR,GACH2R,UAAWza,EAASyJ,aAAagR,WAAa,OAI9ClR,EAAOrJ,OAAS3D,EAAQ8d,SAAU,KAC5BK,EAAoB1a,EAApB0a,UAAWC,EAAS3a,EAAT2a,KACbC,EAAe/b,EAAiB0K,EAAOkR,UAAW3R,EAAM2R,WAC1DI,KAAc,OAEdD,EAAe9R,EAAM2R,UAEvBI,GACiB,IAAfH,EACIC,EAAK9lB,QAAUiU,EAAM0R,SACrBI,EAAeF,EACZE,EAAe9R,EAAM2R,YAE9BI,EAAcD,GAAgB,GAG3BC,OAKA/R,GACH2R,UAAWG,IALJ9R,KASPS,EAAOrJ,OAAS3D,EAAQ+d,YAAa,KAC/BE,EAAajR,EAAbiR,SACFM,EAAchS,EAAM0R,SAAW1R,EAAM2R,sBAItC3R,GACH2R,UAJgB5O,KAAKkP,MAAMD,EAAcN,GAKzCA,cAKN,SAAS/S,GAAYzH,OAEjB4E,EAmBE5E,EAnBF4E,OAmBE5E,EAlBFgb,gCAkBEhb,EAjBF6E,+BAAoB,aACpBvG,EAgBE0B,EAhBF1B,QACW2c,EAeTjb,EAfF0a,YAeE1a,EAdF0N,uCAcE1N,EAbF+E,gCAaE/E,EAZF8I,MACE0R,aACAC,cACA3V,aACAiM,iBACA3B,YACAsD,YACAkF,WAEF5N,EAGEhK,EAHFgK,SACAkC,EAEElM,EAFFkM,KACAgP,EACElb,EADFkb,iBAGF7c,EACEC,EACA,CAAC,kBAAmB,aAAc,aAAc,YAAa,eAC7D,qBAGI6c,EAAmBnc,EAAagc,GAEtCrb,GAAuB,WACjBwb,KACFnR,EAAS,CAAE9J,KAAM3D,EAAQ6d,cAE1B,CACDpQ,EACAkR,EAAmB,KAAOhP,EAC1B6E,EACA3B,EACAsD,EACAkF,QAGI8C,EAAYQ,EACdD,EACApP,KAAKuP,KAAKxW,EAAK/P,OAAS2lB,GAEtBa,EAAclc,EAAM2O,SACxB,kBACE4M,EAAY,EACR,UAAI,IAAI7c,MAAM6c,IAAYY,KAAK,MAAM3hB,KAAI,SAAC2I,EAAG3N,UAAMA,KACnD,KACN,CAAC+lB,IAGGC,EAAOxb,EAAM2O,SAAQ,eACrB6M,KAEAO,EACFP,EAAO/V,MACF,KACC2W,EAAYf,EAAWC,EACvBe,EAAUD,EAAYf,EAE5BG,EAAO/V,EAAK6W,MAAMF,EAAWC,UAG3B9N,EACKiN,EAGFhW,EAAWgW,EAAM,CAAE9V,oBAAmBC,WAAUC,oBACtD,CACDA,EACAD,EACAD,EACAqW,EACAT,EACAD,EACA9M,EACA9I,IAGI8W,EAAkBjB,EAAY,EAC9BkB,GACW,IAAfjB,EAAmBC,EAAK9lB,QAAU2lB,EAAWC,EAAYC,EAAY,EAEjEL,EAAWlb,EAAMG,aACrB,YACE0K,EAAS,CAAE9J,KAAM3D,EAAQ8d,SAAUI,gBAErC,CAACzQ,IAGG4R,EAAezc,EAAMG,aAAY,kBAC9B+a,GAAS,mBAAOtb,EAAM,OAC5B,CAACsb,IAEEwB,EAAW1c,EAAMG,aAAY,kBAC1B+a,GAAS,mBAAOtb,EAAM,OAC5B,CAACsb,IAEEC,EAAcnb,EAAMG,aACxB,YACE0K,EAAS,CAAE9J,KAAM3D,EAAQ+d,YAAaE,eAExC,CAACxQ,IAGHxV,OAAOC,OAAOuL,EAAU,CACtBqb,cACAX,YACAC,OACAe,kBACAC,cACAtB,WACAuB,eACAC,WACAvB,gBAhLJC,GAAc/b,WAZK,gBCDnBjC,EAAQuf,WAAa,aACrBvf,EAAQwf,YAAc,kBAETC,GAA4B,YACvCze,EAAM0e,oBAAsB,CAACC,IAC7B3e,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAM6J,qBAAqB3O,KAAK2O,IAChC7J,EAAM+F,WAAW7K,KAAK6K,IACtB/F,EAAM0J,YAAYxO,KAAKwO,IACvB1J,EAAM2J,oBAAoBzO,KAAKyO,IAC/B3J,EAAM4J,wBAAwB1O,KAAK0O,IACnC5J,EAAM8J,eAAe5O,KAAK4O,IAC1B9J,EAAM+J,mBAAmB7O,KAAK6O,IAC9B/J,EAAMkK,YAAYhP,KAAKgP,IACvBlK,EAAMmK,WAAWjP,KAAKiP,KAGxBsU,GAA0Bxd,WAAa,kBAEvC,IAAM2d,GAAsB,GAEtBD,GAA6B,SAAChf,SAASqO,iBAAa,CACxDrO,EACA,CACEkQ,QAAS7B,EAAO6Q,SACZ,SAAAtZ,GACEA,EAAE8P,UACFrH,EAAOwQ,sBAGb3e,MAAO,CACLwF,OAAQ2I,EAAO6Q,SAAW,kBAE5BhT,MAAO,kBAKX,SAASP,GAAQC,EAAOS,EAAQC,EAAexJ,MACzCuJ,EAAOrJ,OAAS3D,EAAQC,eAExB6f,aAAcF,IACXrT,MAIHS,EAAOrJ,OAAS3D,EAAQuf,uBAErBhT,GACHuT,aAAcrc,EAASyJ,aAAa4S,cAAgBF,QAIpD5S,EAAOrJ,OAAS3D,EAAQwf,YAAa,KAC/BrS,EAA8BH,EAA9BG,SAAiB4S,EAAa/S,EAApBzS,MAEZylB,WACGD,EACHA,GACCxT,EAAMuT,aAAaxb,SAAS6I,eAI5BZ,EAFHyT,GAGAF,uBAAkBvT,EAAMuT,cAAc3S,MAMxC2S,aAAcvT,EAAMuT,aAAa9W,QAAO,mBAAKjD,IAAMoH,QAKzD,SAAStC,GAAqBpH,GAC5BA,EAASsD,WAAW/K,SAAQ,YAC1B0H,EAAOuc,cAAgBxc,EAAS8I,MAAMuT,aAAaxb,SAASZ,EAAOqB,OAIvE,SAASgC,GAAWtC,SAAWhB,oBAC7BgB,EAAQzI,SAAQ,YACd0H,EAAOuc,cAAgBxc,EAAS8I,MAAMuT,aAAaxb,SAASZ,EAAOqB,IACnErB,EAAOwc,aAAe,IAAIxK,OAErBjR,EAGT,SAASiG,GAAYnQ,SAASmJ,kBACxBA,EAAOwc,uBAAuB3lB,GAChCmJ,EAAOwc,aAAaC,IAAI5lB,GAEnBA,EAGT,SAASoQ,GAAoByV,SAAgB3c,aACnCsD,EAAsBtD,EAAtBsD,WAAYwF,EAAU9I,EAAV8I,UAEfA,EAAMuT,aAAaxnB,SAAWiU,EAAM4J,UAAY5J,EAAM4J,QAAQ7d,cAC1D8nB,MAGHN,EAAevT,EAAMuT,aACxB1iB,KAAI,mBAAM2J,EAAW+L,MAAK,mBAAK/M,EAAEhB,KAAOA,QACxCiE,OAAOsI,SAEJ+O,EAAgBtZ,EAAWiC,QAC/B,mBACGjD,EAAEka,gBACF1T,EAAM4J,QAAQ7R,SAASyB,EAAEhB,MACzBwH,EAAMuT,aAAaxb,SAASyB,EAAEhB,OAyD7Bub,EAAkBzb,EAtDE,SAApB0b,EAAqB5b,EAAWD,EAAQ8b,YAAnB7b,MAAQ,YAAW6b,MAAe,QACrDC,EAAcX,EAAanb,UAE5B8b,EAwBgBnf,MAAMmU,KAAKgL,EAAYP,cAAcpjB,OAEtCM,KAAI,SAAAsjB,GAAA,IAChBC,OACDF,GACHxb,OACEwb,EAAYG,aAA6C,iBAAvBH,EAAYzR,OACvCyR,EAAYxb,YAAW4b,EAC1BA,EACNC,gBACApc,SACAC,QACAI,GAAIL,EACGA,EAAOK,OAAM0b,EAAY1b,OAAM8b,EAC/BJ,EAAY1b,OAAM8b,EACzBE,WAAYF,WAGdF,EAAYlc,QAAU8b,EAAkB5b,EAAQ,EAAGgc,YAC9CH,GACH,mBAAOha,EAAI/K,OAAOglB,EAAY1b,MAAQ8b,MAGjCF,KA9CAN,EAAcjjB,KAAI,wBAQlB4jB,GACHnB,YACAoB,aACAvc,SACAC,MAAOA,EACPI,OAAOL,EAAYA,EAAOK,OAAMic,EAAajc,GAAOic,EAAajc,IACjEC,SAAU,SAAC+K,EAAa3X,EAAGoO,MACrBga,EAAatO,OAAM,mBAAUlJ,EAAOxC,aAC/BA,EAAI/K,OAAOulB,EAAajc,UApBjB,IAsDawb,gBAE5BH,EAAiBE,GAG9B,SAAS1V,GACPtH,aAEEG,SACE8I,MAASuT,iBAAc3J,4BAIhB7S,GAAMwc,EAAc3J,IAGjC,SAASrL,GAAeA,SAA8ByB,IAAZ9I,SAAY8I,aACpDzB,EAAiBA,EAAe9B,QAAO,mBAAMjD,EAAEka,iBAE3C1T,EAAMuT,aAAaxnB,QAAUiU,EAAM4J,SAAW5J,EAAM4J,QAAQ7d,SAC9DwS,EAAiBA,EAAe9B,QAC9B,mBAAUtF,EAAOkT,WAAalT,EAAOud,cAIlCnW,EAGT,SAASC,GAAmBzH,SAAQG,6BACvBH,GAAMG,EAAS8I,MAAMuT,aAAcrc,EAAS8I,MAAM4J,UAG/D,SAASjL,GAAYzH,OAEjBgB,EAYEhB,EAZFgB,QACAsC,EAWEtD,EAXFsD,WACAyG,EAUE/J,EAVF+J,YAGAE,EAOEjK,EAPFiK,SACA3L,EAME0B,EANF1B,QACA0L,EAKEhK,EALFgK,WAKEhK,EAJFyd,+BACAC,EAGE1d,EAHF0d,YACAC,EAEE3d,EAFF2d,aACAC,EACE5d,EADF4d,gBAGFvf,EAAkBC,EAAS,CAAC,cAAe,uBAErC6L,EAAcnL,EAAagB,GAEjCsD,EAAW/K,SAAQ,gBAEfgJ,EAGEtB,EAHFsB,SACcsc,EAEZ5d,EAFF6d,aACcC,EACZ9d,EADF0d,aAGF1d,EAAOmc,SAAW7a,EACd+C,EACErE,EAAOmc,cACP2B,WAAsC/N,IACtC2N,WAAgC3N,GAGlC1L,EACErE,EAAOmc,SACPyB,EACAD,MAIF3d,EAAOmc,WACTnc,EAAO8b,YAAc,kBAAM/b,EAAS+b,YAAY9b,EAAOqB,MAGzDrB,EAAOgU,WAAahU,EAAOgU,YAAchU,EAAOvD,QAOlDqN,EAAYxR,SAAQ,YAClBgT,EAAO0Q,oBAAsB3e,EAC3B2M,IAAWgS,oBACX,CACEjc,SAAUmK,IACVoB,kBAKAyS,EAAoBhf,EAAaye,GAEvC9d,GAAuB,WACjBqe,KACFhU,EAAS,CAAE9J,KAAM3D,EAAQuf,eAE1B,CAAC9R,EAAU0T,EAAc,KAAO1c,IAEnCxM,OAAOC,OAAOuL,EAAU,CACtB+b,YAvBkB,SAACrS,EAAU5S,GAC7BkT,EAAS,CAAE9J,KAAM3D,EAAQwf,YAAarS,WAAU5S,aA0BpD,SAAS4Q,GAAW3E,GAClBA,EAAI8S,SAAStd,SAAQ,YAEnBmO,EAAK8W,UAAY9W,EAAKzG,OAAOud,aCtRjCjhB,EAAQ0hB,kBAAoB,oBAC5B1hB,EAAQ2hB,sBAAwB,wBAChC3hB,EAAQ4hB,kBAAoB,wBAEfC,GAAe,YAC1B7gB,EAAM8gB,0BAA4B,CAACC,IACnC/gB,EAAMghB,8BAAgC,CAACC,IACvCjhB,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAMkK,YAAYhP,KAAKgP,IACvBlK,EAAMmK,WAAWjP,KAAKiP,KAGxB0W,GAAa5f,WAfM,eAiBnB,IAAM8f,GAAmC,SAACphB,SAAS8C,aAAU+C,UACX/C,EAAxCye,kCAAuB,qBASxB,CACLvhB,EACA,CACE8L,SAAU,SAAAlG,GACRC,EAAIob,kBAAkBrb,EAAEpO,OAAOwU,UAEjC9L,MAAO,CACLwF,OAAQ,WAEVsG,WAfAnG,EAAIoC,WAAYpC,EAAIoC,SAASsZ,KAGrB1b,EAAI2b,WAaZtV,MAAO,sBACPE,cAAevG,EAAI4b,kBAKnBH,GAAuC,SAACthB,SAAS8C,mBAAe,CACpE9C,EACA,CACE8L,SAAU,SAAAlG,GACR9C,EAASke,sBAAsBpb,EAAEpO,OAAOwU,UAE1C9L,MAAO,CACLwF,OAAQ,WAEVsG,QAASlJ,EAAS4e,kBAClBxV,MAAO,2BACPE,cAAeuE,SACZ7N,EAAS4e,mBACRpqB,OAAOyC,KAAK+I,EAAS8I,MAAM+V,gBAAgBhqB,WAKnD,SAASgU,GAAQC,EAAOS,EAAQC,EAAexJ,MACzCuJ,EAAOrJ,OAAS3D,EAAQC,eAExBqiB,eAAgB,IACb/V,MAIHS,EAAOrJ,OAAS3D,EAAQ0hB,8BAErBnV,GACH+V,eAAgB7e,EAASyJ,aAAaoV,gBAAkB,QAIxDtV,EAAOrJ,OAAS3D,EAAQ2hB,sBAAuB,KAClCY,EAAgBvV,EAAvBzS,MAEN8nB,EAGE5e,EAHF4e,kBACAxS,EAEEpM,EAFFoM,WAEEpM,EADFwU,gCAAqBpI,IAGjB2S,WACGD,EAA8BA,GAAeF,EAIhDC,EAAiBrqB,OAAOC,OAAO,GAAIqU,EAAM+V,uBAE3CE,EACFvqB,OAAOyC,KAAKud,GAAoBjc,SAAQ,YACtCsmB,EAAevR,SAGjB9Y,OAAOyC,KAAKud,GAAoBjc,SAAQ,mBAC/BsmB,EAAevR,WAKrBxE,GACH+V,sBAIAtV,EAAOrJ,OAAS3D,EAAQ4hB,kBAAmB,KACrC7c,EAA2BiI,EAA3BjI,GAAWwd,EAAgBvV,EAAvBzS,MACJsV,EAAmCpM,EAAnCoM,WAAmCpM,EAAzBgf,8BAMZN,EADMtS,EAAS9K,GACEod,WACjBjR,WACGqR,EAA8BA,GAAeJ,KAElDA,IAAejR,SACV3E,MAGHmW,OAAyBnW,EAAM+V,uBAEf,SAAhBK,EAAgB,OACdnc,EAAMqJ,EAAS9K,MAEhByB,EAAIoQ,YACH1F,EACFwR,EAAkB3d,aAEX2d,EAAkB3d,IAIzB0d,GAAiBjc,EAAIsC,eAChBtC,EAAIsC,QAAQ9M,SAAQ,mBAAO2mB,EAAcnc,EAAIzB,OAZlC,CAgBRA,QAGTwH,GACH+V,eAAgBI,KAKtB,SAASxX,GAAYzH,OAEjBkM,EAUElM,EAVFkM,KACAtH,EASE5E,EATF4E,KACAqF,EAQEjK,EARFiK,SACA3L,EAOE0B,EAPF1B,QACA8N,EAMEpM,EANFoM,WAMEpM,EALFwU,gCAAqBpI,MAKnBpM,EAJFmf,sCACSN,EAGP7e,EAHF8I,MAAS+V,iBAGP7e,EAFFgf,8BACAhV,EACEhK,EADFgK,SAGF3L,EACEC,EACA,CAAC,aAAc,aAAc,aAC7B,oBAGI8gB,EAAmBjgB,EAAM2O,SAAQ,eAC/BsR,EAAmB,UAEzBxa,EAAKrM,SAAQ,gBACLmmB,EAAaM,EAmEzB,SAASK,EAAiBtc,EAAK8b,MACzBA,EAAe9b,EAAIzB,aACd,GAGLyB,EAAIsC,SAAWtC,EAAIsC,QAAQxQ,OAAQ,KACjCyqB,KACAC,KAAe,OAEnBxc,EAAIsC,QAAQ9M,SAAQ,YAEdgnB,IAAiBD,IAIjBD,EAAiB7J,EAAQqJ,GAC3BU,KAEAD,WAGGA,KAA6BC,GAAe,cArBvD,CAlE2Bxc,EAAK8b,KACpBA,EAAe9b,EAAIzB,IACzByB,EAAI2b,aAAeA,EACnB3b,EAAI4b,eAAgC,OAAfD,EAEjBA,GACFU,EAAiB3mB,KAAKsK,MAInBqc,IACN,CAACxa,EAAMoa,EAAeH,IAErBD,EAAoB/Q,QACtBrZ,OAAOyC,KAAKud,GAAoB3f,QAAUL,OAAOyC,KAAK4nB,GAAgBhqB,QAGpE+pB,GACEpqB,OAAOyC,KAAKud,GAAoBzQ,MAAK,mBAAO8a,EAAevd,QAC7Dsd,MAAoB,IAIlBY,EAA2BxgB,EAAamgB,GAE9Cxf,GAAuB,WACjB6f,KACFxV,EAAS,CAAE9J,KAAM3D,EAAQ0hB,sBAE1B,CAACjU,EAAUkC,QAERgS,EAAwB/e,EAAMG,aAClC,mBAAS0K,EAAS,CAAE9J,KAAM3D,EAAQ2hB,sBAAuBpnB,YACzD,CAACkT,IAGGmU,EAAoBhf,EAAMG,aAC9B,SAACgC,EAAIxK,UAAUkT,EAAS,CAAE9J,KAAM3D,EAAQ4hB,kBAAmB7c,KAAIxK,YAC/D,CAACkT,IAGGG,EAAcnL,EAAagB,GAE3Bue,EAAgCjhB,EACpC2M,IAAWsU,8BACX,CAAEve,SAAUmK,MAGd3V,OAAOC,OAAOuL,EAAU,CACtBof,mBACAR,oBACAT,oBACAD,wBACAK,kCAIJ,SAAS7W,GAAW3E,SAAO/C,aACzB+C,EAAIob,kBAAoB,mBAAOne,EAASme,kBAAkBpb,EAAIzB,GAAIqB,IAElEI,EAAIsb,0BAA4B/gB,EAC9B0C,EAASiK,WAAWoU,0BACpB,CAAEre,SAAUA,EAAU+C,QC9O1B,IAAM0c,GAAiC,kBAAgB,IACjDC,GAAkC,kBAAgB,IAGxDnjB,EAAQojB,YAAc,cACtBpjB,EAAQqjB,aAAe,eACvBrjB,EAAQsjB,cAAgB,oBAEXC,GAAc,YACzBviB,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAMkK,YAAYhP,KAAKgP,IACvBlK,EAAMmK,WAAWjP,KAAKiP,KAKxB,SAASmB,GAAQC,EAAOS,EAAQC,EAAexJ,SAKzCA,EAHF+f,qCAA0BN,OAGxBzf,EAFFggB,sCAA2BN,KAC3BtT,EACEpM,EADFoM,YAGE7C,EAAOrJ,OAAS3D,EAAQC,eAExByjB,SAAU,IACPnX,MAIHS,EAAOrJ,OAAS3D,EAAQsjB,0BAErB/W,GACHmX,SAAUjgB,EAASyJ,aAAawW,UAAY,QAI5C1W,EAAOrJ,OAAS3D,EAAQojB,YAAa,OAC/BrS,EAAiB/D,EAAjB+D,MAAOxW,EAAUyS,EAAVzS,MAETopB,WACGpX,EAAMmX,SAAS3S,GAClBxE,EAAMmX,SAAS3S,GACfyS,EAAwB3T,EAASkB,GAAOnI,sBAGzC2D,GACHmX,cACKnX,EAAMmX,iBACR3S,GAAQzO,EAAiB/H,EAAOopB,YAKnC3W,EAAOrJ,OAAS3D,EAAQqjB,aAAc,WAChCtS,EAA2B/D,EAA3B+D,MAAO5D,EAAoBH,EAApBG,SAAU5S,EAAUyS,EAAVzS,MAEnBopB,WACGpX,EAAMmX,SAAS3S,GAClBxE,EAAMmX,SAAS3S,GACfyS,EAAwB3T,EAASkB,GAAOnI,UAExCgb,YAC0C,MAAvCD,cAAaE,gBAAbF,IAAyBxW,IAC5BwW,EAAYE,UAAU1W,GACtBsW,EAAyB5T,EAASkB,GAAOnI,sBAG1C2D,GACHmX,cACKnX,EAAMmX,iBACR3S,QACI4S,GACHE,eACMF,EAAYE,WAAa,WAC5B1W,GAAW7K,EAAiB/H,EAAOqpB,gBAQhD,SAAS1Y,GAAYzH,SACkCA,EAA7CqgB,kCAA0BnU,EAAmBlM,EAAnBkM,KAAMlC,EAAahK,EAAbgK,SAElC2V,EAAcxgB,EAAMG,aACxB,SAACgO,EAAOxW,UACNkT,EAAS,CACP9J,KAAM3D,EAAQojB,YACdrS,QACAxW,YAEJ,CAACkT,IAGG4V,EAAezgB,EAAMG,aACzB,SAACgO,EAAO5D,EAAU5S,UAChBkT,EAAS,CACP9J,KAAM3D,EAAQqjB,aACdtS,QACA5D,WACA5S,YAEJ,CAACkT,IAGGsW,EAAuBthB,EAAaqhB,GAE1C1gB,GAAuB,WACjB2gB,KACFtW,EAAS,CAAE9J,KAAM3D,EAAQsjB,kBAE1B,CAAC3T,IAEJ1X,OAAOC,OAAOuL,EAAU,CACtB2f,cACAC,iBAIJ,SAASlY,GAAW3E,SAAO/C,eAKrBA,EAHF+f,qCAA0BN,OAGxBzf,EAFFggB,sCAA2BN,KAClBO,EACPjgB,EADF8I,MAASmX,SAGPld,EAAIoC,WACNpC,EAAI+F,eACKmX,EAASld,EAAIzB,IAChB2e,EAASld,EAAIzB,IACbye,EAAwBhd,EAAIoC,UAElCpC,EAAIwd,SAAW,mBACNvgB,EAAS2f,YAAY5c,EAAIzB,GAAIxC,IAGtCiE,EAAI4J,MAAMpU,SAAQ,YACXwK,EAAI+F,MAAMsX,YACbrd,EAAI+F,MAAMsX,UAAY,IAGxB1Z,EAAKoC,eACI/F,EAAI+F,MAAMsX,UAAU1Z,EAAKzG,OAAOqB,IACnCyB,EAAI+F,MAAMsX,UAAU1Z,EAAKzG,OAAOqB,IAChC0e,EAAyBjd,EAAIoC,UAEnCuB,EAAK6Z,SAAW,mBACPvgB,EAAS4f,aAAa7c,EAAIzB,GAAIoF,EAAKzG,OAAOqB,GAAIxC,QAvI7DghB,GAAYthB,WAAa,cClBzBjC,EAAQikB,iBAAmB,mBAC3BjkB,EAAQkkB,eAAiB,qBAEZC,GAAiB,YAC5BnjB,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAM+J,mBAAmB7O,MAAK,SAACoH,SAAQG,6BAC1BH,GAAMG,EAAS8I,MAAM6X,iBAElCpjB,EAAM8J,eAAe5O,KAAK4O,IAC1B9J,EAAMkK,YAAYhP,KAAKgP,KAKzB,SAASoB,GAAQC,EAAOS,EAAQC,EAAexJ,UACzCuJ,EAAOrJ,OAAS3D,EAAQC,QAExBmkB,YAAa,IACV7X,GAIHS,EAAOrJ,OAAS3D,EAAQikB,sBAErB1X,GACH6X,YAAa3gB,EAASyJ,aAAakX,aAAe,KAIlDpX,EAAOrJ,OAAS3D,EAAQkkB,oBAErB3X,GACH6X,YAAa9hB,EAAiB0K,EAAOoX,YAAa7X,EAAM6X,sBAK9D,SAAStZ,GACPrG,SAGa2f,IADX3gB,SACE8I,MAAS6X,gBAKRA,IAAgBA,EAAY9rB,cACxBmM,UAGH4f,YAAsBD,GAGtBE,YAAkB7f,GAGlB8f,EAAiB,oBAIfC,EAAiBH,EAAgBnK,QACjCuK,EAAaH,EAAYniB,WAAU,mBAAK4D,EAAEhB,KAAOyf,KACnDC,GAAc,GAChBF,EAAeroB,KAAKooB,EAAYtI,OAAOyI,EAAY,GAAG,KAJnDH,EAAYhsB,QAAU+rB,EAAgB/rB,4BASlCisB,EAAmBD,GAGhC,SAASpZ,GAAYzH,OACXgK,EAAahK,EAAbgK,SAERhK,EAASygB,eAAiBthB,EAAMG,aAC9B,mBACS0K,EAAS,CAAE9J,KAAM3D,EAAQkkB,eAAgBE,kBAElD,CAAC3W,IAlEL0W,GAAeliB,WAAa,iBCH5B/B,EAAcuP,aAGdzP,EAAQ0kB,oBAAsB,sBAC9B1kB,EAAQ2kB,eAAiB,iBACzB3kB,EAAQ4kB,mBAAqB,qBAC7B5kB,EAAQ6kB,YAAc,kBAETC,GAAmB,YAC9B9jB,EAAM+jB,gBAAkB,CAACC,IACzBhkB,EAAMwK,eAAetP,KAAK,CACxB2E,MAAO,CACLokB,SAAU,cAGdjkB,EAAMsJ,cAAcpO,KAAKoQ,IACzBtL,EAAMkK,YAAYhP,KAAKgP,IACvBlK,EAAMiK,4BAA4B/O,KAAK+O,KAGnC+Z,GAAyB,SAACrkB,SAAS8C,aAAUuL,WACzCvB,EAAahK,EAAbgK,SAEFyX,EAAgB,SAAC3e,EAAGyI,OACpBmW,KAAe,GACJ,eAAX5e,EAAE5C,KAAuB,IAEvB4C,EAAE6e,SAAW7e,EAAE6e,QAAQ9sB,OAAS,SAGpC6sB,KAAe,IAGXE,EA8NV,SAAwBrW,OAChBsW,EAAc,UACE,SAAhBC,EAAgB,GAChBvW,EAAOvK,SAAWuK,EAAOvK,QAAQnM,QACnC0W,EAAOvK,QAAQrH,IAAImoB,GAErBD,EAAYppB,KAAK8S,GAJG,CAMRA,GACPsW,EATT,CA/N2CtW,GACA5R,KAAI,kBAAK,CAAC2I,EAAEhB,GAAIgB,EAAEoJ,eAEnDqW,EAAUL,EAAe7V,KAAKmW,MAAMlf,EAAE6e,QAAQ,GAAGI,SAAWjf,EAAEif,QAE9DE,EAAe,YACnBjY,EAAS,CAAE9J,KAAM3D,EAAQ2kB,eAAgBa,QAASG,KAE9CC,EAAc,kBAAMnY,EAAS,CAAE9J,KAAM3D,EAAQ4kB,sBAE7CiB,EAAoB,CACxBC,MAAO,CACLC,UAAW,YACXC,YAAa,SAAAzf,GAAA,OAAKmf,EAAanf,EAAEif,UACjCS,QAAS,UACTC,UAAW,SAAA3f,GACTtD,SAASkjB,oBACP,YACAN,EAAkBC,MAAME,aAE1B/iB,SAASkjB,oBACP,UACAN,EAAkBC,MAAMI,WAE1BN,MAGJQ,MAAO,CACLL,UAAW,YACXC,YAAa,SAAAzf,GAAA,OACPA,EAAE8f,aACJ9f,EAAE+f,iBACF/f,EAAEggB,mBAEJb,EAAanf,EAAE6e,QAAQ,GAAGI,aAG5BS,QAAS,WACTC,UAAW,SAAA3f,GACTtD,SAASkjB,oBACPN,EAAkBO,MAAML,UACxBF,EAAkBO,MAAMJ,aAE1B/iB,SAASkjB,oBACPN,EAAkBO,MAAMH,QACxBJ,EAAkBO,MAAMJ,aAE1BJ,OAKAY,EAASrB,EACXU,EAAkBO,MAClBP,EAAkBC,MAChBW,IjB2LH,cAE2B,kBAArBld,EAAgC,OAAOA,MAE9Cmd,KAAY,QAERlsB,EAAU,sBAEZksB,MAAY,IAKhBC,OAAOC,iBAAiB,OAAQ,KAAMpsB,GACtCmsB,OAAOR,oBAAoB,OAAQ,KAAM3rB,GACzC,MAAOqsB,GACPH,KAAY,OAEdnd,EAAmBmd,EAlBd,IiB1LC,CAAEI,YAEN7jB,SAAS2jB,iBACPJ,EAAOT,UACPS,EAAOR,YACPS,GAEFxjB,SAAS2jB,iBACPJ,EAAOP,QACPO,EAAON,UACPO,GAGFhZ,EAAS,CACP9J,KAAM3D,EAAQ0kB,oBACdvX,SAAU6B,EAAOjK,GACjBgiB,YAAa/X,EAAOG,WACpBkW,iBACAG,mBAIG,CACL7kB,EACA,CACEqmB,YAAa,SAAAzgB,GAAA,OAAKA,EAAE8P,WAAa6O,EAAc3e,EAAGyI,IAClDiY,aAAc,SAAA1gB,GAAA,OAAKA,EAAE8P,WAAa6O,EAAc3e,EAAGyI,IACnDnO,MAAO,CACLwF,OAAQ,aAEV6gB,aACAzd,KAAM,eAOZ,SAAS6C,GAAQC,EAAOS,MAClBA,EAAOrJ,OAAS3D,EAAQC,eAExB0kB,eAAgB,CACdwC,aAAc,KAEb5a,MAIHS,EAAOrJ,OAAS3D,EAAQ6kB,wBAErBtY,GACHoY,eAAgB,CACdwC,aAAc,SAKhBna,EAAOrJ,OAAS3D,EAAQ0kB,oBAAqB,KACvCc,EAAmDxY,EAAnDwY,QAASrY,EAA0CH,EAA1CG,SAAU4Z,EAAgC/Z,EAAhC+Z,YAAa1B,EAAmBrY,EAAnBqY,2BAGnC9Y,GACHoY,oBACKpY,EAAMoY,gBACTyC,OAAQ5B,EACRH,iBACA0B,cACAM,iBAAkBla,SAKpBH,EAAOrJ,OAAS3D,EAAQ2kB,eAAgB,KAClCa,EAAYxY,EAAZwY,UACwCjZ,EAAMoY,eAA9CyC,WAAQL,gBAAa1B,mBAGvBiC,GADS9B,EAAU4B,GACSL,EAE5BQ,EAAkB,UAExBlC,EAAerpB,SAAQ,gBAAEwrB,OAAUC,OACjCF,EAAgBC,GAAYlY,KAAKE,IAC/BiY,EAAcA,EAAcH,EAC5B,WAKC/a,GACHoY,oBACKpY,EAAMoY,gBACTwC,kBACK5a,EAAMoY,eAAewC,gBACrBI,cAMPva,EAAOrJ,OAAS3D,EAAQ4kB,wBAErBrY,GACHoY,oBACKpY,EAAMoY,gBACTyC,OAAQ,KACRC,iBAAkB,gBAtE1BvC,GAAiB7iB,WAAa,mBA4E9B,IAAMgJ,GAA8B,gBAEhCuC,EAIE/J,EAJF+J,YACAka,EAGEjkB,EAHFikB,gBACAha,EAEEjK,EAFFiK,SACSiX,EACPlhB,EADF8I,MAASoY,eAGL/W,EAAcnL,EAAagB,GAEjC+J,EAAYxR,SAAQ,gBACZyT,EAAY1H,OAChBiH,EAAO0Y,yBAAmCjU,IAC1CiU,WAAmCjU,GAIrCzE,EAAOS,UAAYA,EACnBT,EAAO5O,MACLukB,EAAewC,aAAanY,EAAOjK,KACnCiK,EAAOnI,eACPmI,EAAO5O,MACT4O,EAAO2Y,WAAahD,EAAe0C,mBAAqBrY,EAAOjK,GAE3D0K,IACFT,EAAO+V,gBAAkBhkB,EAAe2M,IAAWqX,gBAAiB,CAClEthB,SAAUmK,IACVoB,gBAMR,SAAS9D,GAAYzH,OACX1B,EAAuD0B,EAAvD1B,QAAS0L,EAA8ChK,EAA9CgK,WAA8ChK,EAApCmkB,gCAAwBnjB,EAAYhB,EAAZgB,QAEnD3C,EAAkBC,EAAS,CAAC,qBAAsB,wBAE5C8lB,EAAqBplB,EAAamlB,GACxCxkB,GAAuB,WACjBykB,KACFpa,EAAS,CAAE9J,KAAM3D,EAAQ6kB,gBAE1B,CAACpgB,QAEEqjB,EAAgBllB,EAAMG,aAC1B,kBAAM0K,EAAS,CAAE9J,KAAM3D,EAAQ6kB,gBAC/B,CAACpX,IAGHxV,OAAOC,OAAOuL,EAAU,CACtBqkB,sBCzQEC,GAAa,CACjB9C,SAAU,WACV+C,IAAK,GAGMC,GAAoB,YAC/BjnB,EAAMqK,kBAAkBnP,KAAKgsB,IAC7BlnB,EAAM0K,YAAYxP,KAAKgsB,IACvBlnB,EAAMsK,oBAAoBpP,KAAKgsB,IAC/BlnB,EAAMuK,oBAAoBrP,KAAKgsB,IAE/BlnB,EAAMwK,eAAetP,MAAK,SAACyE,SAAS+C,iBAAa,CAC/C/C,EACA,CACEE,WACKknB,IACHrZ,KAAShL,EAAOuL,eAChB7O,MAAUsD,EAAOyL,uBAKvBnO,EAAM2K,aAAazP,MAAK,SAACyE,SAASwJ,eAAW,CAC3CxJ,EACA,CACEE,WACKknB,IACHrZ,KAASvE,EAAKzG,OAAOuL,eACrB7O,MAAU+J,EAAKzG,OAAOyL,uBAK5BnO,EAAMyK,eAAevP,MAAK,SAACyE,SAAS+C,iBAAa,CAC/C/C,EACA,CACEE,WACKknB,IACHrZ,KAAShL,EAAOuL,eAChB7O,MAAUsD,EAAOyL,wBAMzB8Y,GAAkBhmB,WAAa,oBAE/B,IAAMimB,GAAe,SAACvnB,WAAwB,CAC5CA,EACA,CACEE,MAAO,CACLokB,SAAU,WACV7kB,QALyBqD,SAKN0kB,2BCpDnBJ,GAAa,CACjBK,QAAS,eACTC,UAAW,cAGPH,GAAe,SAACvnB,WAAwB,CAC5CA,EACA,CACEE,MAAO,CACLunB,QAAS,OACThoB,QALyBqD,SAKN0kB,2BAKZG,GAAiB,YAC5BtnB,EAAM0K,YAAYxP,KAAKgsB,IACvBlnB,EAAMsK,oBAAoBpP,KAAKgsB,IAC/BlnB,EAAMuK,oBAAoBrP,KAAKgsB,IAE/BlnB,EAAMwK,eAAetP,MAAK,SAACyE,SAAS+C,iBAAa,CAC/C/C,EACA,CACEE,WACKknB,IACH3nB,MAAUsD,EAAOyL,uBAKvBnO,EAAM2K,aAAazP,MAAK,SAACyE,SAASwJ,eAAW,CAC3CxJ,EACA,CACEE,WACKknB,IACH3nB,MAAU+J,EAAKzG,OAAOyL,uBAK5BnO,EAAMyK,eAAevP,MAAK,SAACyE,SAAS+C,iBAAa,CAC/C/C,EACA,CACEE,WACKknB,IACH3nB,MAAUsD,EAAOyL,wBC7ClB,SAASoZ,GAAcvnB,GAC5BA,EAAMoK,cAAclP,KAAKkP,IACzBpK,EAAM0K,YAAYxP,KAAKgsB,IACvBlnB,EAAMsK,oBAAoBpP,KAAKgsB,IAC/BlnB,EAAMuK,oBAAoBrP,KAAKgsB,IAC/BlnB,EAAMwK,eAAetP,KAAKsP,IAC1BxK,EAAM2K,aAAazP,KAAKyP,IACxB3K,EAAMyK,eAAevP,KAAKuP,ID4C5B6c,GAAermB,WAAa,iBCzC5BsmB,GAActmB,WAAa,gBAE3B,IAAMmJ,GAAgB,SAACzK,WAAwB,CAC7CA,EACA,CACEE,MAAO,CACLR,WAJ0BoD,SAIJ0kB,2BAKtBD,GAAe,SAACvnB,WAAwB,CAC5CA,EACA,CACEE,MAAO,CACLunB,QAAS,OACTI,KAAM,WACNnoB,WANyBoD,SAMHglB,8BAKtBjd,GAAiB,SAAC7K,SAAS+C,iBAAa,CAC5C/C,EACA,CACEE,MAAO,CACLwnB,UAAW,aACXG,KAAM9kB,EAAO2L,eACN3L,EAAO2L,gCAEdhP,SAAaqD,EAAOwL,mBACpB9O,MAAUsD,EAAOyL,oBAKjBxD,GAAe,SAAChL,SAASwJ,eAAW,CACxCxJ,EACA,CACEE,MAAO,CACLwnB,UAAW,aACXG,KAASre,EAAKzG,OAAO2L,yBACrBhP,SAAa8J,EAAKzG,OAAOwL,mBACzB9O,MAAU+J,EAAKzG,OAAOyL,oBAKtB1D,GAAiB,SAAC9K,SAAS+C,iBAAa,CAC5C/C,EACA,CACEE,MAAO,CACLwnB,UAAW,aACXG,KAAM9kB,EAAO2L,eACN3L,EAAO2L,gCAEdhP,SAAaqD,EAAOwL,mBACpB9O,MAAUsD,EAAOyL,2TrB4FhB,SAA0BuZ,EAAWC,kBAAc,OAClDC,EAAchmB,EAAMC,OAAO,IAE3BgmB,EAAepmB,EAAaimB,GAC5BI,EAAiBrmB,EAAakmB,UAE7B/lB,EAAMG,uCACX,uBAAA9I,EAAA,+EAAAA,EAAA,OAAU+N,4CACH4gB,EAAY9lB,QAAQimB,UACvBH,EAAY9lB,QAAQimB,QAAU,IAAIC,SAAQ,SAACC,EAASC,GAClDN,EAAY9lB,QAAQmmB,QAAUA,EAC9BL,EAAY9lB,QAAQomB,OAASA,MAI7BN,EAAY9lB,QAAQqmB,SACtBC,aAAaR,EAAY9lB,QAAQqmB,SAGnCP,EAAY9lB,QAAQqmB,QAAUE,WAAWA,EAAXA,QAAW,0FAChCT,EAAY9lB,QAAQqmB,sBAEzBP,EAAY9lB,iBAAsB+lB,iBAAkB7gB,2BAAhCihB,wEAEpBL,EAAY9lB,QAAQomB,6CAEbN,EAAY9lB,QAAQimB,oFAE5BD,uBAEIF,EAAY9lB,QAAQimB,sGAxBlBhmB,GA0BX,CAAC8lB,EAAcC,wRIvIK,SAACnoB,8BAAUoB,uDAEjCpB,EAAQ0N,GAAc1N,GAGtBoB,GAAWkK,UAAwBlK,OAG/BunB,EAAc1mB,EAAMC,OAAO,IAGzB+K,EAAcnL,EAAa6mB,EAAYxmB,SAG7C7K,OAAOC,OAAO0V,SACTjN,GACHoB,UACAf,MAAOoJ,OAITrI,EAAQiH,OAAOsI,SAAStV,SAAQ,YAC9BoG,EAAOwL,IAAc5M,cAIjB0M,EAAWjL,EAAamL,IAAc5M,OAC5C4M,IAAcF,SAAWA,SAClBE,IAAc5M,MAGrB/I,OAAOC,OACL0V,IACApM,EAAYkM,IAAWrD,WAAYgE,GAAc1N,WAY/CiN,IARF+B,SACS4Z,IAAT9kB,QACAyI,iBACAhN,kBACAoO,eACAC,aACAC,iBACAjE,uBAIIif,EAAkB/mB,EAAa+L,GAG/BlC,EAAU1J,EAAMG,aACpB,SAACwJ,EAAOS,OAEDA,EAAOrJ,WACVE,QAAQC,KAAK,CAAEkJ,WACT,IAAIjJ,MAAM,qCAIX,UACF2J,IAAWpD,cAEVhJ,MAAMC,QAAQioB,KACdA,IACA,CAACA,MACLzuB,QACA,SAAC0uB,EAAGC,UAAYA,EAAQD,EAAGzc,EAAQT,EAAOqB,MAAkB6b,IAC5Dld,KAGJ,CAACmB,EAAU8b,EAAiB5b,MAIGhL,EAAM+mB,WAAWrd,UAAoB,kBACpEA,EAAQY,EAAc,CAAEvJ,KAAM3D,EAAQC,UADjC2pB,OAAcnc,OAKflB,EAAQ/K,YACRkM,IAAWnD,oBAAoBA,IACnCqf,EACA,CAAEnmB,SAAUmK,MAGd3V,OAAOC,OAAO0V,IAAe,CAC3BrB,QACAkB,iBAIIhJ,EAAU7B,EAAM2O,SACpB,kBACE/M,EACEhD,EAAYkM,IAAWjJ,QAAS8kB,EAAa,CAC3C9lB,SAAUmK,UAIdF,EACAE,EACA2b,UAEG/nB,EAAYkM,IAAWlD,YAAa,GAAI,CAAE/G,SAAUmK,QAG3DA,IAAcnJ,QAAUA,MAIpBsC,EAAanE,EAAM2O,SACrB,kBACE/P,EAAYkM,IAAW3G,WAAYlC,EAAeJ,GAAU,CAC1DhB,SAAUmK,MACTxQ,IAAIwH,MAEPH,EACAiJ,EACAE,UAEGpM,EAAYkM,IAAWjD,eAAgB,GAAI,CAC5ChH,SAAUmK,QAIhBA,IAAc7G,WAAaA,QAGQnE,EAAM2O,SAAQ,mBAC3ClJ,EAAO,GACPuH,EAAW,GACTC,EAAW,GAEXga,YAAsB9iB,GAErB8iB,EAAgBvxB,QAAQ,KACvBoL,EAASmmB,EAAgB3P,QAC/BxK,GAAoB,CAClBC,OACAtH,OACAuH,WACAC,WACAnM,SACA6K,WACAD,aACAwB,iBAAkBpC,IAAWhD,YAC7BkD,sBAIG,CAACvF,EAAMuH,EAAUC,KACvB,CAAC9I,EAAY4I,EAAMpB,EAAUD,EAAYZ,EAAUE,IAvB/CvF,OAAMuH,OAAUC,OAyBvB5X,OAAOC,OAAO0V,IAAe,CAC3BvF,OACAyhB,sBAAiBzhB,GACjBuH,WACAC,aAIFlO,EAAU+L,IAAW7C,qBAAsB+C,SAKvC9C,EAAiBlI,EAAM2O,SACzB,kBACE/P,EAAYkM,IAAW5C,eAAgB/D,EAAY,CACjDtD,SAAUmK,MACTxQ,KAAI,mBAAKsJ,EAAeX,EAAG7F,SAE9BwN,EACA3G,EACA6G,EACA1N,UAEGsB,EAAYkM,IAAW3C,mBAAoB,GAAI,CAChDtH,SAAUmK,QAMhB7G,EAAanE,EAAM2O,SAAQ,eACnB9M,YAAcqG,UAEpB/D,EAAW/K,SAAQ,YACZyI,EAAQqO,MAAK,mBAAK/M,EAAEhB,KAAOrB,EAAOqB,OACrCN,EAAQvI,KAAKwH,MAIVe,IACN,CAACsC,EAAY+D,IAChB8C,IAAc7G,WAAaA,MAkBrBC,EAAepE,EAAM2O,SACzB,kBACE/P,EACEkM,IAAW1G,aACXF,EAAiBgE,EAAgB5K,GACjC0N,QAGFF,EACA5C,EACA5K,EACA0N,UAEGpM,EAAYkM,IAAW1C,iBAAkB,GAAI,CAC9CvH,SAAUmK,QAIhBA,IAAc5G,aAAeA,MAGvBK,EAAUzE,EAAM2O,SACpB,kBAAOvK,EAAa1O,OAAS0O,EAAa,GAAGK,QAAU,KACvD,CAACL,IAEH4G,IAAcvG,QAAUA,EAGxBuG,IAAcJ,YAAcxG,EAAajM,QACvC,SAACgvB,EAAK3iB,mBAAoB2iB,EAAQ3iB,EAAYC,WAC9C,IAGF1F,EAAU+L,IAAWzC,4BAA6B2C,SAG5Coc,EAAoBlf,EACvB9B,QAAO,mBAAKjD,EAAE6G,aACdxP,KAAI,mBAAK2I,EAAEhB,MACXjI,OACAmJ,KAAK,KAER6E,EAAiBlI,EAAM2O,SACrB,kBAAMzG,EAAe9B,QAAO,mBAAKjD,EAAE6G,gBAElC9B,EAAgBkf,IAEnBpc,IAAc9C,eAAiBA,QAO3B2D,GAAsBpH,GAHxBohB,OACAN,OACA8B,cAGFrc,IAAc6a,qBAAuBA,EACrC7a,IAAcua,kBAAoBA,EAClCva,IAAcqc,qBAAuBA,EAErCtoB,EAAU+L,IAAWxC,YAAa0C,eAI7BA,IAAcJ,YAAgBI,IAAc7G,YAAY/K,SAC3D,YAEE0H,EAAOwmB,OAAS1mB,EAAaoK,IAAelK,GAG5CA,EAAO8H,eAAiBzK,EAAe2M,IAAWlC,eAAgB,CAChE/H,SAAUmK,IACVlK,WAIFA,EAAO+H,eAAiB1K,EAAe2M,IAAWjC,eAAgB,CAChEhI,SAAUmK,IACVlK,cAKNkK,IAAc5G,aAAepE,EAAM2O,SACjC,kBACEvK,EAAagC,QAAO,SAAC5B,EAAahP,UAEhCgP,EAAYC,QAAUD,EAAYC,QAAQ2B,QAAO,mBAQ3CtF,EAAO2D,QAPK,SAAVc,EAAU,UACdd,EAAQ2B,QAAO,mBACTtF,EAAO2D,QACFc,EAAQzE,EAAO2D,SAEjB3D,EAAOkJ,aACbtU,OANW,CAQCoL,EAAO2D,SAEjB3D,EAAOkJ,eAIZxF,EAAYC,QAAQ/O,SACtB8O,EAAYkE,oBAAsBvK,EAChC2M,IAAWpC,oBACX,CAAE7H,SAAUmK,IAAexG,cAAalM,MAAO9C,IAGjDgP,EAAYmE,oBAAsBxK,EAChC2M,IAAWnC,oBACX,CAAE9H,SAAUmK,IAAexG,cAAalM,MAAO9C,aAQvD,CAAC4O,EAAc4G,EAAaF,IAG9BE,IAAcuc,aAAe,UAAIvc,IAAc5G,cAAcW,UAK7DiG,IAAczC,WAAavI,EAAMG,aAC/B,YACEyD,EAAIkF,YAAc3K,EAAe2M,IAAWhC,YAAa,CACvDjI,SAAUmK,IACVpH,QAIFA,EAAI8S,SAAWvS,EAAW3J,KAAI,gBACtB7C,EAAQiM,EAAI/K,OAAOiI,EAAOqB,IAE1BoF,EAAO,CACXzG,SACA8C,MACAjM,gBAIF4P,EAAKwB,aAAe5K,EAAe2M,IAAW/B,aAAc,CAC1DlI,SAAUmK,IACVzD,SAIFA,EAAK+f,OAAS1mB,EAAaoK,IAAelK,EAAQ,CAChD8C,MACA2D,OACA5P,UAGK4P,KAGT3D,EAAI4J,MAAQtF,EAAe1N,KAAI,mBAC7BoJ,EAAI8S,SAASxG,MAAK,mBAAQ3I,EAAKzG,OAAOqB,KAAOrB,EAAOqB,SAItDpD,EAAU+L,IAAWvC,WAAY3E,EAAK,CAAE/C,SAAUmK,QAEpD,CAACF,EAAUE,EAAa7G,EAAY+D,IAGtC8C,IAAcxC,cAAgBrK,EAAe2M,IAAWtC,cAAe,CACrE3H,SAAUmK,MAGZA,IAAcvC,kBAAoBtK,EAChC2M,IAAWrC,kBACX,CACE5H,SAAUmK,MAIdjM,EAAU+L,IAAW9B,iBAAkBgC,KAEhCA,sD,4BkBpcT,IAAIwc,EAAe,CACleAAM,IACN,eAAM,IACN,aAAM,IACN,aAAM,IACN,UAAM,IACN,UAAM,IACN,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,UAAM,IACN,SAAK,IACL,SAAK,IACL,SAAK,IACL,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,eAAM,IACN,eAAM,IACN,SAAK,IACL,SAAK,IACL,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,eAAM,IACN,eAAM,IACN,SAAK,IACL,SAAK,IACL,UAAM,IACN,UAAM,IACN,eAAM,IACN,eAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,UAAM,KAGHC,EAAQpyB,OAAOyC,KAAK0vB,GAAcnkB,KAAK,KACvCqkB,EAAa,IAAIC,OAAOF,EAAO,KAC/BG,EAAc,IAAID,OAAOF,EAAO,IAEhCvqB,EAAgB,SAASlB,GAC5B,OAAOA,EAAOoH,QAAQskB,GAAY,SAASG,GAC1C,OAAOL,EAAaK,OAQtB5yB,EAAOC,QAAUgI,EACjBjI,EAAOC,QAAQ4yB,IALE,SAAS9rB,GACzB,QAASA,EAAO6rB,MAAMD,IAKvB3yB,EAAOC,QAAQ6yB,OAAS7qB","file":"static/js/1.dcb8724d.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport removeAccents from 'remove-accents';\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 9,\n  EQUAL: 8,\n  STARTS_WITH: 7,\n  WORD_STARTS_WITH: 6,\n  STRING_CASE: 5,\n  STRING_CASE_ACRONYM: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\nvar caseRankings = {\n  CAMEL: 0.8,\n  PASCAL: 0.6,\n  KEBAB: 0.4,\n  SNAKE: 0.2,\n  NO_CASE: 0\n};\nmatchSorter.rankings = rankings;\nmatchSorter.caseRankings = caseRankings;\n\nvar defaultBaseSortFn = function (a, b) {\n  return String(a.rankedItem).localeCompare(b.rankedItem);\n};\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\n\n\nfunction matchSorter(items, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // not performing any search/sort if value(search term) is empty\n  if (!value) return items;\n  var _options = options,\n      keys = _options.keys,\n      _options$threshold = _options.threshold,\n      threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold,\n      _options$baseSort = _options.baseSort,\n      baseSort = _options$baseSort === void 0 ? defaultBaseSortFn : _options$baseSort;\n  var matchedItems = items.reduce(reduceItemsToRanked, []);\n  return matchedItems.sort(function (a, b) {\n    return sortRankedItems(a, b, baseSort);\n  }).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n\n  function reduceItemsToRanked(matches, item, index) {\n    var _getHighestRanking = getHighestRanking(item, keys, value, options),\n        rankedItem = _getHighestRanking.rankedItem,\n        rank = _getHighestRanking.rank,\n        keyIndex = _getHighestRanking.keyIndex,\n        _getHighestRanking$ke = _getHighestRanking.keyThreshold,\n        keyThreshold = _getHighestRanking$ke === void 0 ? threshold : _getHighestRanking$ke;\n\n    if (rank >= keyThreshold) {\n      matches.push({\n        rankedItem: rankedItem,\n        item: item,\n        rank: rank,\n        index: index,\n        keyIndex: keyIndex\n      });\n    }\n\n    return matches;\n  }\n}\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\n\n\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedItem: item,\n      rank: getMatchRanking(item, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        rankedItem = _ref2.rankedItem,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n    var newRank = getMatchRanking(itemValue, value, options);\n    var newRankedItem = rankedItem;\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n      newRankedItem = itemValue;\n    }\n\n    return {\n      rankedItem: newRankedItem,\n      rank: rank,\n      keyIndex: keyIndex,\n      keyThreshold: keyThreshold\n    };\n  }, {\n    rank: rankings.NO_MATCH,\n    keyIndex: -1,\n    keyThreshold: options.threshold\n  });\n}\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\n\n\nfunction getMatchRanking(testString, stringToRank, options) {\n  /* eslint complexity:[2, 12] */\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  } // case sensitive equals\n\n\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  }\n\n  var caseRank = getCaseRanking(testString);\n  var isPartial = isPartialOfCase(testString, stringToRank, caseRank);\n  var isCasedAcronym = isCaseAcronym(testString, stringToRank, caseRank); // Lower casing before further comparison\n\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n  if (testString === stringToRank) {\n    return rankings.EQUAL + caseRank;\n  } // starts with\n\n\n  if (testString.indexOf(stringToRank) === 0) {\n    return rankings.STARTS_WITH + caseRank;\n  } // word starts with\n\n\n  if (testString.indexOf(\" \" + stringToRank) !== -1) {\n    return rankings.WORD_STARTS_WITH + caseRank;\n  } // is a part inside a cased string\n\n\n  if (isPartial) {\n    return rankings.STRING_CASE + caseRank;\n  } // is acronym for a cased string\n\n\n  if (caseRank > 0 && isCasedAcronym) {\n    return rankings.STRING_CASE_ACRONYM + caseRank;\n  } // contains\n\n\n  if (testString.indexOf(stringToRank) !== -1) {\n    return rankings.CONTAINS + caseRank;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  } // acronym\n\n\n  if (getAcronym(testString).indexOf(stringToRank) !== -1) {\n    return rankings.ACRONYM + caseRank;\n  } // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n  return getClosenessRanking(testString, stringToRank);\n}\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\n\n\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n/**\n * Returns a score base on the case of the testString\n * @param {String} testString - the string to test against\n * @returns {Number} the number of the ranking,\n * based on the case between 0 and 1 for how the testString matches the case\n */\n\n\nfunction getCaseRanking(testString) {\n  var containsUpperCase = testString.toLowerCase() !== testString;\n  var containsDash = testString.indexOf('-') >= 0;\n  var containsUnderscore = testString.indexOf('_') >= 0;\n\n  if (!containsUpperCase && !containsUnderscore && containsDash) {\n    return caseRankings.KEBAB;\n  }\n\n  if (!containsUpperCase && containsUnderscore && !containsDash) {\n    return caseRankings.SNAKE;\n  }\n\n  if (containsUpperCase && !containsDash && !containsUnderscore) {\n    var startsWithUpperCase = testString[0].toUpperCase() === testString[0];\n\n    if (startsWithUpperCase) {\n      return caseRankings.PASCAL;\n    }\n\n    return caseRankings.CAMEL;\n  }\n\n  return caseRankings.NO_CASE;\n}\n/**\n * Returns whether the stringToRank is one of the case parts in the testString (works with any string case)\n * @example\n * // returns true\n * isPartialOfCase('helloWorld', 'world', caseRankings.CAMEL)\n * @example\n * // returns false\n * isPartialOfCase('helloWorld', 'oworl', caseRankings.CAMEL)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Number} caseRanking - the ranking score based on case of testString\n * @returns {Boolean} whether the stringToRank is one of the case parts in the testString\n */\n\n\nfunction isPartialOfCase(testString, stringToRank, caseRanking) {\n  var testIndex = testString.toLowerCase().indexOf(stringToRank.toLowerCase());\n\n  switch (caseRanking) {\n    case caseRankings.SNAKE:\n      return testString[testIndex - 1] === '_';\n\n    case caseRankings.KEBAB:\n      return testString[testIndex - 1] === '-';\n\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      return testIndex !== -1 && testString[testIndex] === testString[testIndex].toUpperCase();\n\n    default:\n      return false;\n  }\n}\n/**\n * Check if stringToRank is an acronym for a partial case\n * @example\n * // returns true\n * isCaseAcronym('super_duper_file', 'sdf', caseRankings.SNAKE)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the acronym to test\n * @param {Number} caseRank - the ranking of the case\n * @returns {Boolean} whether the stringToRank is an acronym for the testString\n */\n\n\nfunction isCaseAcronym(testString, stringToRank, caseRank) {\n  var splitValue = null;\n\n  switch (caseRank) {\n    case caseRankings.SNAKE:\n      splitValue = '_';\n      break;\n\n    case caseRankings.KEBAB:\n      splitValue = '-';\n      break;\n\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      splitValue = /(?=[A-Z])/;\n      break;\n\n    default:\n      splitValue = null;\n  }\n\n  var splitTestString = testString.split(splitValue);\n  return stringToRank.toLowerCase().split('').reduce(function (correct, char, charIndex) {\n    var splitItem = splitTestString[charIndex];\n    return correct && splitItem && splitItem[0].toLowerCase() === char;\n  }, true);\n}\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\n\n\nfunction getClosenessRanking(testString, stringToRank) {\n  var matchingInOrderCharCount = 0;\n  var charNumber = 0;\n\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index; j < string.length; j++) {\n      var stringChar = string[j];\n\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  function getRanking(spread) {\n    var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    var ranking = rankings.MATCHES + inOrderPercentage * (1 / spread);\n    return ranking;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n\n  charNumber = firstIndex;\n\n  for (var i = 1; i < stringToRank.length; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n */\n\n\nfunction sortRankedItems(a, b, baseSort) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRank = a.rank,\n      aKeyIndex = a.keyIndex;\n  var bRank = b.rank,\n      bKeyIndex = b.keyIndex;\n\n  if (aRank === bRank) {\n    if (aKeyIndex === bKeyIndex) {\n      // use the base sort function as a tie-breaker\n      return baseSort(a, b);\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\n\n\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n  value = \"\" + value; // toString\n\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n\n  return value;\n}\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\n\n\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key;\n  }\n\n  var value;\n\n  if (typeof key === 'function') {\n    value = key(item); // eslint-disable-next-line no-negated-condition\n  } else if (key.indexOf('.') !== -1) {\n    // handle nested keys\n    value = key.split('.').reduce(function (itemObj, nestedKey) {\n      return itemObj ? itemObj[nestedKey] : null;\n    }, item);\n  } else {\n    value = item[key];\n  } // concat because `value` can be a string or an array\n  // eslint-disable-next-line\n\n\n  return value != null ? [].concat(value) : null;\n}\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param {Object} item - the item from which the values will be retrieved\n * @param {Array} keys - the keys to use to retrieve the values\n * @return {Array} objects with {itemValue, attributes}\n */\n\n\nfunction getAllValuesToRank(item, keys) {\n  return keys.reduce(function (allVals, key) {\n    var values = getItemValues(item, key);\n\n    if (values) {\n      values.forEach(function (itemValue) {\n        allVals.push({\n          itemValue: itemValue,\n          attributes: getKeyAttributes(key)\n        });\n      });\n    }\n\n    return allVals;\n  }, []);\n}\n/**\n * Gets all the attributes for the given key\n * @param {Object|String} key - the key from which the attributes will be retrieved\n * @return {Object} object containing the key's attributes\n */\n\n\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    key = {\n      key: key\n    };\n  }\n\n  return _extends({\n    maxRanking: Infinity,\n    minRanking: -Infinity\n  }, key);\n}\n\nexport default matchSorter;\nexport { rankings };\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultColumn = {\n  Cell: ({ value = '' }) => value,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import React from 'react'\nimport { defaultColumn } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: () => <>&nbsp;</>,\n    Footer: () => <>&nbsp;</>,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(allColumns, defaultColumn) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(originalRow, rowIndex, row)\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return (min + max) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n  \n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Get the columnValues to aggregate\n        const groupedValues = groupedRows.map(row => row.values[column.id])\n\n        // Get the columnValues to aggregate\n        const leafValues = leafRows.map(row => {\n          let columnValue = row.values[column.id]\n\n          if (!depth && column.aggregateValue) {\n            const aggregateValueFn =\n              typeof column.aggregateValue === 'function'\n                ? column.aggregateValue\n                : userAggregations[column.aggregateValue] ||\n                  aggregations[column.aggregateValue]\n\n            if (!aggregateValueFn) {\n              console.info({ column })\n              throw new Error(\n                `React Table: Invalid column.aggregateValue option for column listed above`\n              )\n            }\n\n            columnValue = aggregateValueFn(columnValue, row, column)\n          }\n          return columnValue\n        })\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && row.canExpand\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length < 1) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true } = instance\n\n    // Join the ids of deep rows\n    // to make a key, then manage all of the keys\n    // in a flat object\n    const row = rowsById[id]\n    const isSelected = row.isSelected\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && row.subRows) {\n        return row.subRows.forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  if (row.subRows && row.subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    row.subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = originalRow => ({})\nconst defaultInitialCellStateAccessor = originalRow => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row.original) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row.original)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(row.original)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'ew-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n"],"sourceRoot":""}