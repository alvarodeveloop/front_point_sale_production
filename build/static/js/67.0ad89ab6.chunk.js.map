{"version":3,"sources":["pages/InvoiceBondPage.jsx"],"names":["bondColumns","connect","state","id_branch_office","enterpriseSucursal","configGeneral","configs","config","configStore","props","useState","invoice","setInvoice","bonds","setBonds","typeBond","setTypeBond","isShow","setIsShow","disableButton","validated","setValidated","notify_client","amount","id_type_bond","detail","date_payment_bond","moment","tz","format","formBond","setFormBond","displayLoading","setDisplayLoading","count","id_branch","useEffect","fetchData","setTimeout","history","replace","is_syncronized","toast","error","fetchTypeBond","useMemo","Header","accessor","props1","type_bond","name","showPriceWithDecimals","Cell","variant","className","simbolo_moneda","cell","row","original","status","size","id","title","block","Item","onClick","modifyRegisterBond","deleteRegisterBond","match","params","promise","axios","get","API_URL","Promise","all","then","result","data","catch","err","tokenExpired","handleModalBond","onChange","e","target","checked","value","datos","confirmAlert","customUI","onClose","confirmDeleteRegister","delete","success","fluid","sm","md","lg","folio_bill","type","length","wb","xlsx","book_new","bodyTable","Props","Title","ref","Subject","Author","CreatedDate","SheetNames","push","forEach","item","i","ws","aoa_to_sheet","Sheets","wbout","bookType","s2ab","FileSaver","saveAs","Blob","disabled","responseType","window","open","name_pdf","columns","show","onHide","aria-labelledby","centered","closeButton","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","objectPost","Object","assign","id_invoice","put","post","noValidate","Body","label","required","messageErrors","cols","handleChange","map","v","key","step","Footer"],"mappings":"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","file":"static/js/67.0ad89ab6.chunk.js","sourcesContent":["import React, {useState, useEffect, useMemo} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {API_URL} from 'utils/constants'\r\nimport 'styles/components/modalComponents.css'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  Badge,\r\n  Modal,\r\n  Form,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Image\r\n} from 'react-bootstrap'\r\nimport InvoiceBondComponent from 'components/InvoiceBondComponent'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport {FaPlusCircle, FaRegFileCode , FaRegFilePdf} from 'react-icons/fa'\r\nimport InputField from 'components/input/InputComponent'\r\nimport * as moment from 'moment-timezone'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\n\r\nimport {showPriceWithDecimals, s2ab} from 'utils/functions'\r\nimport * as xlsx from 'xlsx'\r\nimport Table from 'components/Table'\r\nimport FileSaver from 'file-saver'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nlet bondColumns = []\r\n\r\nconst InvoiceBondPage = (props) => {\r\n  const [invoice,setInvoice] = useState(null)\r\n  const [bonds, setBonds] = useState([])\r\n  const [typeBond, setTypeBond] = useState([])\r\n  const [isShow, setIsShow] = useState(false)\r\n  const [disableButton, setDisableButton] = useState(false)\r\n  const [validated, setValidated] = useState(false)\r\n  const [formBond, setFormBond] = useState({\r\n    notify_client: false,\r\n    amount: \"\",\r\n    id_type_bond: \"\",\r\n    detail: \"\",\r\n    date_payment_bond: moment().tz('America/Santiago').format('YYYY-MM-DD')\r\n  })\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n\r\n  let count = 0\r\n  let id_branch = null\r\n\r\n  useEffect(() => {\r\n    if(count === 0){\r\n      id_branch = props.id_branch_office\r\n      count++\r\n      fetchData()\r\n    }else{\r\n      if(id_branch !== props.id_branch_office){\r\n        setTimeout(function () {\r\n          props.history.replace('/invoice/invoice_search')\r\n        }, 1500);\r\n      }else{\r\n        count++\r\n        fetchData()\r\n      }\r\n    }\r\n  },[props.id_branch_office])\r\n\r\n  useEffect(() => {\r\n    if(!props.configStore || !props.configGeneral){\r\n      if(!props.configStore){\r\n        toast.error('Debe hacer su configuración de tienda o seleccionar una sucursal para usar este módulo')\r\n        setTimeout(function () {\r\n          props.history.replace('/dashboard')\r\n        }, 3000);\r\n      }else if(!props.configGeneral){\r\n        toast.error('Debe hacer su configuración general para usar este módulo')\r\n        setTimeout(function () {\r\n          props.history.replace('/dashboard')\r\n        }, 3000);\r\n      }\r\n    }else{\r\n      let config_general = props.configGeneral\r\n      if(!config_general.is_syncronized){\r\n        toast.error('Su cuenta no esta sincronizada con el SII, complete su configuración general para usar este módulo')\r\n        setTimeout(function () {\r\n          props.history.replace('/dashboard')\r\n        }, 3000);\r\n        return\r\n      }else{\r\n        fetchTypeBond()\r\n      }\r\n    }\r\n  },[])\r\n\r\n  useMemo(() => {\r\n    bondColumns = [\r\n      {\r\n        Header: 'Fecha',\r\n        accessor: props1 => [moment(props1.date_payment_bond).format('DD-MM-YYYY')],\r\n      },\r\n      {\r\n        Header: 'Detalle',\r\n        accessor: 'detail',\r\n      },\r\n      {\r\n        Header: 'Tipo de Abono',\r\n        accessor: props1 => [props1.type_bond.name],\r\n      },\r\n      {\r\n        Header: 'Monto',\r\n        accessor: props1 => [showPriceWithDecimals(props.configGeneral,props1.amount)],\r\n        Cell : props1 => {\r\n          return <Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.amount)}</Badge>\r\n        }\r\n      },\r\n      {\r\n        Header: 'Acciones',\r\n        Cell: props1 => {\r\n          const original = props1.cell.row.original\r\n          if(invoice && invoice.status === 2){\r\n            return ''\r\n          }else{\r\n            return(\r\n              <DropdownButton size=\"sm\" id={'drop'+original.id} title=\"Seleccione\"  block=\"true\">\r\n                <Dropdown.Item onClick={() => modifyRegisterBond(original)}>Modificar</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => deleteRegisterBond(original)}>Eliminar</Dropdown.Item>\r\n              </DropdownButton>\r\n            )\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  },[invoice])\r\n\r\n  const fetchData = () => {\r\n    const id = props.match.params.id\r\n    const promise = [\r\n      axios.get(API_URL+'invoice/'+id),\r\n    ]\r\n    Promise.all(promise).then(result => {\r\n      setInvoice(result[0].data)\r\n      setBonds(result[0].data.bonds)\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n       props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const fetchTypeBond = () => {\r\n    axios.get(API_URL+'type_bond').then(result => {\r\n        setTypeBond(result.data)\r\n      }).catch(err => {\r\n        props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const handleSubmitBold = e => {\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let objectPost = Object.assign({},formBond,{\r\n      id_invoice: props.match.params.id\r\n    })\r\n\r\n    if(objectPost.id){\r\n      axios.put(API_URL+'invoice_bonds/'+objectPost.id,objectPost).then(result => {\r\n        toast.success('Abono modificado con éxito')\r\n        handleModalBond()\r\n        fetchData()\r\n      }).catch(err => {\r\n        props.tokenExpired(err)\r\n      })\r\n    }else{\r\n      axios.post(API_URL+'invoice_bonds',objectPost).then(result => {\r\n        toast.success('Abono agregado con éxito')\r\n        handleModalBond()\r\n        fetchData()\r\n      }).catch(err => {\r\n        props.tokenExpired(err)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleModalBond = () => {\r\n    if(isShow){\r\n      setFormBond({\r\n        notify_client: false,\r\n        amount: \"\",\r\n        id_type_bond: \"\",\r\n        detail: \"\",\r\n        date_payment_bond: moment().tz('America/Santiago').format('YYYY-MM-DD')\r\n      })\r\n    }\r\n    setIsShow(!isShow)\r\n\r\n  }\r\n\r\n  const onChange = e => {\r\n    setFormBond({...formBond, [e.target.name] : e.target.name === \"notify_client\" ? e.target.checked : e.target.value})\r\n  }\r\n\r\n  const modifyRegisterBond = datos => {\r\n    setFormBond({\r\n      notify_client: datos.notify_client,\r\n      amount: datos.amount,\r\n      id_type_bond: datos.id_type_bond,\r\n      detail: datos.detail,\r\n      date_payment_bond: moment(datos.date_payment_bond).tz('America/Santiago').format('YYYY-MM-DD'),\r\n      id: datos.id\r\n    })\r\n\r\n    handleModalBond()\r\n  }\r\n\r\n  const deleteRegisterBond = datos => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui-edit'>\r\n            <h1>¿Esta seguro?</h1>\r\n            <p className=\"font-alert\">¿Desea realmente borrar este registro?</p>\r\n            <button className=\"button-alert\"\r\n              onClick={() => {\r\n                confirmDeleteRegister(datos.id);\r\n                onClose();\r\n              }}\r\n            >\r\n              Si, Aceptar\r\n            </button>\r\n            <button className=\"button-alert\" onClick={onClose}>No</button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  const confirmDeleteRegister = id  => {\r\n    setDisplayLoading(true)\r\n    axios.delete(API_URL+'invoice_bonds/'+id).then(result => {\r\n     toast.success('Abono eliminado con éxito')\r\n     fetchData()\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const exportToExcel = () => {\r\n\r\n    if(bonds.length < 1){\r\n      toast.error('Error, no hay abonos para realizar el excel')\r\n    }else{\r\n      setDisplayLoading(true)\r\n      let wb = xlsx.utils.book_new()\r\n      let bodyTable = [['Fecha','Detalle','Tipo de Abono','Monto']]\r\n\r\n      wb.Props = {\r\n        Title: \"Pagos abonados de la factura \"+invoice.ref,\r\n        Subject: \"Exportación de Data\",\r\n        Author: 'Aidy tecnology',\r\n        CreatedDate: moment().format('YYYY-MM-DD')\r\n      };\r\n      wb.SheetNames.push(\"Pagos\");\r\n\r\n      bonds.forEach((item, i) => {\r\n        bodyTable.push([\r\n          moment(item.date_payment_bond).format('DD-MM-YYYY'),\r\n          item.detail,\r\n          item.type_bond.name,\r\n          showPriceWithDecimals(props.configGeneral,item.amount)\r\n        ])\r\n      });\r\n\r\n      var ws = xlsx.utils.aoa_to_sheet(bodyTable);\r\n      wb.Sheets[\"Pagos\"] = ws;\r\n      var wbout = xlsx.write(wb, {bookType:'xlsx',  type: 'binary'});\r\n      let datos = s2ab(wbout)\r\n      FileSaver.saveAs(new Blob([datos],{type:\"application/octet-stream\"}), 'Abonos de la factura '+invoice.ref+\" fecha: \"+moment().tz('America/Santiago').format('DD-MM-YYYY')+'.xlsx')\r\n      setDisplayLoading(false)\r\n    }\r\n\r\n  }\r\n\r\n  const exportToPdf = () => {\r\n    if(bonds.length > 0){\r\n      setDisplayLoading(true)\r\n      axios.get(API_URL+'print_invoice_bonds/'+props.match.params.id,{\r\n        responseType: 'blob'\r\n      }).then(result => {\r\n        FileSaver.saveAs(result.data,'Informe de los pagos de la factura: '+invoice.ref+' fecha: '+moment().tz('America/Santiago').format('DD-MM-YYYY')+\".pdf\")\r\n        setDisplayLoading(false)\r\n      }).catch(err => {\r\n        setDisplayLoading(false)\r\n        props.tokenExpired(err)\r\n      })\r\n    }else{\r\n      toast.error('No hay pagos para realizar el informe')\r\n    }\r\n  }\r\n\r\n  const goToInvoice = () => {\r\n    props.history.replace('/invoice/invoice_search')\r\n  }\r\n\r\n  const printInvoice = () => {\r\n    window.open(invoice.name_pdf,\"_blank\")\r\n    //let route = API_URL+'get_invoice_pdf/'+invoice.ref_api\r\n    /*axios.get(route,{responseType: \"arraybuffer\"}).then(result => {\r\n      const blob = new Blob([result.data],{type : 'application/pdf'})\r\n      const url  = window.URL.createObjectURL(blob);\r\n      window.open(url,\"_target\")\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err,'aqui');\r\n        toast.error('Error, contacte con soporte')\r\n      }\r\n    })*/\r\n\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col sm={7} md={7} lg={7}>\r\n          <h4 className=\"title_principal\">Historial de Pagos de la Factura {invoice  ? (<Badge variant=\"danger\" className=\"font-badge\">{invoice.folio_bill}</Badge>) : ''}</h4>\r\n        </Col>\r\n        <Col sm={5} md={5} lg={5}>\r\n          <Button variant=\"primary\" block={true} type=\"button\" onClick={goToInvoice} size=\"sm\">Volver a las Facturas</Button>\r\n        </Col>\r\n      </Row>\r\n      {displayLoading ? (\r\n        <LoadingComponent />\r\n      ) : (\r\n        <>\r\n          <InvoiceBondComponent\r\n            invoice={invoice}\r\n            configGeneral={props.configGeneral}\r\n            configStore={props.configStore}\r\n          />\r\n          <br/>\r\n          <Row>\r\n            <Col sm={3} md={3} lg={3}>\r\n              <Button variant=\"success\" block={true} type=\"button\" onClick={exportToExcel} size=\"sm\">Exportar a Excel <FaRegFileCode /></Button>\r\n            </Col>\r\n            <Col sm={3} md={3} lg={3}>\r\n              <Button variant=\"success\" block={true} type=\"button\" onClick={handleModalBond} size=\"sm\" disabled={invoice && invoice.status === 2 ? true : false}>Agregar Abono <FaPlusCircle /></Button>\r\n            </Col>\r\n            <Col sm={3} md={3} lg={3}>\r\n              <Button variant=\"success\" block={true} type=\"button\" onClick={exportToPdf} size=\"sm\">Exportar a Pdf <FaRegFilePdf /></Button>\r\n            </Col>\r\n            <Col sm={3} md={3} lg={3}>\r\n              <Button variant=\"success\" block={true} type=\"button\" onClick={printInvoice} size=\"sm\">Imprimir Factura <FaRegFilePdf /></Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <br/>\r\n              <Table columns={bondColumns} data={bonds} />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n\r\n      <Modal\r\n        show={isShow}\r\n        onHide={handleModalBond}\r\n        size=\"xl\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton className=\"header_dark\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Agregar Abono $\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmitBold} noValidate validated={validated}>\r\n          {displayLoading ? (\r\n            <Modal.Body>\r\n              <LoadingComponent />\r\n            </Modal.Body>\r\n          ) : (\r\n            <Modal.Body>\r\n              <Row>\r\n                <InputField\r\n                type='date'\r\n                label='Fecha del Pago'\r\n                name='date_payment_bond'\r\n                required={true}\r\n                messageErrors={[\r\n                'Requerido*'\r\n                ]}\r\n                cols='col-md-4 col-lg-4 col-sm-4'\r\n                value={formBond.date_payment_bond}\r\n                handleChange={onChange}\r\n                />\r\n              <InputField\r\n                type='select'\r\n                label='Tipo de Abono'\r\n                name='id_type_bond'\r\n                required={true}\r\n                messageErrors={[\r\n                'Requerido*'\r\n                ]}\r\n                cols='col-md-4 col-lg-4 col-sm-4'\r\n                value={formBond.id_type_bond}\r\n                handleChange={onChange}\r\n                >\r\n                <option value=\"\">--Seleccione--</option>\r\n                {typeBond.map((v,i) => (\r\n                  <option value={v.id} key={i}>{v.name}</option>\r\n                ))}\r\n              </InputField>\r\n                <InputField\r\n                type='number'\r\n                step=\"any\"\r\n                label='Monto'\r\n                name='amount'\r\n                required={true}\r\n                messageErrors={[\r\n                'Requerido*'\r\n                ]}\r\n                cols='col-md-4 col-lg-4 col-sm-4'\r\n                value={formBond.amount}\r\n                handleChange={onChange}\r\n                />\r\n              </Row>\r\n              <Row>\r\n                <InputField\r\n                type='text'\r\n                label='Detalle'\r\n                name='detail'\r\n                required={false}\r\n                messageErrors={[\r\n                'Requerido*'\r\n                ]}\r\n                cols='col-md-4 col-lg-4 col-sm-4'\r\n                value={formBond.detail}\r\n                handleChange={onChange}\r\n                />\r\n              {/*\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <br/>\r\n                  <Form.Group>\r\n                    <Form.Check\r\n                      name=\"notify_client\"\r\n                      type={'checkbox'}\r\n                      id={`checkbox-1`}\r\n                      label={`Notificar al Cliente`}\r\n                      checked={formBond.notify_client}\r\n                      onChange={onChange}\r\n                      />\r\n                  </Form.Group>\r\n                </Col>*/}\r\n              </Row>\r\n            </Modal.Body>\r\n          )}\r\n          <Modal.Footer>\r\n            <Button size=\"md\" type=\"submit\" variant=\"primary\"  disabled={disableButton}>Enviar</Button>\r\n            <Button size=\"md\" variant=\"secondary\" onClick={handleModalBond} disabled={disableButton}>cerrar</Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    id_branch_office: state.enterpriseSucursal.id_branch_office,\r\n    configGeneral : state.configs.config,\r\n    configStore: state.configs.configStore\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(InvoiceBondPage)\r\n"],"sourceRoot":""}