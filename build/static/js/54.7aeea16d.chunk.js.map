{"version":3,"sources":["components/Table.jsx","components/modals/ModalActionsCotization.jsx","pages/CotizacionSearchPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","pageSizeHandler","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","pageSize","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","position","getCellProps","autoRemove","val","Table","ModalActionCotization","props","Modal","show","isShow","onHide","aria-labelledby","centered","Header","closeButton","Title","displayLoadingModal","Body","LoadingComponent","cotization","status","Fragment","Row","Col","sm","md","lg","Button","updateCotizacion","block","seeDetailCotization","printCotizacion","printCotizacionNew","changeStatus","anulateCotization","goToFacturation","goToNoteSale","goToBillOfSale","goToGuideDispatch","Footer","optionsBar","responsive","maintainAspectRatio","animation","duration","hover","animationDuration","responsiveAnimationDuration","options_line","scales","yAxes","ticks","beginAtZero","data_donut_ss_status","labels","datasets","hoverBackgroundColor","data_donut_total_status","data_bar_failure_tipology","label","borderColor","borderWidth","hoverBorderColor","data_line_by_year","fill","cotizacionColumns","CotizacionSearchPage","useState","displayLoading","setDisplayLoading","setDisplayLoadingModal","cotizacionData","setCotizacionData","cotizationDetail","setCotizationDetail","isOpenModalDetail","setIsOpenModalDetail","redraw","setRedraw","statusCotization","setStatusCotization","displayFilter","setDisplayFilter","date_desde","date_hasta","dataForm","setDataForm","cotizationAction","setCotizationAction","isOpenModalAction","setIsOpenModalAction","accessor","Cell","props1","original","OverlayTrigger","placement","overlay","Tooltip","onHideModalAction","ref","name_seller","phone_seller","name_contact","phone_contact","comment","business_name_client","type_effect","moment","date_issue","format","date_expiration","determinateStatus","Badge","products","v","name_product","configGeneral","simbolo_moneda","showPriceWithDecimals","price","quantity","total_product","total_gastos","total_iva","discount_global","discount_global_amount","total_balance","is_products_paid","total_quantity_products_paid","total_quantity_products","useEffect","layoutHelpers","toggleCollapsed","fetchData","id_branch_office","handleDataDonutSsStatus","name","statuses","forEach","push","parseFloat","total","ARRAY_COLORS","invoice","mes","invoiceByYear","item","year","totalByStatus","setTimeout","handleDisplayFilter","objectPost","Object","assign","promises","axios","get","API_URL","post","Promise","all","then","result","catch","err","tokenExpired","objectStatus","toast","info","put","success","confirmAnulateCotization","delete","validate","window","open","pdf_public_url","error","folio","handleModalDetail","originalCoti","Container","fluid","history","replace","xs","Accordion","Card","Toggle","as","eventKey","Collapse","required","messageErrors","cols","handleChange","Image","src","require","width","options","colSpan","business_name_transmitter","rut_transmitter","address_transmitter","email_transmitter","phone_transmitter","country_transmitter","rut_client","address_client","city_client","comuna_client","spin_client","email_contact","email_seller","category","description","formatNumber","discount","method","method_sale","parseInt","is_neto","gastos","amount","referencias","type_document","ref_cotizacion","ind","date_ref","tz","reason_ref","type_code","total_with_iva","ModalActionsCotization","confirmAlert","customUI","onClose","defaultProps","JSON","parse","localStorage","getItem","connect","enterpriseSucursal","id_enterprise"],"mappings":"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","file":"static/js/54.7aeea16d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor, pageSizeHandler }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0, pageSize : pageSizeHandler[0] },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table_responsive_eddit\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {pageSizeHandler.map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td style={{position: \"relative\"}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {pageSizeHandler.map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor,pageSizeHandler}) => {\r\n  pageSizeHandler = pageSizeHandler ? pageSizeHandler : [10, 20, 30, 40, 50]; \r\n  return (\r\n    <Styles>\r\n      <DataTable pageSizeHandler={pageSizeHandler} data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n  pageSizeHandler : PropTypes.array,\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport 'styles/components/modalComponents.css'\r\nimport {Modal,Row,Col,Button} from 'react-bootstrap'\r\nimport {FaEdit,FaEye,FaFilePdf,FaFileInvoice,FaBan,FaSync} from 'react-icons/fa'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nconst ModalActionCotization = (props) => {\r\n\r\n  return (\r\n    <Modal\r\n      show={props.isShow}\r\n      onHide={props.onHide}\r\n      size=\"xl\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton className=\"header_dark\">\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Acciones Disponibles\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      {props.displayLoadingModal ? (\r\n        <Modal.Body>\r\n          <LoadingComponent />\r\n        </Modal.Body>  \r\n      ) : (\r\n        <Modal.Body>\r\n          {props.cotization.status === 1 ? (\r\n            <React.Fragment>\r\n              <h5 className=\"title_principal\">Acciones generales</h5>\r\n              <hr/>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.updateCotizacion(props.cotization.id)} block={true}>Modificar Cotización <FaEdit /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacion(props.cotization.id)} block={true}>Imprimir <FaFilePdf /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacionNew(props.cotization.id)} block={true}>Imprimir nuevo pdf <FaFilePdf /></Button>\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <h5 className=\"title_principal\">Status de la Cotización</h5>\r\n              <hr/>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.changeStatus(props.cotization.id,2)} block={true}>Aprobar Cotización <FaSync /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.anulateCotization(props.cotization.id,props.cotization.status)} block={true}>Anular cotización <FaBan /></Button>\r\n                </Col>\r\n              </Row>\r\n            </React.Fragment>\r\n          ) : props.cotization.status === 2 ? (\r\n            <React.Fragment>\r\n              <h5 className=\"title_principal\">Acciones generales</h5>\r\n              <hr/>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.updateCotizacion(props.cotization.id)} block={true}>Modificar Cotización <FaEdit /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacion(props.cotization.id)} block={true}>Imprimir <FaFilePdf /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacionNew(props.cotization.id)} block={true}>Imprimir nuevo pdf <FaFilePdf /></Button>\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <h5 className=\"title_principal\">Documentos de la Cotización</h5>\r\n              <hr/>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToFacturation(props.cotization.id)} block={true}>Facturar <FaFileInvoice /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToNoteSale(props.cotization.id)} block={true}>Nota de venta <FaFileInvoice /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToBillOfSale(props.cotization.id)} block={true}>Boleta <FaFileInvoice /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.goToGuideDispatch(props.cotization.id)} block={true}>Guía de Despacho <FaFileInvoice /></Button>\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <h5 className=\"title_principal\">Status de la Cotización</h5>\r\n              <hr/>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.changeStatus(props.cotization.id,1)} block={true}>Pasar a Pendiente <FaSync /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.anulateCotization(props.cotization.id,props.cotization.status)} block={true}>Anular cotización <FaBan /></Button>\r\n                </Col>\r\n              </Row>\r\n            </React.Fragment>\r\n          ) : props.cotization.status >= 3 && props.cotization.status < 7 ? (\r\n            <React.Fragment>\r\n              <Row>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacion(props.cotization.id)} block={true}>Imprimir <FaFilePdf /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.printCotizacionNew(props.cotization.id)} block={true}>Imprimir nuevo pdf <FaFilePdf /></Button>\r\n                </Col>\r\n                <Col sm={3} md={3} lg={3}>\r\n                  <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.anulateCotization(props.cotization.id,props.cotization.status)} block={true}>Anular Documento <FaBan /></Button>\r\n                </Col>\r\n              </Row>\r\n            </React.Fragment>\r\n          ) : (\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={3} md={3} lg={3}>\r\n                <Button size=\"sm\" variant=\"secondary\" type=\"button\" onClick={(e) => props.seeDetailCotization(props.cotization)} block={true}>Ver Detalle <FaEye/></Button>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Modal.Body>\r\n      )}\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" size=\"md\" onClick={props.onHide}>Cerrar</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nModalActionCotization.propTypes = {\r\n  isShow: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  cotization: PropTypes.object.isRequired,\r\n  updateCotizacion: PropTypes.func.isRequired,\r\n  seeDetailCotization: PropTypes.func.isRequired,\r\n  printCotizacion: PropTypes.func.isRequired,\r\n  printCotizacionNew: PropTypes.func.isRequired,\r\n  changeStatus: PropTypes.func.isRequired,\r\n  anulateCotization: PropTypes.func.isRequired,\r\n  goToFacturation: PropTypes.func.isRequired,\r\n  goToNoteSale: PropTypes.func.isRequired,\r\n  goToBillOfSale: PropTypes.func.isRequired,\r\n  goToGuideDispatch: PropTypes.func.isRequired,\r\n  displayLoadingModal : PropTypes.bool,\r\n}\r\n\r\nexport default ModalActionCotization\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n  Badge,\r\n  Accordion,\r\n  Card,\r\n  Modal,\r\n  Image\r\n} from 'react-bootstrap'\r\nimport InputField from 'components/input/InputComponent'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport Table from 'components/Table'\r\nimport axios from 'axios'\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport { showPriceWithDecimals } from 'utils/functions'\r\nimport { FaPlusCircle, FaChartLine} from \"react-icons/fa\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport layoutHelpers from 'shared/layouts/helpers'\r\nimport * as moment from 'moment-timezone'\r\nimport { formatNumber } from 'utils/functions'\r\nimport 'styles/components/modalComponents.css'\r\nimport { connect } from 'react-redux'\r\nimport {Doughnut,Bar,Line} from 'react-chartjs-2';\r\nimport { ARRAY_COLORS } from 'utils/constants'\r\nimport ModalActionsCotization from 'components/modals/ModalActionsCotization'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nlet optionsBar = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    duration: 0\r\n  },\r\n  hover: {\r\n    animationDuration: 0\r\n  },\r\n  responsiveAnimationDuration: 0,\r\n}\r\n\r\nconst options_line = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n}\r\n\r\nlet data_donut_ss_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nlet data_donut_total_status = {\r\n\tlabels: [],\r\n\tdatasets: [{\r\n\t\tdata: [],\r\n\t\tbackgroundColor: [],\r\n\t\thoverBackgroundColor: []\r\n\t}]\r\n};\r\n\r\nlet data_bar_failure_tipology = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'Monto acumulado de documentos hechos por mes',\r\n      backgroundColor: 'rgb(15, 13, 74)',\r\n      borderColor: 'rgb(27, 13, 74)',\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: 'rgb(15, 13, 74)',\r\n      hoverBorderColor: 'rgb(27, 13, 74)',\r\n      data: []\r\n    }\r\n  ]\r\n};\r\n\r\nlet data_line_by_year = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'Cantidad facturada de documentos por años',\r\n      data: [],\r\n      fill: false,\r\n      backgroundColor: 'rgb(125, 81, 52)',\r\n      borderColor: 'rgb(99, 56, 21)',\r\n    },\r\n  ],\r\n}\r\n\r\nlet cotizacionColumns = null\r\n\r\nconst CotizacionSearchPage = props => {\r\n\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n  const [displayLoadingModal, setDisplayLoadingModal] = useState(false)\r\n  const [cotizacionData, setCotizacionData] = useState([])\r\n  const [cotizationDetail, setCotizationDetail] = useState({})\r\n  const [isOpenModalDetail, setIsOpenModalDetail] = useState(false)\r\n  const [redraw, setRedraw] = useState(false)\r\n  const [statusCotization, setStatusCotization] = useState({})\r\n  const [displayFilter,setDisplayFilter] = useState(1)\r\n  const [dataForm, setDataForm] = useState({\r\n    date_desde : '',\r\n    date_hasta: '',\r\n  })\r\n  const [cotizationAction,setCotizationAction] = useState({})\r\n  const [isOpenModalAction,setIsOpenModalAction] = useState(false)\r\n\r\n  useMemo(() => {\r\n    cotizacionColumns = [\r\n        {\r\n          Header: 'Referencia',\r\n          accessor: 'ref',\r\n          Cell: props1 => {\r\n            const {original} = props1.cell.row\r\n            return (\r\n              <OverlayTrigger placement={'bottom'} overlay={<Tooltip id=\"tooltip-disabled2\">Hacer click para ver las acciones</Tooltip>}>\r\n                <Button variant=\"link\" block={true} type=\"button\" size=\"sm\" onClick={() => onHideModalAction(original)}>{original.ref}</Button>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Rut Cliente',\r\n          accessor: 'rut_client',\r\n        },\r\n        {\r\n          Header: 'Razón Social',\r\n          accessor: 'business_name_client',\r\n          Cell: props1 => {\r\n            const {original} = props1.cell.row\r\n            return(\r\n              <OverlayTrigger placement={'right'} overlay={\r\n              <Tooltip id=\"tooltip-disabled2\">\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"><b>Vendedor: </b> {original.name_seller}</li>\r\n                  <li className=\"list-group-item\"><b>Fono del Vendedor: </b> {original.phone_seller ? original.phone_seller : 'No posee'}</li>\r\n                  <li className=\"list-group-item\"><b>Contacto</b> {original.name_contact ? original.name_contact : 'No posee'}</li>\r\n                  <li className=\"list-group-item\"><b>Fono del Contacto: </b> {original.phone_contact}</li>\r\n                  <li className=\"list-group-item\"><b>Comentario: </b> {original.comment}</li>\r\n                </ul>\r\n              </Tooltip>}>\r\n                <Button variant=\"link\" size=\"sm\" block={true} type=\"button\">{original.business_name_client}</Button>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Tipo',\r\n          accessor: props1 => props1.type_effect == 1 ? ['Afecta'] : ['Excento'],\r\n        },\r\n        {\r\n          Header: 'Fecha-Emisión',\r\n          accessor: props1 => [moment(props1.date_issue).format('DD-MM-YYYY')],\r\n        },\r\n        {\r\n          Header: 'Fecha Vencimiento',\r\n          accessor: props1 => [moment(props1.date_expiration).format('DD-MM-YYYY')],\r\n        },\r\n        {\r\n          Header: 'Status',\r\n          accessor: props1 => [determinateStatus(props1.status)],\r\n          Cell: props1 => {\r\n            const { original } = props1.cell.row\r\n            if(original.status === 1){\r\n              return (\r\n                <OverlayTrigger placement={'bottom'} overlay={<Tooltip id=\"tooltip-disabled2\">Hacer click para cambiar el Status</Tooltip>}>\r\n                  <Button variant=\"secondary\" block={true} size=\"sm\" onClick={() => changeStatus(original.id,2)}>Pendiente</Button>\r\n                </OverlayTrigger>\r\n              )\r\n            }else if(original.status === 2){\r\n              return (\r\n                <OverlayTrigger placement={'bottom'} overlay={<Tooltip id=\"tooltip-disabled2\">Hacer click para cambiar el Status</Tooltip>}>\r\n                  <Button variant=\"danger\" block={true} size=\"sm\" onClick={() => changeStatus(original.id,1)}>Aprobada</Button>\r\n                </OverlayTrigger>\r\n              )\r\n            }else if(original.status >= 3 && original.status < 7){\r\n              return (<Badge variant=\"primary\" className=\"font-badge\">{determinateStatus(original.status)}</Badge>)\r\n            }else if(original.status == 7){\r\n              return (<Badge variant=\"danger\" className=\"font-badge\">Anulada</Badge>)\r\n            }else{\r\n              return (<Badge variant=\"danger\" className=\"font-badge\">vencida</Badge>)\r\n            }\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total Productos',\r\n          accessor: 'total_product',\r\n          Cell: props1 => {\r\n            return (\r\n              <OverlayTrigger placement={'left'} overlay={\r\n                <Tooltip id={\"tooltip-total_pagar\"+props1.cell.row.original.id}>\r\n                  <ul className=\"list-group\">\r\n                    {props1.cell.row.original.products.map((v,i) => (\r\n                      <li className=\"list-group-item\" key={i}>\r\n                        <b>Producto</b>: {v.name_product}<br/>\r\n                        <b>Precio</b> : {props.configGeneral.simbolo_moneda+showPriceWithDecimals(props.configGeneral,v.price)}<br/>\r\n                        <b>Cantidad</b>: {v.quantity}<br/>\r\n                        <b>Status</b>: {v.status == 1 ? 'Pendiente' : v.status == 2 ? 'Pagado' : 'Anulado'}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </Tooltip>}>\r\n                  <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                    {props.configGeneral.simbolo_moneda+showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_product)}\r\n                  </Badge>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total gastos',\r\n          accessor: 'total_gastos',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_gastos)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total Iva',\r\n          accessor: 'total_iva',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_iva)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Descuento Global',\r\n          accessor: 'discount_global_total',\r\n          Cell: props1 => {\r\n            return (\r\n              <OverlayTrigger placement={'left'} overlay={\r\n                <Tooltip id={\"tooltip-total_pagar\"+props1.cell.row.original.id}>\r\n                  {props1.cell.row.original.discount_global ? props1.cell.row.original.discount_global : 0}%\r\n                </Tooltip>}>\r\n                  <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                    {props.configGeneral.simbolo_moneda+showPriceWithDecimals(props.configGeneral,props1.cell.row.original.discount_global_amount)}\r\n                  </Badge>\r\n              </OverlayTrigger>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Total Balance',\r\n          accessor: 'total_balance',\r\n          Cell: props1 => {\r\n            return (\r\n              <Badge variant=\"info\" className=\"font-badge\" style={{backgroundColor: \"rgb(198, 196, 54)\", color: \"white\"}}>\r\n                {props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.total_balance)}\r\n              </Badge>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          Header: 'Productos Pagados',\r\n          Cell: props1 => {\r\n            const original = props1.cell.row.original\r\n            if(original.status < 6){\r\n              if(original.is_products_paid){\r\n                return (\r\n                  <Badge variant=\"success\" className=\"font-badge\">\r\n                    {original.total_quantity_products_paid}/{original.total_quantity_products}\r\n                  </Badge>\r\n                )\r\n              }else{\r\n                return (\r\n                  <Badge variant=\"danger\" className=\"font-badge\">\r\n                    {original.total_quantity_products_paid}/{original.total_quantity_products}\r\n                  </Badge>\r\n                )\r\n              }\r\n            }else{\r\n              return ''\r\n            }\r\n          }\r\n        },\r\n        {\r\n          Header: 'Acciones',\r\n          Cell: props1 => {\r\n            const { original } = props1.cell.row\r\n            return (\r\n              <Button variant=\"primary\" block={true} type=\"button\" size=\"sm\" onClick={() => onHideModalAction(original)}>Acciones</Button>\r\n            )\r\n          }\r\n        }\r\n    ]\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    layoutHelpers.toggleCollapsed()\r\n    return () =>{\r\n      cotizacionColumns = null\r\n      layoutHelpers.toggleCollapsed()\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  },[props.id_branch_office])\r\n\r\n  useEffect(() => {\r\n    if(redraw){\r\n\r\n      data_donut_ss_status = {\r\n      \tlabels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      };\r\n\r\n      data_bar_failure_tipology = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Monto acumulado de documentos hechos por mes',\r\n            backgroundColor: 'rgb(15, 13, 74)',\r\n            borderColor: 'rgb(27, 13, 74)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgb(15, 13, 74)',\r\n            hoverBorderColor: 'rgb(27, 13, 74)',\r\n            data: []\r\n          }\r\n        ]\r\n      };\r\n\r\n      data_line_by_year =  {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Cantidad facturada de documentos por años',\r\n            data: [],\r\n            fill: false,\r\n            backgroundColor: 'rgb(125, 81, 52)',\r\n            borderColor: 'rgb(99, 56, 21)',\r\n          },\r\n        ],\r\n      }\r\n\r\n      data_donut_total_status = {\r\n      \tlabels: [],\r\n      \tdatasets: [{\r\n      \t\tdata: [],\r\n      \t\tbackgroundColor: [],\r\n      \t\thoverBackgroundColor: []\r\n      \t}]\r\n      };\r\n\r\n      handleDataDonutSsStatus()\r\n    }\r\n  },[redraw])\r\n\r\n  const determinateStatus = status => {\r\n    if(status === 1){\r\n      return 'Pendiente'\r\n    }else if(status === 2){\r\n      return 'Aprobado'\r\n    }else if(status === 3){\r\n      return 'Facturado'\r\n    }else if(status === 4){\r\n      return 'Nota de Venta'\r\n    }else if(status === 5){\r\n      return 'Boleta'\r\n    }else if(status === 6){\r\n      return 'Guía Despacho'\r\n    }else{\r\n      return 'Anulada'\r\n    }\r\n  }\r\n\r\n  const onChange = e => {\r\n    setDataForm({...dataForm,[e.target.name] : e.target.value})\r\n  }\r\n\r\n  const handleDataDonutSsStatus = () => {\r\n    statusCotization.statuses.forEach((v, i) => {\r\n      data_donut_ss_status.labels.push(v.status)\r\n      data_donut_ss_status.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_ss_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_ss_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n    statusCotization.invoice.forEach((v, i) => {\r\n      data_bar_failure_tipology.labels.push(v.mes)\r\n      data_bar_failure_tipology.datasets[0].data.push(v.total)\r\n    });\r\n\r\n    statusCotization.invoiceByYear.forEach((item, i) => {\r\n      data_line_by_year.labels.push(item.year)\r\n      data_line_by_year.datasets[0].data.push(item.total)\r\n    });\r\n\r\n    statusCotization.totalByStatus.forEach((v, i) => {\r\n      data_donut_total_status.labels.push(v.name)\r\n      data_donut_total_status.datasets[0].data.push(parseFloat(v.total))\r\n      data_donut_total_status.datasets[0].backgroundColor.push(ARRAY_COLORS[i])\r\n      data_donut_total_status.datasets[0].hoverBackgroundColor.push(ARRAY_COLORS[i])\r\n    });\r\n\r\n    setTimeout(function () {\r\n      setRedraw(false)\r\n    }, 1500);\r\n  }\r\n\r\n  const handleStadistics = () => {\r\n    let objectPost = Object.assign({},dataForm)\r\n    setDisplayFilter(3)\r\n    toast.info(\"Filtrando datos...\")\r\n     axios.post(API_URL+'cotizacion_stadistics',objectPost).then(result => {\r\n      setStatusCotization({...statusCotization,statuses : result.data.statuses, invoice: result.data.invoice, invoiceByYear: result.data.invoiceByYear, totalByStatus: result.data.totalByStatus})\r\n      setTimeout(function () {\r\n        setRedraw(true)\r\n        setDisplayFilter(1)\r\n      }, 1000);\r\n     }).catch(err => {\r\n       setDisplayFilter(1)\r\n       props.tokenExpired(err)\r\n     })\r\n  }\r\n\r\n  const goToGuideDispatch = id => {\r\n    props.history.push('/quotitation/guide/'+id)\r\n  }\r\n\r\n  const handleDisplayFilter = filter => {\r\n    if(filter == 3){\r\n      setDataForm({date_desde: '', date_hasta: ''})\r\n    }\r\n    setDisplayFilter(filter)\r\n  }\r\n\r\n  const fetchData = () => {\r\n    let objectPost = Object.assign({},dataForm)\r\n    let promises = [\r\n      axios.get(API_URL+'cotizacion'),\r\n      axios.post(API_URL+'cotizacion_stadistics',objectPost),\r\n    ]\r\n    Promise.all(promises).then(result => {\r\n      setCotizacionData(result[0].data)\r\n      setStatusCotization({...statusCotization,statuses : result[1].data.statuses, invoice: result[1].data.invoice, invoiceByYear: result[1].data.invoiceByYear, totalByStatus: result[1].data.totalByStatus})\r\n      setTimeout(function () {\r\n        setRedraw(true)\r\n      }, 1000);\r\n      setDisplayLoading(false)\r\n      if(displayLoadingModal){\r\n        setDisplayLoadingModal(false)\r\n      }\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      setDisplayLoadingModal(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const updateCotizacion = id => {\r\n    props.history.replace('/quotitation/create_quotitation/'+id)\r\n  }\r\n\r\n  const goToForm = () => {\r\n    props.history.replace('/quotitation/create_quotitation')\r\n  }\r\n\r\n  const printCotizacion = id => {\r\n    toast.info('Buscando documento, espere por favor...')\r\n    setDisplayLoading(true)\r\n    setDisplayLoadingModal(true)\r\n    axios.get(API_URL+'cotizacion_print/'+id+'/0').then(result => {\r\n      window.open(API_URL+'documents/cotizacion/files_pdf/'+result.data.name)\r\n      setDisplayLoading(false)\r\n      setDisplayLoadingModal(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      setDisplayLoadingModal(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const printCotizacionNew = id => {\r\n    toast.info('Generando documento, espere por favor...')\r\n    setDisplayLoading(true)\r\n    setDisplayLoadingModal(true)\r\n    axios.get(API_URL+'cotizacion_print/'+id+'/0/1').then(result => {\r\n      window.open(API_URL+'documents/cotizacion/files_pdf/'+result.data.name)\r\n      setDisplayLoading(false)\r\n      setDisplayLoadingModal(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      setDisplayLoadingModal(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const changeStatus = (id,status) => {\r\n   let objectStatus = {\r\n     status\r\n   }\r\n   toast.info('Cambiando estado, espere por favor...')\r\n   setDisplayLoadingModal(true)\r\n   setDisplayLoading(true)\r\n   setTimeout(() => {\r\n      axios.put(API_URL+'cotizacion_status/'+id,objectStatus).then(result => {\r\n       toast.success('Status Cambiado')\r\n       if(Object.keys(cotizationAction).length){\r\n         setCotizationAction({...cotizationAction, status})\r\n       }\r\n       setDisplayLoadingModal(false)\r\n       fetchData()\r\n      }).catch(err => {\r\n       setDisplayLoading(false)\r\n       setDisplayLoadingModal(false)\r\n       props.tokenExpired(err)\r\n      })\r\n   },3000)\r\n  }\r\n\r\n  const anulateCotization = (id,status) => {\r\n\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui-edit'>\r\n            <h1>¿Esta seguro?</h1>\r\n            <p className=\"font-alert\">¿Desea realmente realizar esta acción?</p>\r\n            <button className=\"button-alert\"\r\n              onClick={() => {\r\n                confirmAnulateCotization(id,status);\r\n                onClose();\r\n              }}\r\n            >\r\n              Si, Aceptar\r\n            </button>\r\n            <button className=\"button-alert\" onClick={onClose}>No</button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  const confirmAnulateCotization = (id,status) => {\r\n    setDisplayLoading(true)\r\n    setDisplayLoadingModal(true)\r\n    axios.delete(API_URL+'cotizacion/'+id).then(result => {\r\n      if(status >= 1 && status <= 2){\r\n        toast.success('Cotización Anulada con éxito')\r\n        if(Object.keys(cotizationAction).length){\r\n          setCotizationAction({...cotizationAction, status: 7})\r\n        }\r\n      }else if(status >= 3 && status <= 6){\r\n        if(status === 3){\r\n          let validate = true;\r\n          result.data.forEach((v,i) => { \r\n            if(!v.status){\r\n              validate = false\r\n              toast.error(`Factura ${v.folio} no ha podido ser anulada`) \r\n            }else{\r\n              window.open(v.pdf_public_url,\"_blank\");\r\n            }\r\n          })\r\n          if(validate){\r\n            if(Object.keys(cotizationAction).length){\r\n              setCotizationAction({...cotizationAction, status: 2})\r\n            }  \r\n          }else{\r\n            toast.error(\"La cotización no ha podido ser anulada debido a que 1 o más facturas no fueron anuladas\")\r\n          }\r\n        }else{\r\n          if(Object.keys(cotizationAction).length){\r\n            setCotizationAction({...cotizationAction, status: 2})\r\n          }\r\n        }\r\n        toast.success('Documento anulado con éxito')\r\n        setDisplayLoadingModal(false)\r\n      }\r\n      fetchData()\r\n     }).catch(err => {\r\n      setDisplayLoading(false)\r\n      setDisplayLoadingModal(false)\r\n       props.tokenExpired(err)\r\n     })\r\n  }\r\n\r\n  const handleModalDetail = () => {\r\n    setIsOpenModalDetail(!isOpenModalDetail)\r\n  }\r\n\r\n  const displayMehotdSale = method => {\r\n    method = parseInt(method)\r\n    if(method === 1){\r\n      return \"Unidad\"\r\n    }else if(method === 2){\r\n      return \"Mayorista\"\r\n    }else{\r\n      return \"(Litros, Kg, Etc..)\"\r\n    }\r\n  }\r\n\r\n  const seeDetailCotization = data => {\r\n    setCotizationDetail(data)\r\n    handleModalDetail()\r\n  }\r\n\r\n  const goToFacturation = id => {\r\n    props.history.push('/quotitation/invoicing/'+id)\r\n  }\r\n\r\n  const goToNoteSale = id => {\r\n    props.history.replace('/quotitation/sale_note_create/'+id)\r\n  }\r\n\r\n  const goToBillOfSale = id => {\r\n    props.history.replace('/quotitation/bill_create/'+id)\r\n  }\r\n\r\n  const onHideModalAction = (originalCoti = false) => {\r\n    if(!isOpenModalAction && originalCoti){\r\n      setCotizationAction(originalCoti)\r\n    }\r\n    setIsOpenModalAction(!isOpenModalAction)\r\n  }\r\n\r\n  return (\r\n\r\n    <Container fluid>\r\n      <Row>\r\n        <Col sm={6} md={6} lg={6} className=\"text-center\">\r\n          <h4 className=\"title_principal\">Tabla de Cotizaciones</h4>\r\n          <Button block={true} variant=\"success\" onClick={goToForm} size=\"sm\">Nueva Cotización <FaPlusCircle /></Button>\r\n        </Col>\r\n        <Col sm={6} md={6} lg={6} className=\"text-center title_principal\">\r\n          <h4>Total Cotizaciones Realizadas</h4>\r\n          <Badge variant=\"danger\">{cotizacionData.length}</Badge>\r\n        </Col>\r\n      </Row>\r\n      <hr/>\r\n      {displayLoading ? (\r\n        <LoadingComponent />\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} xs={12}>\r\n              <Accordion>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"header_card\">\r\n                    <b>Estadísticas</b> <FaChartLine />\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                      <Row className=\"justify-content-center\">\r\n                        {displayFilter == 1 ? (\r\n                          <Col sm={2} md={2} lg={2}>\r\n                            <Button variant=\"secondary\" type=\"button\" size=\"sm\" block={true} onClick={() => handleDisplayFilter(2)}>Activar Filtros</Button>\r\n                          </Col>\r\n                        ) : displayFilter == 2 ? (\r\n                          <React.Fragment>\r\n                            <InputField\r\n                            type='date'\r\n                            label='Fecha desde'\r\n                            name='date_desde'\r\n                            required={true}\r\n                            messageErrors={[\r\n                            'Requerido*'\r\n                            ]}\r\n                            cols='col-md-3 col-lg-3 col-sm-3'\r\n                            value={dataForm.date_desde}\r\n                            handleChange={onChange}\r\n                            />\r\n                            <InputField\r\n                              type='date'\r\n                              label='Fecha Hasta'\r\n                              name='date_hasta'\r\n                              required={true}\r\n                              messageErrors={[\r\n                              'Requerido*'\r\n                              ]}\r\n                              cols='col-md-3 col-lg-3 col-sm-3'\r\n                              value={dataForm.date_hasta}\r\n                              handleChange={onChange}\r\n                            />\r\n                            <Col sm={3} md={3} lg={3}>\r\n                              <br/>\r\n                              <Button variant=\"danger\" type=\"button\" size=\"sm\" block={true} onClick={handleStadistics}>Buscar</Button>\r\n                            </Col>\r\n                            <Col sm={3} md={3} lg={3}>\r\n                              <br/>\r\n                              <Button variant=\"secondary\" type=\"button\" size=\"sm\" block={true} onClick={() => handleDisplayFilter(1)}>Ocultar Filtros</Button>\r\n                            </Col>\r\n                          </React.Fragment>\r\n\r\n                        ) : (\r\n                          <Col sm={12} md={12} lg={12} className=\"text-center\">\r\n                            <br/>\r\n                            <Image src={require('../assets/img/loading.gif')} width=\"30\" />\r\n                            <br/>\r\n                            Cargando datos...\r\n                          </Col>\r\n                        )}\r\n                      </Row>\r\n                      <br/>\r\n                      <Row>\r\n                        <Col sm={6} md={6} lg={6} style={{height: \"200px\"}}>\r\n                          <Doughnut data={data_donut_ss_status} redraw={redraw} options={optionsBar} />\r\n                        </Col>\r\n                        <Col sm={6} md={6} lg={6}>\r\n                          <table className=\"table table-bordered\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th className=\"text-center\" colSpan=\"2\" style={{backgroundColor: \"rgb(147, 52, 12)\", color: \"white\"}}>Monto acumulado por estados</th>\r\n                              </tr>\r\n                              <tr>\r\n                                <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Estado</th>\r\n                                <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Total</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"text-center\">\r\n                              {Object.keys(statusCotization).length > 0 ? (\r\n                                <React.Fragment>\r\n                                  {statusCotization.statuses.map((v,i) => (\r\n                                    <tr key={i}>\r\n                                      <td>{v.status}</td>\r\n                                      <td>{props.configGeneral.simbolo_moneda}{showPriceWithDecimals(props.configGeneral,v.total)}</td>\r\n                                    </tr>\r\n                                  ))}\r\n                                </React.Fragment>\r\n                              ) : (\r\n                                <tr>\r\n                                  <td colSpan=\"3\" className=\"text-center\">Sin registros...</td>\r\n                                </tr>\r\n                              )}\r\n                            </tbody>\r\n                          </table>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col sm={12} md={12} lg={12} style={{height: \"200px\"}}>\r\n                          <Bar\r\n                            data={data_bar_failure_tipology}\r\n                            options={optionsBar}\r\n                            redraw={redraw}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <br/>\r\n                      <Row>\r\n                        <Col sm={6} md={6} lg={6} style={{height: \"230px\"}}>\r\n                          <table className=\"table table-bordered\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th className=\"text-center\" colSpan=\"2\" style={{backgroundColor: \"rgb(147, 52, 12)\", color: \"white\"}}>Total cotizaciones realizadas</th>\r\n                              </tr>\r\n                              <tr>\r\n                                <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Estado</th>\r\n                                <th className=\"text-center\" style={{backgroundColor: \"rgb(133, 124, 124)\", color: \"white\"}}>Total</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"text-center\">\r\n                              {Object.keys(statusCotization).length > 0 ? (\r\n                                <React.Fragment>\r\n                                  {statusCotization.totalByStatus.map((v,i) => (\r\n                                    <tr key={i}>\r\n                                      <td>{v.name}</td>\r\n                                      <td>{v.total}</td>\r\n                                    </tr>\r\n                                  ))}\r\n                                </React.Fragment>\r\n                              ) : (\r\n                                <tr>\r\n                                  <td colSpan=\"3\" className=\"text-center\">Sin registros...</td>\r\n                                </tr>\r\n                              )}\r\n                            </tbody>\r\n                          </table>\r\n                        </Col>\r\n                        <Col sm={6} md={6} lg={6} style={{height: \"200px\"}} className=\"text-center\">\r\n                          <Doughnut data={data_donut_total_status} redraw={redraw} options={optionsBar} />\r\n                        </Col>\r\n                      </Row>\r\n                      <br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n                      <Row>\r\n                        <Col sm={12} md={12} lg={12} style={{height: \"200px\"}}>\r\n                          <Line data={data_line_by_year} options={options_line} />\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} xs={12}>\r\n              <Table columns={cotizacionColumns} data={cotizacionData}/>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n      <Modal\r\n        onHide={handleModalDetail}\r\n        show={isOpenModalDetail}\r\n        size=\"xl\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        >\r\n        <Modal.Header closeButton className=\"header_dark\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Detalles de la Cotización N° {Object.keys(cotizationDetail).length > 0 ? cotizationDetail.ref : ''}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Registrador</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Rut</th>\r\n                    <th className=\"text-center\">Dirección</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">País</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.business_name_transmitter}</td>\r\n                      <td>{cotizationDetail.rut_transmitter}</td>\r\n                      <td>{cotizationDetail.address_transmitter}</td>\r\n                      <td>{cotizationDetail.email_transmitter}</td>\r\n                      <td>{cotizationDetail.phone_transmitter}</td>\r\n                      <td>{cotizationDetail.country_transmitter}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Cliente</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Razon Social / Nombre</th>\r\n                    <th className=\"text-center\">Rut</th>\r\n                    <th className=\"text-center\">Dirección</th>\r\n                    <th className=\"text-center\">Ciudad</th>\r\n                    <th className=\"text-center\">Comuna</th>\r\n                    <th className=\"text-center\">Giro</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.business_name_client}</td>\r\n                      <td>{cotizationDetail.rut_client}</td>\r\n                      <td>{cotizationDetail.address_client}</td>\r\n                      <td>{cotizationDetail.city_client}</td>\r\n                      <td>{cotizationDetail.comuna_client}</td>\r\n                      <td>{cotizationDetail.spin_client}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Contacto</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.name_contact}</td>\r\n                      <td>{cotizationDetail.phone_contact}</td>\r\n                      <td>{cotizationDetail.email_contact}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal text-center\">Datos del Vendedor</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Fono</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td>{cotizationDetail.name_seller}</td>\r\n                      <td>{cotizationDetail.phone_seller}</td>\r\n                      <td>{cotizationDetail.email_seller}</td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"table-responsive\">\r\n              <h4 className=\"title_principal text-center\">Productos de la Cotización</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Categoria</th>\r\n                    <th className=\"text-center\">Nombre</th>\r\n                    <th className=\"text-center\">Descripción</th>\r\n                    <th className=\"text-center\">Cantidad</th>\r\n                    <th className=\"text-center\">Precio</th>\r\n                    <th className=\"text-center\">Descuento</th>\r\n                    <th className=\"text-center\">Método de Venta</th>\r\n                    <th className=\"text-center\">Neto</th>\r\n                    <th className=\"text-center\">Total</th>\r\n                    <th className=\"text-center\">Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <React.Fragment>\r\n                      {cotizationDetail.products.map((v,i) => (\r\n                        <tr>\r\n                          <td>{v.category}</td>\r\n                          <td>{v.name_product}</td>\r\n                          <td>{v.description}</td>\r\n                          <td>{v.quantity}</td>\r\n                          <td>{props.configGeneral.simbolo_moneda}{formatNumber(v.price,2,',','.')}</td>\r\n                          <td>{v.discount}</td>\r\n                          <td>{displayMehotdSale(v.method_sale)}</td>\r\n                          <td>{v.is_neto ? 'Neto' : \"Iva\"}</td>\r\n                          <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(v.total,2,',','.')}</Badge></td>\r\n                          <td>{v.status == 1 ? \"Pendiente\" : v.status == 2 ? \"Pagado\" : \"Anulado\"}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"\">\r\n              <h4 className=\"title_principal text-center\">Gastos de la Cotización</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Descripción</th>\r\n                    <th className=\"text-center\">Monto</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <React.Fragment>\r\n                      {cotizationDetail.gastos.map((v,i) => (\r\n                        <tr>\r\n                          <td>{v.description}</td>\r\n                          <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(v.amount,2,',','.')}</Badge></td>\r\n                        </tr>\r\n                      ))}\r\n                    </React.Fragment>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          {Object.keys(cotizationDetail).length > 0 && cotizationDetail.referencias && cotizationDetail.referencias.length > 0 ? (\r\n            <Row>\r\n              <Col sm={12} md={12} lg={12} className=\"\">\r\n                <h4 className=\"title_principal text-center\">Referencias de la Cotización</h4>\r\n                <br/>\r\n                <table className=\"table table-striped table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-center\">Tipo de Documento</th>\r\n                      <th className=\"text-center\">Referencia Cotiz.</th>\r\n                      <th className=\"text-center\">Ind</th>\r\n                      <th className=\"text-center\">Fecha Ref.</th>\r\n                      <th className=\"text-center\">Razón de Referencia</th>\r\n                      <th className=\"text-center\">Tipo de Código</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"text-center\">\r\n                    {Object.keys(cotizationDetail).length > 0 ? (\r\n                      <React.Fragment>\r\n                        {cotizationDetail.referencias.map((v,i) => (\r\n                          <tr>\r\n                            <td>{v.type_document}</td>\r\n                            <td>{v.ref_cotizacion}</td>\r\n                            <td>{v.ind}</td>\r\n                            <td>{v.date_ref ? moment(v.date_ref).tz('America/Santiago').format('DD-MM-YYYY') : ''}</td>\r\n                            <td>{v.reason_ref}</td>\r\n                            <td>{v.type_code}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </React.Fragment>\r\n                    ) : ''}\r\n                  </tbody>\r\n                </table>\r\n              </Col>\r\n            </Row>\r\n          ) : ''}\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} className=\"\">\r\n              <h4 className=\"title_principal text-center\">Totales</h4>\r\n              <br/>\r\n              <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\">Neto</th>\r\n                    <th className=\"text-center\">Iva</th>\r\n                    <th className=\"text-center\">Gastos</th>\r\n                    <th className=\"text-center\">Descuento Global</th>\r\n                    <th className=\"text-center\">Total Balance</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                  {Object.keys(cotizationDetail).length > 0 ? (\r\n                    <tr>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_product,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_iva,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_gastos,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.discount_global_amount,2,',','.')}</Badge></td>\r\n                      <td><Badge variant=\"danger\" className=\"font-badge\">{props.configGeneral.simbolo_moneda}{formatNumber(cotizationDetail.total_balance,2,',','.')}</Badge></td>\r\n                    </tr>\r\n                  ) : ''}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              {Object.keys(cotizationDetail).length > 0 ? (\r\n                <h5>Mostrar solo los Totales: <Badge variant=\"primary\" className=\"font-badge\">{cotizationDetail.total_with_iva ? 'No' : \"Si\"}</Badge></h5>\r\n              ) : ''}\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button size=\"md\" variant=\"info\" onClick={handleModalDetail}>cerrar</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <ModalActionsCotization\r\n        isShow={isOpenModalAction}\r\n        onHide={onHideModalAction}\r\n        cotization={cotizationAction}\r\n        updateCotizacion={updateCotizacion}\r\n        seeDetailCotization={seeDetailCotization}\r\n        printCotizacion={printCotizacion}\r\n        printCotizacionNew={printCotizacionNew}\r\n        changeStatus={changeStatus}\r\n        anulateCotization={anulateCotization}\r\n        goToFacturation={goToFacturation}\r\n        goToNoteSale={goToNoteSale}\r\n        goToBillOfSale={goToBillOfSale}\r\n        goToGuideDispatch={goToGuideDispatch}\r\n        displayLoadingModal={displayLoadingModal}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nCotizacionSearchPage.defaultProps = {\r\n  configGeneral: JSON.parse(localStorage.getItem('configGeneral')),\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    id_branch_office : state.enterpriseSucursal.id_branch_office,\r\n    id_enterprise : state.enterpriseSucursal.id_enterprise,\r\n  }\r\n}\r\n\r\nCotizacionSearchPage.propTypes ={\r\n  id_branch_office: PropTypes.string.isRequired,\r\n  id_enterprise : PropTypes.string.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(CotizacionSearchPage)\r\n"],"sourceRoot":""}