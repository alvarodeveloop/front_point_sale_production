{"version":3,"sources":["components/TablePlansComponent.jsx","components/EnterpriseCardComponent.jsx","pages/EnterprisePage.jsx"],"names":["TablePlansComponent","plan","props","useState","displayDescription","setDisplayDescription","handleUpdate","e","preventDefault","displayTotalDiscount","total","discount","parseFloat","price","formatNumber","handleSelect","displayDescriptionParagraph","Fragment","especial","className","name","configGeneral","simbolo_moneda","billing_period","description","length","isModal","style","color","onMouseOver","onMouseLeave","placement","overlay","id","day_test","update","href","onClick","disabled","defaultProps","JSON","parse","localStorage","getItem","EnterpriseCardComponent","enterprise","textTransform","fontSize","bussines_name","Image","src","require","width","is_open","Badge","variant","DropdownButton","size","title","Dropdown","Item","modifyRegister","displayDetails","deleteRegister","EnterprisePage","enterprises","setEnterprises","isOpenModal","setIsOpenModal","enterpriseDetail","setEnterpriseDetail","displayLoading","setDisplayLoading","useEffect","fetchData","axios","get","API_URL","then","result","data","catch","err","tokenExpired","history","replace","confirmAlert","customUI","onClose","confirmDeleteRegister","delete","toast","success","handleModal","enterpriseData","console","log","setTimeout","Container","fluid","LoadingComponent","Row","Col","sm","md","lg","Button","block","type","map","v","i","key","Modal","show","onHide","aria-labelledby","centered","zIndex","Header","closeButton","Title","Object","keys","Body","textAligment","rut","phone","city","comuna","address","Accordion","Card","Toggle","as","eventKey","Collapse","modules","xs","Form","Group","Check","custom","name_item","label","value","checked","readOnly","Footer"],"mappings":"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","file":"static/js/32.894b4dcc.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {formatNumber} from 'utils/functions'\r\nimport {FaCheck} from 'react-icons/fa'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport 'styles/components/tabla_plans.css'\r\n\r\nconst TablePlansComponent = ({plan,...props}) => {\r\n\r\n  const [displayDescription,setDisplayDescription] = useState(false)\r\n\r\n  const handleSubmit = () => {\r\n\r\n  }\r\n\r\n  const handleUpdate = e => {\r\n    e.preventDefault();\r\n    props.handleUpdate(plan)\r\n\r\n  }\r\n\r\n  const displayTotalDiscount = total => {\r\n    let discount = (parseFloat(plan.discount) * parseFloat(plan.price) / 100)\r\n    return formatNumber(parseFloat(plan.price) - discount,2,',','.')\r\n  }\r\n\r\n  const handleSelect = e => {\r\n    e.preventDefault()\r\n    props.handleSelect(plan)\r\n  }\r\n\r\n  const displayDescriptionParagraph = () => {\r\n    setDisplayDescription(!displayDescription)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {plan.especial ? (\r\n        <div className=\"plan featured\">\r\n          <header>\r\n            <h4 className=\"plan-title\">\r\n              {plan.name}\r\n            </h4>\r\n            <div className=\"plan-cost\">\r\n              <span className={!plan.discount ? \"plan-price\" : \"plan-price-discount\"}>\r\n                {props.configGeneral && props.configGeneral.simbolo_moneda ? props.configGeneral.simbolo_moneda : '$'}{formatNumber(plan.price,2,',','.')}\r\n              </span>\r\n              {plan.discount ? (\r\n                <React.Fragment>\r\n                  <br/>\r\n                  <span className={\"plan-price\"}>\r\n                    {props.configGeneral && props.configGeneral.simbolo_moneda ? props.configGeneral.simbolo_moneda : '$'}{displayTotalDiscount(plan.price)}\r\n                  </span>\r\n                </React.Fragment>\r\n              ) : ''}\r\n              <span className=\"plan-type\">\r\n                <br/>{plan.billing_period == 1 ? 'Mensual' : plan.billing_period+'-Meses'}</span>\r\n            </div>\r\n          </header>\r\n          <ul className=\"plan-features\">\r\n            <li><FaCheck /> Descripcion:{plan.description.length > 9 ? (\r\n              <React.Fragment>\r\n                {!props.isModal ? (\r\n                  <OverlayTrigger placement={'bottom'} overlay={\r\n                    <Tooltip id={\"tooltip-plan\"+plan.id}>\r\n                      <b>Descripción: </b><br/>{plan.description}\r\n                    </Tooltip>}>\r\n                    <span style={{color: \"rgb(228, 90, 59)\"}}> Ver detalle</span>\r\n                  </OverlayTrigger>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <span style={{color: \"rgb(228, 90, 59)\"}} onMouseOver={displayDescriptionParagraph} onMouseLeave={displayDescriptionParagraph}> Ver detalle</span>\r\n                    {displayDescription ? (\r\n                      <p style={{color: \"white\"}}>{plan.description}</p>\r\n                    ) : ''}\r\n                  </React.Fragment>\r\n                )}\r\n              </React.Fragment>\r\n            ) : (\r\n              <span> {plan.description}</span>\r\n            )}</li>\r\n            <li><FaCheck /> Descuento: {plan.discount}%</li>\r\n            <li><FaCheck /> Días de Prueba: {plan.day_test}</li>\r\n          </ul>\r\n          {props.update ? (\r\n            <div className=\"plan-select\"><a href=\"\" onClick={handleUpdate}>Modificar <br/> O <br/> Eliminar</a></div>\r\n          ) : props.disabled ? (\r\n            <span></span>\r\n          ) : (\r\n            <div className=\"plan-select\" onClick={handleSelect}><a href=\"\">Seleccionar</a></div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"plan\">\r\n          <header>\r\n            <h4 className=\"plan-title\">\r\n              {plan.name}\r\n            </h4>\r\n            <div className=\"plan-cost\">\r\n              <span className={!plan.discount ? \"plan-price\" : \"plan-price-discount\"}>\r\n                {props.configGeneral && props.configGeneral.simbolo_moneda ? props.configGeneral.simbolo_moneda : '$'}{formatNumber(plan.price,2,',','.')}\r\n              </span>\r\n              {plan.discount ? (\r\n                <React.Fragment>\r\n                  <br/>\r\n                  <span className={\"plan-price\"}>\r\n                    {props.configGeneral && props.configGeneral.simbolo_moneda ? props.configGeneral.simbolo_moneda : '$'}{displayTotalDiscount(plan.price)}\r\n                  </span>\r\n                </React.Fragment>\r\n              ) : ''}\r\n              <span className=\"plan-type\">\r\n                <br/>{plan.billing_period == 1 ? 'Mensual' : plan.billing_period+'-Meses'}</span>\r\n            </div>\r\n          </header>\r\n          <ul className=\"plan-features\">\r\n            <li><FaCheck /> Descripcion:{plan.description.length > 9 ? (\r\n              <React.Fragment>\r\n                {!props.isModal ? (\r\n                  <OverlayTrigger placement={'bottom'} overlay={\r\n                    <Tooltip id={\"tooltip-plan\"+plan.id}>\r\n                      <b>Descripción: </b><br/>{plan.description}\r\n                    </Tooltip>}>\r\n                    <span style={{color: \"rgb(228, 90, 59)\"}}> Ver detalle</span>\r\n                  </OverlayTrigger>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <span style={{color: \"rgb(228, 90, 59)\"}} onMouseOver={displayDescriptionParagraph} onMouseLeave={displayDescriptionParagraph}> Ver detalle</span>\r\n                    {displayDescription ? (\r\n                      <p style={{color: \"white\"}}>{plan.description}</p>\r\n                    ) : ''}\r\n                  </React.Fragment>\r\n                )}\r\n              </React.Fragment>\r\n            ) : (\r\n              <span> {plan.description}</span>\r\n            )}</li>\r\n            <li><FaCheck /> Descuento: {plan.discount}%</li>\r\n            <li><FaCheck /> Días de Prueba: {plan.day_test}</li>\r\n          </ul>\r\n          {props.update ? (\r\n            <div className=\"plan-select\"><a href=\"\" onClick={handleUpdate}>Modificar <br/> O <br/> Eliminar</a></div>\r\n          ) : props.disabled ? (\r\n            <span></span>\r\n          ) : (\r\n            <div className=\"plan-select\" onClick={handleSelect}><a href=\"\">Seleccionar</a></div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nTablePlansComponent.defaultProps = {\r\n  configGeneral : JSON.parse(localStorage.getItem('configGeneral'))\r\n}\r\n\r\nTablePlansComponent.propTypes = {\r\n  plan : PropTypes.object.isRequired,\r\n  stylePlan: PropTypes.object,\r\n  disabled: PropTypes.bool,\r\n  update: PropTypes.bool,\r\n  handleUpdate: PropTypes.func,\r\n  handleSelect: PropTypes.func,\r\n  isModal: PropTypes.bool,\r\n}\r\n\r\nexport default TablePlansComponent\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Col,\r\n  Image,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Badge\r\n} from 'react-bootstrap'\r\n\r\nconst EnterpriseCardComponent = ({enterprise,...props}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h4 style={{color: 'rgb(180, 55, 33)', textTransform: 'uppercase', fontSize: \"12px\"}}>{enterprise.bussines_name}</h4>\r\n      <Image src={require('../assets/img/logo/AIDY_01.jpg')} style={{width: '200px'}}/>\r\n      <br/>\r\n      <span className=\"letras_negras\">Estado :</span> {enterprise.is_open ? (<Badge variant=\"success\" className=\"font_badge\">Abierta</Badge>) : (<Badge variant=\"danger\" className=\"font_badge\">Cerrada</Badge>)}\r\n      <br/><br/>\r\n      <DropdownButton size=\"sm\" id={'drop'+enterprise.id} title=\"Acciones\" style={{width: \"100%\"}}>\r\n        <Dropdown.Item onClick={() => props.modifyRegister(enterprise)}>Modificar</Dropdown.Item>\r\n        <Dropdown.Item onClick={() => props.displayDetails(enterprise)}>Ver detalles</Dropdown.Item>\r\n        <Dropdown.Item onClick={() => props.deleteRegister(enterprise.id)}>Eliminar</Dropdown.Item>\r\n      </DropdownButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nEnterpriseCardComponent.propTypes = {\r\n  enterprise: PropTypes.object.isRequired,\r\n  modifyRegister: PropTypes.func.isRequired,\r\n  deleteRegister: PropTypes.func.isRequired,\r\n  displayDetails: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EnterpriseCardComponent\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Badge,\r\n  Modal,\r\n  Form,\r\n  Accordion,\r\n  Card\r\n} from 'react-bootstrap'\r\nimport 'styles/components/modalComponents.css'\r\nimport axios from 'axios'\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport { API_URL } from 'utils/constants'\r\nimport { toast } from 'react-toastify'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\n\r\nimport { connect } from 'react-redux'\r\nimport {formatNumber} from 'utils/functions'\r\nimport layoutHelpers from 'shared/layouts/helpers'\r\nimport EnterpriseCardComponent from 'components/EnterpriseCardComponent'\r\nimport 'styles/pages/enterprisePage.css'\r\nimport TablePlansComponent from 'components/TablePlansComponent'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nconst EnterprisePage = (props) => {\r\n\r\n  const [enterprises, setEnterprises] = useState([])\r\n  const [isOpenModal, setIsOpenModal] = useState(false)\r\n  const [modulesPlan, setModulesPlan] = useState([])\r\n  const [enterpriseDetail,setEnterpriseDetail] = useState({})\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  },[])\r\n\r\n  const fetchData = () => {\r\n    axios.get(API_URL+'enterprise').then(result => {\r\n      setEnterprises(result.data)\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const modifyRegister = data => {\r\n    props.history.replace('/enterprise/form/'+data.id)\r\n  }\r\n\r\n  const deleteRegister = id => {\r\n\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui-edit'>\r\n            <h1>¿Esta seguro?</h1>\r\n            <p className=\"font-alert\">¿Desea realmente borrar este registro?</p>\r\n            <button className=\"button-alert\"\r\n              onClick={() => {\r\n                confirmDeleteRegister(id);\r\n                onClose();\r\n              }}\r\n            >\r\n              Si, Aceptar\r\n            </button>\r\n            <button className=\"button-alert\" onClick={onClose}>No</button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  const confirmDeleteRegister = id => {\r\n    setDisplayLoading(true)\r\n    axios.delete(API_URL+'enterprise/'+id).then(result => {\r\n      toast.success('Proceso completado')\r\n      fetchData()\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const goToForm = () => {\r\n    props.history.replace('/enterprise/form')\r\n  }\r\n\r\n  const handleModal = () => {\r\n    setIsOpenModal(!isOpenModal)\r\n  }\r\n\r\n  const displayModules = modules => {\r\n    setModulesPlan(modules)\r\n    handleModal()\r\n  }\r\n\r\n  const displayDetails = enterpriseData => {\r\n    setEnterpriseDetail(enterpriseData)\r\n    console.log(enterpriseData,'aqui');\r\n    setTimeout(function () {\r\n      handleModal()\r\n    }, 200);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {displayLoading ? (\r\n        <Container fluid={true}>\r\n          <LoadingComponent />\r\n        </Container>\r\n      ) : (\r\n        <Container fluid={true}>\r\n          <Row className=\"\">\r\n            <Col sm={6} md={6} lg={6}>\r\n              <h4 className=\"title_principal\">Empresas Registradas</h4>\r\n              <Button size=\"sm\" variant=\"success\" block={true} type=\"button\" onClick={goToForm}>Crear Empresa <FaPlusCircle /></Button>\r\n            </Col>\r\n            <Col sm={6} md={6} lg={6} className=\"text-center\">\r\n              <h4 className=\"title_principal\">Total Empresas</h4>\r\n              <Badge variant=\"danger\">{enterprises.length}</Badge>\r\n            </Col>\r\n          </Row>\r\n          <hr/>\r\n          <Row className=\"justify-content-center\">\r\n            <Col sm={12} md={12} lg={12}>\r\n              <Row className=\"justify-content-center\">\r\n                {enterprises.map((v,i) => (\r\n                  <Col sm={4} md={4} lg={4} key={i} className=\"text-center mb-4\">\r\n                    <EnterpriseCardComponent\r\n                      enterprise={v}\r\n                      modifyRegister={modifyRegister}\r\n                      deleteRegister={deleteRegister}\r\n                      displayDetails={displayDetails}\r\n                    />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Modal\r\n            show={isOpenModal}\r\n            onHide={handleModal}\r\n            size=\"xl\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            style={{zIndex: '1000000'}}\r\n          >\r\n            <Modal.Header closeButton className=\"header_dark\">\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Detalles de la empresa {Object.keys(enterpriseDetail).length > 0 ? enterpriseDetail.bussines_name : ''}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Row className=\" justify-content-center\">\r\n                <Col sm={5} md={5} lg={5} style={{textAligment: \"justify\"}}>\r\n                  <h4 className=\"title_principal\">Datos de la Empresa</h4>\r\n                  <ul>\r\n                    <li className=\"str\"><b>Rut</b>: {Object.keys(enterpriseDetail).length > 0 ? enterpriseDetail.rut : ''}</li>\r\n                    <li className=\"str\"><b>Nombre</b>: {Object.keys(enterpriseDetail).length > 0 ? enterpriseDetail.name : ''}</li>\r\n                    <li className=\"str\"><b>Fono</b>: {Object.keys(enterpriseDetail).length > 0 ? enterpriseDetail.phone : ''}</li>\r\n                    <li className=\"str\"><b>Ciudad</b>: {Object.keys(enterpriseDetail).length > 0 ? enterpriseDetail.city : ''}</li>\r\n                    <li className=\"str\"><b>Comuna</b>: {Object.keys(enterpriseDetail).length > 0 ? enterpriseDetail.comuna : ''}</li>\r\n                    <li className=\"str\"><b>Dirección</b>: {Object.keys(enterpriseDetail).length > 0 ? enterpriseDetail.address : ''}</li>\r\n                  </ul>\r\n                </Col>\r\n                <Col sm={4} md={4} lg={4}>\r\n                  <h4 className=\"title_principal\">Plan de la Empresa</h4>\r\n                  <Row className=\"snip1404\">\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      {Object.keys(enterpriseDetail).length > 0 ? (\r\n                        <TablePlansComponent\r\n                          plan={enterpriseDetail.plan}\r\n                          disabled={true}\r\n                          update={false}\r\n                          isModal={true}\r\n                        />\r\n                      ) : ''}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <br/><br/>\r\n                  {Object.keys(enterpriseDetail).length > 0 ? (\r\n                    <Accordion>\r\n                      <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"header_card\">\r\n                          Modulos del plan ( hacer click para desplegar )\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                          <Card.Body>\r\n                            <Row>\r\n                              {enterpriseDetail.plan.modules.map((v,i) => (\r\n                                <Col sm={4} md={4} lg={4} xs={6} key={i}>\r\n                                  <Form.Group>\r\n                                    <Form.Check type=\"checkbox\"\r\n                                      custom\r\n                                      id={v.name_item+v.id}\r\n                                      label={(<span className=\"\">{v.name_item}</span>)}\r\n                                      value={v.id}\r\n                                      checked={true}\r\n                                      readOnly={true}\r\n                                      />\r\n                                  </Form.Group>\r\n                                </Col>\r\n                              ))}\r\n                            </Row>\r\n                          </Card.Body>\r\n                        </Accordion.Collapse>\r\n                      </Card>\r\n                    </Accordion>\r\n                  ): ''}\r\n                </Col>\r\n              </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button size=\"md\" variant=\"danger\" type=\"button\" onClick={handleModal}>Cerrar</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n      )}\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default EnterprisePage\r\n"],"sourceRoot":""}