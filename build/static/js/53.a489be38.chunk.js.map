{"version":3,"sources":["components/Table.jsx","../node_modules/react-bootstrap/esm/DropdownButton.js","components/input/InputComponentRef.jsx","pages/ExtendendedDaysPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","pageSizeHandler","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","pageSize","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","position","getCellProps","autoRemove","val","Table","propTypes","PropTypes","any","href","string","func","title","node","isRequired","bool","menuRole","renderMenuOnMount","rootCloseEvent","bsPrefix","DropdownButton","forwardRef","_ref","ref","children","props","_objectWithoutPropertiesLoose","createElement","Dropdown","_extends","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName","InputFieldRef","classFormGroup","cols","Group","Label","label","Control","name","handleChange","required","readOnly","readonly","step","onKeyUp","handleKeyUp","autoComplete","Feedback","messageErrors","v","replace","as","multiple","enterpriseColumns","ExtendendedDaysPage","useState","enterprises","setEnterprises","displaySection","setDisplaySection","isLoading","setIsLoading","enterprise","dataUpdate","setDataUpdate","validated","setValidated","inputRef","useRef","useEffect","fetchData","Header","accessor","Cell","props1","original","extra_days_test","extra_days_expire","block","Item","addDays","axios","get","API_URL","then","result","catch","err","tokenExpired","setTimeout","current","focus","fluid","sm","md","lg","xs","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","Object","assign","put","toast","success","noValidated","days","persist","oldData","xl"],"mappings":"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","file":"static/js/53.a489be38.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor, pageSizeHandler }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0, pageSize : pageSizeHandler[0] },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table_responsive_eddit\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {pageSizeHandler.map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td style={{position: \"relative\"}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {pageSizeHandler.map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor,pageSizeHandler}) => {\r\n  pageSizeHandler = pageSizeHandler ? pageSizeHandler : [10, 20, 30, 40, 50]; \r\n  return (\r\n    <Styles>\r\n      <DataTable pageSizeHandler={pageSizeHandler} data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n  pageSizeHandler : PropTypes.array,\r\n}\r\n\r\nexport default Table\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`.\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"]);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import React, { useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\nimport './InputComponent.css'\r\n\r\nconst InputFieldRef = React.forwardRef( (props,ref) => {\r\n\r\n  const classFormGroup = props.cols ? props.cols : \"col-md-6 col-sm-6\"\r\n  if(props.type !== \"select\" && props.type !== \"textarea\"){\r\n    return (\r\n      <Form.Group className={classFormGroup}>\r\n        <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n        <Form.Control\r\n          ref={ref}\r\n          id={props.id ? props.id : props.name}\r\n          type={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          step={props.step ? props.step : ''}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          className={props.className ? props.className+\" form-control-sm mainBorder\" : \"form-control-sm mainBorder\"}\r\n          style={props.style ? props.style : {}}\r\n          autoComplete={props.autoComplete ? props.autoComplete : 'xxx'}\r\n          />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {\r\n            props.messageErrors.map((v,i) => {\r\n              return <span key={i} className=\"error-input\">{v.replace(/[*]$/g,'')}</span>\r\n            })\r\n          }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"select\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n        <Form.Control\r\n          id={props.id ? props.id : props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          required={props.required}\r\n          multiple={props.multiple ? props.multiple : false}\r\n          ref={ref ? ref : null}\r\n          className={props.className ? props.className+\" form-control-sm mainBorder\" : \"form-control-sm mainBorder\"}\r\n          style={props.style ? props.style : {}}\r\n          autoComplete={props.autoComplete ? props.autoComplete : 'xxx'}\r\n        >\r\n          {props.children}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {\r\n            props.messageErrors.map((v,i) => {\r\n              return <span key={i} className=\"error-input\">{v.replace(/[*]$/g,'')}</span>\r\n            })\r\n          }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"textarea\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n        <Form.Control\r\n          id={props.id ? props.id : props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          rows={props.rows ? props.rows : 2}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          ref={ref ? ref : null}\r\n          className={props.className ? props.className+\" form-control-sm mainBorder\" : \"form-control-sm mainBorder\"}\r\n          style={props.style ? props.style : {}}\r\n          autoComplete={props.autoComplete ? props.autoComplete : 'xxx'}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {\r\n            props.messageErrors.map((v,i) => {\r\n              return <span key={i} className=\"error-input\">{v.replace(/[*]$/g,'')}</span>\r\n            })\r\n          }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }\r\n\r\n})\r\n\r\nInputFieldRef.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleKeyUp: PropTypes.func,\r\n  value: PropTypes.any,\r\n  cols: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  errors: PropTypes.array,\r\n  messageErrors: PropTypes.array,\r\n  readonly: PropTypes.bool,\r\n  multiple: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  steps: PropTypes.string,\r\n  autoComplete: PropTypes.bool,\r\n}\r\n\r\nexport default InputFieldRef\r\n","import React, {useEffect,useState,useMemo,useRef} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport {API_URL} from 'utils/constants'\r\nimport {Container,Row,Col,Button,Dropdown,DropdownButton,Form,Badge} from 'react-bootstrap'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\nimport Table from 'components/Table'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport { toast } from 'react-toastify'\r\n\r\nlet enterpriseColumns = []\r\n\r\nexport default function ExtendendedDaysPage(props) {\r\n\r\n  const [enterprises,setEnterprises] = useState([])\r\n  const [displaySection,setDisplaySection] = useState(1)\r\n  const [isLoading,setIsLoading] = useState(true)\r\n  const [dataUpdate,setDataUpdate] = useState({\r\n    enterprise : {},\r\n    type: false // false para test days y true para expired days\r\n  })\r\n  const [validated,setValidated] = useState(false)\r\n  const inputRef = useRef(null)\r\n  \r\n  useEffect(() => {\r\n    fetchData()\r\n  },[])\r\n\r\n  enterpriseColumns = useMemo(() => {\r\n    return [\r\n      {\r\n        Header : \"Empresa\",\r\n        accessor: \"bussines_name\"\r\n      },\r\n      {\r\n        Header : \"Rut\",\r\n        accessor: \"rut\"\r\n      },\r\n      {\r\n        Header : \"Email\",\r\n        accessor: \"email_enterprise\"\r\n      },\r\n      {\r\n        Header : \"Fono\",\r\n        accessor: \"phone\"\r\n      },\r\n      {\r\n        Header : \"Dias Prueba\",\r\n        accessor: \"extra_days_test\",\r\n        Cell : props1 => {\r\n\r\n          return (<Badge variant=\"danger\" className=\"font-badge\">{props1.cell.row.original.extra_days_test}</Badge>)\r\n        }\r\n      },\r\n      {\r\n        Header : \"Dias Expiración\",\r\n        accessor: \"extra_days_expire\",\r\n        Cell : props1 => {\r\n\r\n          return (<Badge variant=\"danger\" className=\"font-badge\">{props1.cell.row.original.extra_days_expire}</Badge>)\r\n        }\r\n      },\r\n      {\r\n        Header : \"Acción\",\r\n        accessor: \"\",\r\n        Cell : props1 => {\r\n          const original = props1.cell.row.original\r\n          return (\r\n            <DropdownButton size=\"sm\" id={'drop'+original.id} title=\"Seleccione\"  block=\"true\">\r\n              <Dropdown.Item onClick={() => addDays(original,false)}>Agregar dias de prueba</Dropdown.Item>\r\n              <Dropdown.Item onClick={() => addDays(original,true)}>Agregar dias de plazo de vencimiento</Dropdown.Item>\r\n            </DropdownButton>\r\n          )\r\n        }\r\n      },\r\n    ] \r\n  },[])\r\n\r\n  const fetchData = () =>{\r\n    axios.get(API_URL+\"enterprise_all\").then(result => {\r\n      setEnterprises(result.data)\r\n      setIsLoading(false)\r\n    }).catch(err => { \r\n      setIsLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const addDays = (data,type) => {\r\n    setDataUpdate({\r\n      enterprise : data,\r\n      type\r\n    })\r\n    setDisplaySection(2)\r\n    setTimeout(() => {\r\n      inputRef.current.focus()\r\n    },400)\r\n  }\r\n\r\n  const onChange = e => {\r\n    e.persist()\r\n    setDataUpdate(oldData => {\r\n      return {\r\n        enterprise : Object.assign({},oldData.enterprise, {\r\n          days: e.target.value\r\n        }),\r\n        type: oldData.type\r\n      }\r\n    })\r\n  }\r\n\r\n  const onSubmit = e => {\r\n\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let data = Object.assign({},dataUpdate)\r\n    setIsLoading(true)\r\n\r\n    axios.put(API_URL+\"enterprise_extra_days/\"+data.enterprise.id,data).then(result => {\r\n      toast.success(\"Dias agregados con éxito\")\r\n      setDisplaySection(1)\r\n      fetchData()\r\n    }).catch(err => {\r\n      props.tokenExpired(err)\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      {isLoading ? (\r\n        <LoadingComponent />\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col sm={6} md={6} lg={6} xs={12}>\r\n              <h4 className=\"title_principal\">Empresas Registradas</h4>\r\n            </Col>\r\n            <Col sm={6} md={6} lg={6} xs={12} className=\"text-right\">\r\n              <h5>Total Empresas: <Badge variant=\"danger\" className=\"title_badge\">{enterprises.length}</Badge></h5>\r\n            </Col>\r\n          </Row>\r\n          {displaySection === 1 ? (\r\n            <Row>\r\n              <Col>\r\n                <Table data={enterprises} columns={enterpriseColumns}/>\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <Form onSubmit={onSubmit} noValidated validated={validated}>\r\n              <Row className=\"justify-content-center\">\r\n                <InputFieldRef\r\n                  ref={inputRef}\r\n                  type='number'\r\n                  label='Modificar Cantidad de dias'\r\n                  name='days'\r\n                  required={true}\r\n                  messageErrors={[\r\n                    'Requerido*'\r\n                  ]}\r\n                  cols='col-md-6 col-lg-6 col-sm-6 col-xs-12'\r\n                  value={dataUpdate.enterprise.days}\r\n                  handleChange={onChange}\r\n                />\r\n              </Row>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={4} md={4} lg={4} xs={12} xl={4}>\r\n                  <Button variant=\"primary\" block={true} size=\"sm\" type=\"submit\">Enviar</Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n"],"sourceRoot":""}