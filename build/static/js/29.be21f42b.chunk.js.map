{"version":3,"sources":["pages/UserCreatePage.jsx"],"names":["UserCreatePage","props","useState","name","email","rut","password","id_rol","userData","setUserData","modulesUser","setModulesUser","roles","setRoles","modules","setModules","validated","setValidated","isFormClean","setIsFormClean","isUpdate","setIsUpdate","useEffect","promises","axios","get","API_URL","match","params","id","push","Promise","all","then","result","data","user","userModules","map","v","id_menu","catch","err","toast","error","fetchModules","onChange","e","target","value","handleAccess","a","persist","checked","filter","goToListUser","history","replace","renderMenuNew","type","menu","setMenu","setTimeout","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","length","Object","assign","put","success","response","message","post","noValidate","sm","md","lg","xs","className","inputName","handleChange","inputEmail","inputRut","inputPassword","inputSelect","i","key","name_role","size","variant","block","onClick","Group","Check","custom","name_item","label","find","f","arreglo","defaultProps","required","messageErrors","cols","connect"],"mappings":"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","file":"static/js/29.be21f42b.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FaCheckCircle, FaTrashAlt, FaPlusCircle,FaUsers } from \"react-icons/fa\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Container,\r\n} from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { setMenu } from 'actions/menu'\r\nimport InputField from 'components/input/InputComponent'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { API_URL } from 'utils/constants'\r\nimport 'styles/pages/users.css'\r\nlet count = 0\r\n\r\nconst UserCreatePage  = props => {\r\n\r\n  const [userData,setUserData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    rut: \"\",\r\n    password: \"\",\r\n    id_rol: \"\"\r\n  })\r\n  const [modulesUser,setModulesUser] = useState([])\r\n  const [roles,setRoles] = useState([])\r\n  const [modules,setModules] = useState([])\r\n  const [validated, setValidated] = useState(false);\r\n  const [isFormClean, setIsFormClean] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n\r\n  const fetchModules = () => {\r\n\r\n    let promises = [\r\n      axios.get(API_URL+'modules'),\r\n      axios.get(API_URL+'roles'),\r\n    ]\r\n\r\n    if(props.match.params.id > 0){\r\n      promises.push(\r\n        axios.get(API_URL+'user/'+props.match.params.id),\r\n      )\r\n    }\r\n\r\n    Promise.all(promises).then(result => {\r\n      setModules(result[0].data)\r\n      setRoles(result[1].data)\r\n\r\n      if(props.match.params.id){\r\n        setUserData({\r\n          name: result[2].data.user.name,\r\n          email: result[2].data.user.email,\r\n          rut: result[2].data.user.rut,\r\n          password: \"\",\r\n          id_rol: result[2].data.user.id_rol\r\n        })\r\n        const userModules = result[2].data.modules.map(v => v.id_menu)\r\n        setModulesUser(userModules)\r\n        setIsUpdate(true)\r\n      }\r\n    }).catch(err => {\r\n      toast.error('Error, contacte con soporte')\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchModules()\r\n  },[])\r\n\r\n  const onChange = e => {\r\n    setUserData({ ...userData, [e.target.name] : e.target.value })\r\n  }\r\n\r\n  const handleAccess = async (e,id) => {\r\n    e.persist()\r\n    if(e.target.checked){\r\n      await setModulesUser([...modulesUser,id])\r\n    }else{\r\n      setModulesUser(modulesUser.filter(v => v != e.target.value))\r\n    }\r\n  }\r\n\r\n  const addAllModules = () => {\r\n    let arreglo = modules.map(v => v.id)\r\n    setModulesUser(arreglo)\r\n  }\r\n\r\n  const removeAllModules = () => {\r\n    setModulesUser([])\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n    if(modulesUser.length === 0){\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      toast.error('Debe escoger al menos un mÃ³dulo para el usuario')\r\n      return\r\n    }\r\n\r\n    let user = Object.assign({},userData,{\r\n      modules: modulesUser\r\n    })\r\n\r\n    if(!isUpdate){\r\n      if(!user.password){\r\n        toast.error('Debe escribir una contraseÃ±a')\r\n        return false\r\n      }\r\n    }\r\n\r\n    if(isUpdate){\r\n      axios.put(API_URL+'user/'+props.match.params.id,user).then(result => {\r\n        toast.success('Usuario Modificado')\r\n        renderMenuNew(true)\r\n      }).catch(err => {\r\n        const { response } = err\r\n        if(response){\r\n          toast.error(response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }else{\r\n      axios.post(API_URL+'user',user).then(result => {\r\n        toast.success('Usuario Registrado')\r\n        renderMenuNew(false)\r\n      }).catch(err => {\r\n        const { response } = err\r\n        if(response){\r\n          toast.error(response.data.message)\r\n        }else{\r\n          toast.error('Error, contacte con soporte')\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const cleanForm = () => {\r\n    setUserData({\r\n      name: \"\",\r\n      email: \"\",\r\n      rut: \"\",\r\n      password: \"\",\r\n      id_rol: \"\"\r\n    })\r\n    setModulesUser([])\r\n    setValidated(false)\r\n    setIsFormClean(true)\r\n  }\r\n\r\n  const goToListUser = () => {\r\n    props.history.replace('/user/list')\r\n  }\r\n\r\n  const renderMenuNew = async type => {\r\n    const menu = await axios.get(API_URL+'menu_user')\r\n    props.setMenu(menu.data)\r\n    if(type){\r\n      setTimeout(() => {\r\n        props.history.push('/user/list')\r\n      },1000)\r\n    }else{\r\n      cleanForm()\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Container>\r\n      <Form onSubmit={onSubmit} noValidate validated={validated}>\r\n        <Row>\r\n          <Col\r\n            sm={6} md={6} lg={6} xs={12} className=\"containerDivSeparated\">\r\n            <h3 className=\"text-center font-title\">Formulario</h3>\r\n            <br/>\r\n            <Row>\r\n              <InputField\r\n                { ...props.inputName}\r\n                handleChange={onChange}\r\n                value={userData.name}\r\n                />\r\n              <InputField\r\n                { ...props.inputEmail}\r\n                handleChange={onChange}\r\n                value={userData.email}\r\n                />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                { ...props.inputRut}\r\n                handleChange={onChange}\r\n                value={userData.rut}\r\n                />\r\n              <InputField\r\n                { ...props.inputPassword}\r\n                handleChange={onChange}\r\n                value={userData.password}\r\n                />\r\n            </Row>\r\n            <Row>\r\n              <InputField\r\n                { ...props.inputSelect}\r\n                handleChange={onChange}\r\n                value={userData.id_rol}\r\n              >\r\n                <option value=''>--Seleccione--</option>\r\n                {roles.map((v,i) => (\r\n                  <option key={i} value={v.id}>{v.name_role}</option>\r\n                ))}\r\n              </InputField>\r\n            </Row>\r\n            {isFormClean ? (\r\n              <Row>\r\n                <Col sm={6} md={6} lg={6} xs={6}>\r\n                  <Button size=\"sm\" type=\"button\" variant=\"primary\" block onClick={() => setIsFormClean(false)}>Registrar Otro <FaPlusCircle /></Button>\r\n                </Col>\r\n                <Col sm={6} md={6} lg={6} xs={6}>\r\n                  <Button size=\"sm\" type=\"button\" variant=\"warning\" block onClick={goToListUser}>Ir al listado <FaUsers /></Button>\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              <Row>\r\n                <Col sm={12} md={12} lg={12} xs={12} className=\"text-center\">\r\n                  <Button size=\"sm\" type=\"submit\" variant=\"primary\" block>Enviar <FaPlusCircle /></Button>\r\n                    o\r\n                  <Button size=\"sm\" onClick={goToListUser} type=\"button\" variant=\"info\" block>Ir al Listado</Button>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </Col>\r\n          <Col sm={6} md={6} lg={6} xs={12} className=\"containerDivSeparated\">\r\n            <h3 className=\"text-center font-title\">MÃ³dulos</h3>\r\n            <Row>\r\n              {modules.map((v,i) => (\r\n                <Col sm={4} md={4} lg={4} xs={6} key={i}>\r\n                  <Form.Group>\r\n                    <Form.Check type=\"checkbox\"\r\n                      custom\r\n                      id={v.name_item+v.id}\r\n                      label={v.name_item}\r\n                      value={v.id}\r\n                      checked={!!modulesUser.find(f => f == v.id)}\r\n                      onChange={(e) => handleAccess(e,v.id) } />\r\n                  </Form.Group>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n            <div className=\"fixedBottom\">\r\n              <Row>\r\n                <Col sm={6} md={6} lg={6} xs={12}>\r\n                  <Button size=\"sm\" variant=\"secondary\" block={true} onClick={addAllModules}>Seleccionar Todos <FaCheckCircle /></Button>\r\n                </Col>\r\n                <Col sm={6} md={6} lg={6} xs={12}>\r\n                  <Button size=\"sm\" variant=\"secondary\" block={true} onClick={removeAllModules}>Deseleccionar Todos <FaTrashAlt /></Button>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={12} md={12} lg={12}>\r\n                  <br/>\r\n                  <p>Hacer click en el botÃ³n enviar para guardar los cambios</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n    </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nUserCreatePage.defaultProps = {\r\n  inputName: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'name',\r\n    label : 'Nombre Completo',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputEmail: {\r\n    type: 'email',\r\n    required: true,\r\n    name: 'email',\r\n    label : 'Email',\r\n    messageErrors: [\r\n      'Requerido*, ','Formato tipo Email*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputRut: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'rut',\r\n    label : 'Documento Identidad',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputPassword: {\r\n    type: 'password',\r\n    required: false,\r\n    name: 'password',\r\n    label : 'ContraseÃ±a',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n  inputSelect: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'id_rol',\r\n    label : 'Rol',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n    cols:\"col-sm-6 col-md-6 col-lg-6 col-xs-6\"\r\n  },\r\n}\r\n\r\nUserCreatePage.propTypes = {\r\n  setMenu: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(){\r\n    return {\r\n      setMenu,\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps())(UserCreatePage)\r\n"],"sourceRoot":""}