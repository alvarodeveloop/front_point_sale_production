{"version":3,"sources":["assets/img/utils/empty_logo.jpg","components/modals/ScanEanModal.jsx","components/QuaggaScanner.jsx","components/FormProductSale.jsx","pages/ProductFormPage.jsx"],"names":["module","exports","ScanEanModal","props","show","onHide","size","aria-labelledby","centered","Header","closeButton","className","Title","id","Body","style","width","paddingLeft","catchCode","Footer","onClick","QuaggaScanner","useEffect","initQuagga","Quagga","stop","init","inputStream","name","type","target","document","querySelector","numOfWorkers","navigator","hardwareConcurrency","constraints","height","decoder","readers","err","toast","error","console","log","start","last_result","onDetected","data","last_code","codeResult","code","push","length","ordeByConcurrency","arr","count","forEach","v","Object","keys","sort","curtKey","nextKey","FormProductSale","useState","name_product","code_ean","description","is_neto","id_category","is_auto_sale","img_product","method_sale","price","qr_image","sticker_color","detailCost","pack","categoryNames","minimun_stock","quantity","cost","cost_details","id_provider","dataProduct","setDataProduct","dataDetailHandle","isOpenScan","setIsOpenScan","setConfig","category","setCategory","validate","setValidate","isUpdate","setIsUpdate","imgProduct","setImgProduct","galleryImg","setGalleryImg","indexCarrousel","setIndexCarrousel","galleryImgUpdate","setGalleryImgUpdate","htmlImgGallery","setHtmlImgGallery","textButton","setTextButton","isSubmit","setIsSubmit","isShowPackField","setIsShowPackField","src","require","roundedCircle","imgComponent","setImgComponent","inventarySection","setInventarySection","providers","setProviders","inputRef","useRef","fetchData","cleanForm","displayGalleryImg","onChange","e","a","value","val","promise","axios","get","API_URL","match","params","isInventary","atob","Promise","all","then","result","warning","categories","map","label","name_category","inventary","thumbnail","gallery","catch","response","message","onSubmit","current","checkValidity","formData","FormData","objectNew","assign","concat","i","append","name_categories","item","substring","route_param","put","formDataGallery","filename","success","setTimeout","goToTable","handleSubmitProduct","post","file","readerImg","img64","Item","key","alt","Caption","sm","md","lg","variant","title","removeImgFromGallery","groupHtml","groupHtmlUpdate","index","objectGallery","history","replace","showInventariSection","fluid","noValidate","validated","ref","required","messageErrors","cols","handleChange","detail","step","Group","Label","isMulti","options","social_razon","disabled","block","xs","getElementById","click","display","files","reader","FileReader","onload","event","readAsDataURL","inputNameProduct","placeholder","inputPrice","inputDescription","Toggle","as","Card","eventKey","Collapse","inputCodeEan","removeAttribute","setAttribute","inputSticker","inputMethodSale","inputPack","multiple","accept","activeIndex","onSelect","selectedIndex","defaultProps","readonly","inputIsNeto","inputAutoSale","inputCategory","ProductFormPage","localStorage","getItem","layoutHelpers","toggleCollapsed"],"mappings":"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","file":"static/js/29.12b480fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/empty_logo.258d3697.jpg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport{\r\n  Modal,\r\n  Button,\r\n  Row,\r\n  Col\r\n} from 'react-bootstrap'\r\nimport 'styles/components/modalComponents.css'\r\nimport QuaggaScanner from 'components/QuaggaScanner'\r\n\r\nconst ScanEanModal = (props) => {\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered>\r\n        <Modal.Header closeButton className=\"header_dark\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div style={{width: '100%', paddingLeft: '25%'}}>\r\n            <QuaggaScanner catchCode={props.catchCode}/>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button size=\"sm\" onClick={props.onHide}>Cerrar</Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nScanEanModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  catchCode: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ScanEanModal\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { barcode } from 'utils/scan'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport 'styles/components/scan.css'\r\nimport Quagga from 'quagga';\r\nimport { toast } from 'react-toastify'\r\n\r\nconst  QuaggaScanner= (props) => {\r\n\r\n  useEffect(() => {\r\n    initQuagga()\r\n    return () => {\r\n      Quagga.stop()\r\n    }\r\n  },[])\r\n\r\n  const initQuagga = () => {\r\n    Quagga.init({\r\n      inputStream : {\r\n        name : \"Live\",\r\n        type : \"LiveStream\",\r\n        target: document.querySelector('#camera'),\r\n        numOfWorkers: navigator.hardwareConcurrency,\r\n        constraints: {\r\n          width: 300,\r\n          height: 300,\r\n        },\r\n      },\r\n      decoder : {\r\n        readers : [\"ean_reader\"]\r\n      }\r\n    }, function(err) {\r\n      if (err) {\r\n        toast.error('Error, revise que la cámara de su dispositivo este conectada')\r\n        return\r\n      }\r\n      console.log(\"Initialization finished. Ready to start\");\r\n      Quagga.start();\r\n    });\r\n\r\n    let last_result = []\r\n    Quagga.onDetected(data => {\r\n\r\n      let last_code = data.codeResult.code\r\n      last_result.push(last_code)\r\n      if(last_result.length > 20){\r\n        let code = ordeByConcurrency(last_result)[0]\r\n        props.catchCode(code)\r\n      }\r\n    })\r\n  }\r\n\r\n  const ordeByConcurrency = arr => {\r\n    let count  = {}\r\n    arr.forEach(v => {\r\n      if(!count[v]){\r\n        count[v] = 0\r\n      }\r\n      count[v]++\r\n    })\r\n\r\n    return Object.keys(count).sort((curtKey,nextKey) => {\r\n      return count[curtKey] < count[nextKey]\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div id=\"camera\"></div>\r\n  )\r\n}\r\n\r\nQuaggaScanner.propTypes = {\r\n  catchCode: PropTypes.func.isRequired\r\n}\r\n\r\nexport default QuaggaScanner\r\n","import React, { useMemo, useState,useEffect,useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport 'styles/pages/productStyle.css'\r\nimport { FaImage,FaPlusCircle, FaTrash } from \"react-icons/fa\";\r\nimport InputField from 'components/input/InputComponent'\r\nimport { toast } from 'react-toastify'\r\nimport { readerImg } from 'utils/functions'\r\nimport { API_URL } from 'utils/constants'\r\nimport ScanEanModal from 'components/modals/ScanEanModal'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport Select from 'react-select';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Image,\r\n  Card,\r\n  Modal,\r\n  Carousel,\r\n  Accordion,\r\n} from 'react-bootstrap'\r\n\r\nconst FormProductSale = (props) => {\r\n\r\n  const [dataProduct,setDataProduct] = useState({\r\n    name_product: '',\r\n    code_ean: '',\r\n    description: '',\r\n    is_neto: true,\r\n    id_category: [],\r\n    is_auto_sale: false,\r\n    img_product: '',\r\n    method_sale: 1,\r\n    price:'',\r\n    qr_image:'',\r\n    sticker_color: '#9c7901',\r\n    detailCost: [],\r\n    pack: '',\r\n    categoryNames: '',\r\n    minimun_stock: 10,\r\n    quantity : '',\r\n    cost : '',\r\n    cost_details : '',\r\n    id_provider : []\r\n  })\r\n\r\n\r\n  const [dataDetailHandle, setDataDetailHandle] = useState(false) //  variable para guardar temporalmente la data del detalle de los costos\r\n  const [isOpenScan, setIsOpenScan] = useState(false)\r\n  const [config, setConfig] = useState([])\r\n  const [category, setCategory] = useState([])\r\n  const [validate, setValidate] = useState(false)\r\n  const [isUpdate, setIsUpdate] = useState(false)\r\n  const [imgProduct, setImgProduct] = useState('')\r\n  const [galleryImg, setGalleryImg] = useState({})\r\n  const [indexCarrousel,setIndexCarrousel] = useState(0)\r\n  const [galleryImgUpdate, setGalleryImgUpdate] = useState({})\r\n  const [htmlImgGallery, setHtmlImgGallery] = useState('')\r\n  const [textButton, setTextButton] = useState('Guardar')\r\n  const [isSubmit, setIsSubmit] = useState(false)\r\n  const [galleryFromUpdate, setGalleryFromUpdate] = useState([])\r\n  const [isShowPackField, setIsShowPackField] = useState(false)\r\n  const [imgComponent, setImgComponent] = useState(\r\n    <Image src={  require('../assets/img/utils/empty_logo.jpg') }\r\n      id=\"imagen_logo\" style={{ width: '100px' }} roundedCircle />\r\n  )\r\n  const [inventarySection,setInventarySection] = useState(false)\r\n  const [providers,setProviders] = useState([])\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n    return () => {\r\n      cleanForm()\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    displayGalleryImg()\r\n  },[galleryImg,galleryImgUpdate])\r\n\r\n  const onChange = async e => {\r\n\r\n    if(e.target.name === \"method_sale\"){\r\n      let val_pack = ''\r\n      if(e.target.value == 2){\r\n        setIsShowPackField(true)\r\n      }else{\r\n        setIsShowPackField(false)\r\n      }\r\n      await setDataProduct({...dataProduct, [e.target.name] : e.target.value})\r\n    }else if(e.target.name === \"is_neto\" || e.target.name === \"is_auto_sale\"){\r\n      let val = e.target.value === \"true\" ? true : false\r\n      await setDataProduct({...dataProduct, [e.target.name] : val})\r\n    }else{\r\n      await setDataProduct({...dataProduct, [e.target.name] : e.target.value})\r\n    }\r\n  }\r\n\r\n  const onChangeSelect = val => {\r\n    setDataProduct({...dataProduct, id_category : val})\r\n  }\r\n\r\n  const fetchData = () => {\r\n    let promise = [\r\n      axios.get(API_URL+'category'),\r\n      axios.get(API_URL+'config_general'),\r\n      axios.get(API_URL+'provider'),\r\n    ]\r\n\r\n    if(props.match.params.id){\r\n      if(props.isInventary){\r\n        promise.push(\r\n          axios.get(API_URL+'product/'+atob(props.match.params.id))\r\n        )\r\n      }else{\r\n        promise.push(\r\n          axios.get(API_URL+'product/'+props.match.params.id)\r\n        )\r\n      }\r\n    }\r\n    Promise.all(promise).then(result => {\r\n\r\n      if(result[0].data){\r\n        setCategory(result[0].data)\r\n      }else{\r\n        toast.warning('Debe realizar su configuración general')\r\n      }\r\n      setConfig(result[1].data)\r\n      setProviders(result[2].data)\r\n\r\n      if(result.length > 3){\r\n        if(props.isInventary){\r\n          setDataProduct({\r\n            name_product: result[3].data.name_product,\r\n            code_ean: result[3].data.code_ean,\r\n            description: result[3].data.description,\r\n            is_neto: result[3].data.is_neto,\r\n            id_category: result[3].data.categories.map(v => { return {value: v.categories.id, label : v.categories.name_category} }),\r\n            is_auto_sale: result[3].data.is_auto_sale,\r\n            img_product: result[3].data.img_product,\r\n            method_sale: result[3].data.method_sale,\r\n            price:result[3].data.price,\r\n            qr_image:result[3].data.qr_image,\r\n            sticker_color: result[3].data.sticker_color,\r\n            detailCost: result[3].data.cost_details,\r\n            pack: result[3].data.pack,\r\n            minimun_stock: result[3].data.inventary[0].minimun_stock,\r\n          })\r\n          \r\n          if(result[3].data.method_sale == 2){\r\n            setIsShowPackField(true)\r\n          }\r\n          setIsUpdate(true)\r\n\r\n          if(result[3].data.img_product){\r\n            setImgComponent(\r\n              <Image src={  API_URL+'images/product/principal/'+ result[3].data.img_product}\r\n                id=\"imagen_logo\" style={{ width: '80px' }} thumbnail />\r\n            )\r\n          }\r\n\r\n          if(result[3].data.gallery.length > 0){\r\n            setGalleryImgUpdate(result[3].data.gallery)\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    }).catch(err => {\r\n      if(err.response){\r\n        toast.error(err.response.data.message)\r\n      }else{\r\n        console.log(err)\r\n        toast.error('Error,contacte con soporte')\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  const onSubmit = async () => {\r\n\r\n    try {\r\n      const form = inputRef.current;\r\n      if (form.checkValidity() === false) {\r\n        setValidate(true);\r\n        return\r\n      }\r\n\r\n      let formData = new FormData()\r\n\r\n      let objectNew = Object.assign({},dataProduct,{\r\n        detailCost: dataProduct.detailCost.concat(dataDetailHandle)\r\n      })\r\n\r\n      Object.keys(objectNew).forEach((v,i) => {\r\n        if(v === 'img_product'){\r\n          if(imgProduct){\r\n            formData.append(v,imgProduct)\r\n          }\r\n        }else if( v === 'id_category'){\r\n          let name_categories = \"\"\r\n          dataProduct[v].forEach((item, i) => {\r\n            formData.append('id_category',item.value)\r\n            name_categories+= item.label+\",\"\r\n          });\r\n          name_categories = name_categories.substring(0,name_categories.length - 1)\r\n          formData.append('name_categories',name_categories)\r\n        }else{\r\n          formData.append(v,dataProduct[v])\r\n        }\r\n      })\r\n\r\n      setTextButton('Guardando Datos, Espere por favor...')\r\n      setIsSubmit(true)\r\n      if(isUpdate){\r\n        let route_param = props.isInventary ? atob(props.match.params.id) : props.match.params.id\r\n        let result = await axios.put(API_URL+'product/'+route_param,formData)\r\n\r\n        setTextButton('Trabajando en galeria de imagénes...')\r\n\r\n        let formDataGallery = new FormData()\r\n        Object.keys(galleryImg).forEach((v,i) => {\r\n          formDataGallery.append('gallery',galleryImg[v])\r\n        })\r\n        Object.keys(galleryImgUpdate).forEach((v,i) => {\r\n          formDataGallery.append('galleryUpdate',galleryImgUpdate[v].filename)\r\n        })\r\n        await axios.put(API_URL+'update_gallery/'+route_param,formDataGallery)\r\n        toast.success('Producto Modificado')\r\n\r\n        setTimeout(() => {\r\n          if(props.isInventary){\r\n            goToTable()\r\n          }else{\r\n            props.handleSubmitProduct(Object.assign({},result.data))\r\n          }\r\n        },1500)\r\n\r\n      }else{\r\n        let result = await axios.post(API_URL+'product',formData)\r\n\r\n        if(galleryImg.length > 0){\r\n\r\n          setTextButton('Guardando Galeria de Imagenes...')\r\n\r\n          let formDataGallery = new FormData()\r\n          Object.keys(galleryImg).forEach((v,i) => {\r\n            formDataGallery.append('gallery',galleryImg[v])\r\n          })\r\n          formDataGallery.append('id_product',result.data.id)\r\n          await axios.post(API_URL+'product_gallery',formDataGallery)\r\n          toast.success('Producto Creado')\r\n          setTextButton('Guardar')\r\n          setIsSubmit(false)\r\n          setIsShowPackField(false)\r\n          cleanForm()\r\n        }else{\r\n          toast.success('Producto Creado')\r\n          setTextButton('Guardar')\r\n          setIsSubmit(false)\r\n          setIsShowPackField(false)\r\n          cleanForm()\r\n        }\r\n        setTimeout(function () {\r\n          if(props.isInventary){\r\n            goToTable()\r\n          }else{\r\n            props.handleSubmitProduct(Object.assign({},result.data))\r\n          }\r\n        }, 1500);\r\n      }\r\n    } catch (err) {\r\n      setTextButton('Guardar')\r\n      setIsSubmit(false)\r\n     if(err.response){\r\n       toast.error(err.response.data.message)\r\n     }else{\r\n       console.log(err);\r\n       toast.error('Error, contacte con soporte')\r\n     }\r\n    }\r\n  }\r\n\r\n  const cleanForm = () => {\r\n\r\n    setDataProduct({\r\n      name_product: '',\r\n      cost: '',\r\n      code_ean: '',\r\n      description: '',\r\n      is_neto: '',\r\n      id_category: '',\r\n      is_auto_sale: '',\r\n      img_product: '',\r\n      method_sale: '',\r\n      price:'',\r\n      qr_image:'',\r\n      sticker_color: '#9c7901',\r\n      detailCost: [],\r\n      pack : '',\r\n      categoryNames: '',\r\n      minimun_stock : 0\r\n    })\r\n\r\n    setImgProduct(null)\r\n    setImgComponent(null)\r\n    setGalleryImg({})\r\n    setHtmlImgGallery('')\r\n\r\n    setImgComponent(\r\n      <Image src={  require('../assets/img/utils/empty_logo.jpg') }\r\n        id=\"img_show\" style={{ width: '80px' }} roundedCircle />\r\n    )\r\n\r\n    //document.getElementById('code_ean').setAttribute('readonly',true)\r\n\r\n  }\r\n\r\n  const pickLogo = () => {\r\n    document.getElementById('file_product').click()\r\n  }\r\n\r\n  const readImgProduct = e => {\r\n\r\n    let file = e.target.files[0];\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = event => {\r\n      // The file's text will be printed here\r\n\r\n      setImgComponent(\r\n        <Image src={ event.target.result }\r\n          id=\"img_show\" style={{ width: '80%' }} roundedCircle />\r\n      )\r\n\r\n      setImgProduct(file)\r\n\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  const displayInputGallery = () => {\r\n    document.getElementById('galleryImg').click()\r\n  }\r\n\r\n  const displayGalleryImg = async () => {\r\n\r\n    let file = \"\"\r\n    let count = 0\r\n     let groupHtml = await Promise.all(Object.keys(galleryImg).map( async (v,i) => {\r\n       file = galleryImg[v]\r\n       let img64  = await readerImg(file)\r\n       return(\r\n          <Carousel.Item key={i}>\r\n            <img\r\n              className=\"d-block\"\r\n              src={img64}\r\n              alt=\"First slide\"\r\n              style={{height: \"300px\", width: \"100%\" }}\r\n              />\r\n            <Carousel.Caption>\r\n              <Row className=\"justify-content-center\">\r\n                <Col sm={5} md={5} lg={5}>\r\n                  <Button size=\"sm\" variant=\"dark\" title=\"Eliminar\" onClick={() => removeImgFromGallery(v,false) } className=\"buttonTrashGallery\">Eliminar <FaTrash /></Button>\r\n                </Col>\r\n              </Row>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        )\r\n     }))\r\n\r\n     let groupHtmlUpdate = await Promise.all(Object.keys(galleryImgUpdate).map( async (v,i) => {\r\n       file = galleryImgUpdate[v]\r\n       return (\r\n         <Carousel.Item key={i+\"-update\"}>\r\n           <img\r\n             className=\"d-block\"\r\n             src={API_URL+'images/product/gallery/'+file.filename}\r\n             alt=\"First slide\"\r\n             style={{height: \"300px\", width: \"100%\" }}\r\n             />\r\n           <Carousel.Caption>\r\n             <Row className=\"justify-content-center\">\r\n               <Col sm={5} md={5} lg={5}>\r\n                 <Button size=\"sm\" variant=\"dark\" title=\"Eliminar\" onClick={() => removeImgFromGallery(v,true) } className=\"buttonTrashGallery\">Eliminar <FaTrash /></Button>\r\n               </Col>\r\n             </Row>\r\n           </Carousel.Caption>\r\n         </Carousel.Item>\r\n       )\r\n     }))\r\n\r\n\r\n    setHtmlImgGallery([...groupHtml,...groupHtmlUpdate])\r\n  }\r\n\r\n  const handleSelectCarrousel = (selectedIndex, e) => {\r\n    setIndexCarrousel(selectedIndex)\r\n  }\r\n\r\n  const galleryImgHandle = e => {\r\n    setGalleryImg(Object.assign({},galleryImg,e.target.files))\r\n  }\r\n\r\n  const removeImgFromGallery = (index,type) => {\r\n    if(type){\r\n      let objectGallery = Object.assign({},galleryImgUpdate)\r\n      delete objectGallery[index]\r\n      setGalleryImgUpdate(objectGallery)\r\n      setIndexCarrousel(0)\r\n    }else{\r\n      let objectGallery = Object.assign({},galleryImg)\r\n      delete objectGallery[index]\r\n      setGalleryImg(objectGallery)\r\n      setIndexCarrousel(0)\r\n    }\r\n  }\r\n\r\n  const unlockEanInput = () => {\r\n    document.getElementById('code_ean').removeAttribute('readonly')\r\n  }\r\n\r\n  const scannEan = () => {\r\n    document.getElementById('code_ean').setAttribute('readonly',true)\r\n    setIsOpenScan(true)\r\n  }\r\n\r\n  const catchCodeHandle = data => {\r\n    setIsOpenScan(false)\r\n  }\r\n\r\n  const goToTable = () => {\r\n    props.history.replace('/inventary')\r\n  }\r\n\r\n  const showInventariSection = () => {\r\n    if(!inventarySection){\r\n      if(!dataProduct.name_product || !dataProduct.price){\r\n        setValidate(true)\r\n        return\r\n      }else{\r\n        if(validate){\r\n          setValidate(false)\r\n        }\r\n      }\r\n    }\r\n    setInventarySection(!inventarySection)\r\n  }\r\n\r\n  const onChangeSelectProvider = val => {\r\n    setDataProduct({...dataProduct, id_provider : val})\r\n  }\r\n\r\n  return (\r\n    <Container fluid={true}>\r\n      <Row>\r\n        <Col sm={12} md={12} lg={12}>\r\n          <h4 className=\"title_principal\">{isUpdate ? \"Modifcar producto en el invetario\" : \"Crear producto en el inventario\"}</h4>\r\n        </Col>\r\n      </Row>\r\n      <Form onSubmit={() => {}} noValidate validated={validate} ref={inputRef}>\r\n        {inventarySection ? (\r\n          <>\r\n            <Row>\r\n              <InputField\r\n                type=\"number\"\r\n                label=\"Cantidad\"\r\n                name=\"quantity\"\r\n                required={false}\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-md-4 col-lg-4 col-sm-4\"\r\n                value={dataProduct.quantity}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                type=\"text\"\r\n                label=\"Detalle Costo\"\r\n                name=\"detail\"\r\n                required={false}\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-md-4 col-lg-4 col-sm-4\"\r\n                value={dataProduct.detail}\r\n                handleChange={onChange}\r\n              />\r\n              <InputField\r\n                type=\"number\"\r\n                step=\"any\"\r\n                label=\"Costo\"\r\n                name=\"cost\"\r\n                required={false}\r\n                messageErrors={[\r\n                  'Requerido*'\r\n                ]}\r\n                cols=\"col-md-4 col-lg-4 col-sm-4\"\r\n                value={dataProduct.cost}\r\n                handleChange={onChange}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Form.Group className={'col-md-4 col-sm-4 col-lg-4'}>\r\n                <Form.Label className=\"fontBold\">Proveedores</Form.Label>\r\n                <Select\r\n                  value={dataProduct.id_provider}\r\n                  onChange={onChangeSelectProvider}\r\n                  isMulti={true}\r\n                  options={providers.map((v,i) => {\r\n                    return {value: v.id, label: v.social_razon}\r\n                  })}\r\n                />\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button size=\"sm\" type=\"button\" onClick={onSubmit} disabled={isSubmit} variant=\"danger\" block={true}>{ textButton } <FaPlusCircle /> </Button>\r\n              </Col>\r\n              <Col sm={4} md={4} lg={4}>\r\n                <Button size=\"sm\" type=\"button\" onClick={showInventariSection} variant=\"secondary\" block={true}>Atrás</Button>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <Row className=\"\">\r\n            <Col sm={12} md={12} lg={12} xs={12} className=\"\">\r\n              <Row className=\"justify-content-center align-items-center\">\r\n                <Col sm={4} md={4} lg={4} xs={12}>\r\n                  <br/>\r\n                  <Button size=\"sm\" onClick={pickLogo} variant=\"success\" block=\"true\" size=\"sm\">\r\n                    Escoger Imagen Producto <FaImage />\r\n                  </Button>\r\n                  <input type=\"file\" id=\"file_product\" style={{display: 'none'}} onChange={readImgProduct} />\r\n                </Col>\r\n                <Col sm={4} md={4} lg={4} xs={12} className=\"text-center\">\r\n                  {imgComponent}\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <Row>\r\n                <InputField\r\n                  {...props.inputNameProduct}\r\n                  handleChange={onChange}\r\n                  value={dataProduct.name_product}\r\n                  placeholder=\"Nombre del Producto\"\r\n                />\r\n                <InputField\r\n                  {...props.inputPrice}\r\n                  handleChange={onChange}\r\n                  value={dataProduct.price}\r\n                />\r\n               <Form.Group className={props.isInventary ? 'col-md-4 col-sm-4 col-lg-4' : 'col-md-3 col-sm-3 col-lg-3'}>\r\n                  <Form.Label className=\"fontBold\">Categorías</Form.Label>\r\n                  <Select\r\n                    value={dataProduct.id_category}\r\n                    onChange={onChangeSelect}\r\n                    isMulti={true}\r\n                    options={category.map((v,i) => {\r\n                      return {value: v.id, label: v.name_category}\r\n                    })}\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n              <Row>\r\n                <InputField\r\n                  {...props.inputDescription}\r\n                  handleChange={onChange}\r\n                  value={dataProduct.description}\r\n                />\r\n              </Row>\r\n              <Accordion>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"header_card\">\r\n                    <b>Datos de Personalización</b> (hacer click para desplegar campos)\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                      <Row>\r\n                        <InputField\r\n                          {...props.inputCodeEan}\r\n                          handleChange={onChange}\r\n                          value={dataProduct.code_ean}\r\n                          />\r\n                        <Col sm={4} md={4} lg={4}>\r\n                          <br/>\r\n                          <Button size=\"sm\" variant='dark' size=\"sm\" onClick={unlockEanInput} block={true}>Escribir EAN</Button>\r\n                        </Col>\r\n                        <Col sm={4} md={4} lg={4}>\r\n                          <br/>\r\n                          <Button size=\"sm\" variant='dark' size=\"sm\" onClick={scannEan} block={true}>Scannear EAN</Button>\r\n                        </Col>\r\n                      </Row>\r\n                      <br/>\r\n                      <Row>\r\n                        <InputField\r\n                          {...props.inputSticker}\r\n                          handleChange={onChange}\r\n                          value={dataProduct.sticker_color}\r\n                          />\r\n                        <InputField\r\n                          {...props.inputMethodSale}\r\n                          handleChange={onChange}\r\n                          value={dataProduct.method_sale}\r\n                          >\r\n                          <option value=''>--Seleccione--</option>\r\n                          <option value={1}>Unidad</option>\r\n                          <option value={2}>Mayorista</option>\r\n                          <option value={3}>(Kilo, Litros, Metros, Entre Otros...)</option>\r\n                        </InputField>\r\n                        {isShowPackField ? (\r\n                          <InputField\r\n                            {...props.inputPack}\r\n                            handleChange={onChange}\r\n                            value={dataProduct.pack}\r\n                            />\r\n                        ) : ''}\r\n                        <InputField\r\n                         type='number'\r\n                         label='Stock minimo'\r\n                         name='minimun_stock'\r\n                         required={false}\r\n                         messageErrors={[\r\n                         ''\r\n                         ]}\r\n                         cols='col-md-4 col-lg-4 col-sm-4'\r\n                         value={dataProduct.minimun_stock}\r\n                         handleChange={onChange}\r\n                        />\r\n                      </Row>\r\n                      <Row className=\"justify-content-center\">\r\n                        <Col sm={6} md={6} lg={6} xs={12}>\r\n                          <Button size=\"sm\" variant=\"secondary\" onClick={displayInputGallery} block=\"true\">Imagénes de Galeria <FaImage /></Button>\r\n                          <input type=\"file\" id=\"galleryImg\" style={{display: 'none'}} multiple={true} accept=\".jpg, .png, .jpeg\" onChange={galleryImgHandle} />\r\n                        </Col>\r\n                      </Row>\r\n                      <br/>\r\n                      <Row className=\"justify-content-center\">\r\n                        <Col sm={8} md={8} lg={8}>\r\n                          <Carousel activeIndex={indexCarrousel} onSelect={handleSelectCarrousel}>\r\n                            {htmlImgGallery}\r\n                          </Carousel>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n              <br />\r\n              {\r\n                !isUpdate ? (\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col sm={4} md={4} lg={4}>\r\n                      <Button variant=\"danger\" size=\"sm\" onClick={showInventariSection} block={true}>Datos de Inventario</Button>\r\n                    </Col>\r\n                  </Row>\r\n                ) : (\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col md={4} sm={4} lg={4}>\r\n                      <Button size=\"sm\" type=\"button\" onClick={onSubmit} disabled={isSubmit} variant=\"danger\" block={true}>{ textButton } <FaPlusCircle /> </Button>\r\n                    </Col>\r\n                    {props.isInventary ? (\r\n                      <Col md={4} sm={4} lg={4}>\r\n                        <Button size=\"sm\" type=\"button\" onClick={goToTable} variant=\"secondary\" block={true}>Volver</Button>\r\n                      </Col>\r\n                    ) : ''}\r\n                  </Row>\r\n                )\r\n              }\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Form>\r\n      <ScanEanModal\r\n        show={isOpenScan}\r\n        onHide={()=> setIsOpenScan(false)}\r\n        catchCode={catchCodeHandle}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\nFormProductSale.defaultProps ={\r\n  inputNameProduct: {\r\n    type: 'text',\r\n    required: true,\r\n    name: 'name_product',\r\n    label : 'Nombre',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputCodeEan: {\r\n    type: 'text',\r\n    required: false,\r\n    readonly: true,\r\n    name: 'code_ean',\r\n    label : 'Codigo EAN',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputIsNeto: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'is_neto',\r\n    label : 'Es Neto',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputDescription: {\r\n    type: 'textarea',\r\n    required: false,\r\n    name: 'description',\r\n    label : 'Descripción (opcional)',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputAutoSale: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'is_auto_sale',\r\n    label : 'Auto Venta',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputMethodSale: {\r\n    type: 'select',\r\n    required: true,\r\n    name: 'method_sale',\r\n    label : 'Método de Venta',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputPrice: {\r\n    type: 'number',\r\n    required: true,\r\n    name: 'price',\r\n    label : 'Precio',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    step: 'any',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputSticker: {\r\n    type: 'color',\r\n    required: true,\r\n    name: 'sticker_color',\r\n    label : 'color de la Etiqueta',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputCategory: {\r\n    type: 'select',\r\n    multiple: true,\r\n    required: false,\r\n    name: 'id_category',\r\n    label : 'Categoria',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n  inputPack: {\r\n    type: 'number',\r\n    required: false,\r\n    name: 'pack',\r\n    label : 'Pack',\r\n    placeholder: 'Ingrese la cantidad de venta',\r\n    cols:\"col-sm-4 col-md-4 col-lg-4 col-xs-4\",\r\n    step: 'any',\r\n    messageErrors: [\r\n      'Requerido*'\r\n    ],\r\n  },\r\n}\r\n\r\nFormProductSale.propTypes = {\r\n  handleSubmitProduct : PropTypes.func,\r\n  isInventary: PropTypes.bool,\r\n}\r\n\r\nexport default FormProductSale\r\n","import React, { useMemo, useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { API_URL } from 'utils/constants'\r\nimport layoutHelpers from 'shared/layouts/helpers'\r\nimport FormProductSale from 'components/FormProductSale'\r\n\r\nconst ProductFormPage = (props) => {\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem('configStore')){\r\n      layoutHelpers.toggleCollapsed()\r\n      return () => {\r\n        layoutHelpers.toggleCollapsed()\r\n      }\r\n    }else{\r\n      toast.error('Error, debe hacer su configuración de empresa')\r\n      props.history.replace('/config/config_store')\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <FormProductSale\r\n      {...props}\r\n      handleSubmitProduct={() => {}}\r\n      isInventary={true}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default ProductFormPage\r\n"],"sourceRoot":""}