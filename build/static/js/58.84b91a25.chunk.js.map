{"version":3,"sources":["components/Table.jsx","components/input/InputComponentRef.jsx","pages/ProductListDetailPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","position","getCellProps","autoRemove","val","Table","InputFieldRef","forwardRef","props","ref","classFormGroup","cols","Group","Label","label","Control","name","handleChange","required","readOnly","readonly","step","onKeyUp","handleKeyUp","autoComplete","Feedback","messageErrors","v","replace","as","multiple","children","id_branch","localStorage","getItem","listColumns","ProductListDetailPage","useState","objectList","setObjectList","displayLoading","setDisplayLoading","listDetails","setListDetails","products","setProducts","tax","configStore","setConfigStore","id_product","price","dataForm","setDataForm","validated","setValidated","inputRef","useRef","inputRef1","useEffect","id_branch_office","toast","error","setTimeout","history","fetchData","Header","accessor","props1","name_product","Cell","showPriceWithDecimals","configGeneral","original","simbolo_moneda","parseFloat","removeProductDetailHandler","promises","axios","get","API_URL","match","params","push","Promise","all","then","result","details","catch","err","tokenExpired","onChangeHandler","persist","prod","find","current","focus","dataRemove","currentData","parseInt","goBack","clearData","fluid","textDecoration","textTransform","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","element","selectOption","document","getElementById","options","objectDetailNew","id_product_list","attributes","dataindex","noValidate","sm","md","lg","block","objectPut","detailProducts","put","success","connect","enterpriseSucursal","id_enterprise","configs","config"],"mappings":"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","file":"static/js/58.84b91a25.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table_responsive_eddit\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td style={{position: \"relative\"}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n}\r\n\r\nexport default Table\r\n","import React, { useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap'\r\nimport './InputComponent.css'\r\n\r\nconst InputFieldRef = React.forwardRef( (props,ref) => {\r\n\r\n  const classFormGroup = props.cols ? props.cols : \"col-md-6 col-sm-6\"\r\n  if(props.type !== \"select\" && props.type !== \"textarea\"){\r\n    return (\r\n      <Form.Group className={classFormGroup}>\r\n        <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n        <Form.Control\r\n          ref={ref}\r\n          id={props.id ? props.id : props.name}\r\n          type={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          className={props.className ? props.className : ''}\r\n          step={props.step ? props.step : ''}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          className={props.className ? props.className+\" form-control-sm\" : \"form-control-sm\"}\r\n          style={props.style ? props.style : {}}\r\n          autoComplete={props.autoComplete ? props.autoComplete : 'xxx'}\r\n          />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {\r\n            props.messageErrors.map((v,i) => {\r\n              return <span key={i} className=\"error-input\">{v.replace(/[*]$/g,'')}</span>\r\n            })\r\n          }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"select\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n        <Form.Control\r\n          id={props.id ? props.id : props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          required={props.required}\r\n          multiple={props.multiple ? props.multiple : false}\r\n          ref={ref ? ref : null}\r\n          className={props.className ? props.className+\" form-control-sm\" : \"form-control-sm\"}\r\n          style={props.style ? props.style : {}}\r\n          autoComplete={props.autoComplete ? props.autoComplete : 'xxx'}\r\n        >\r\n          {props.children}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {\r\n            props.messageErrors.map((v,i) => {\r\n              return <span key={i} className=\"error-input\">{v.replace(/[*]$/g,'')}</span>\r\n            })\r\n          }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }else if(props.type === \"textarea\"){\r\n    return(\r\n      <Form.Group className={classFormGroup}>\r\n        <Form.Label className=\"fontBold\">{props.label}</Form.Label>\r\n        <Form.Control\r\n          id={props.id ? props.id : props.name}\r\n          as={props.type}\r\n          name={props.name}\r\n          onChange={props.handleChange}\r\n          value={props.value}\r\n          placeholder={props.placeholder ? props.placeholder : ''}\r\n          required={props.required}\r\n          rows={props.rows ? props.rows : 2}\r\n          readOnly={props.readonly ? props.readonly : false}\r\n          onKeyUp={ props.handleKeyUp ? props.handleKeyUp : () => {} }\r\n          ref={ref ? ref : null}\r\n          className={props.className ? props.className+\" form-control-sm\" : \"form-control-sm\"}\r\n          style={props.style ? props.style : {}}\r\n          autoComplete={props.autoComplete ? props.autoComplete : 'xxx'}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {\r\n            props.messageErrors.map((v,i) => {\r\n              return <span key={i} className=\"error-input\">{v.replace(/[*]$/g,'')}</span>\r\n            })\r\n          }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    )\r\n  }\r\n\r\n})\r\n\r\nInputFieldRef.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleKeyUp: PropTypes.func,\r\n  value: PropTypes.any,\r\n  cols: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  errors: PropTypes.array,\r\n  messageErrors: PropTypes.array,\r\n  readonly: PropTypes.bool,\r\n  multiple: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  steps: PropTypes.string,\r\n  autoComplete: PropTypes.bool,\r\n}\r\n\r\nexport default InputFieldRef\r\n","import React, {useState, useEffect, useRef, useMemo} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Container, Row, Col, Button, Badge } from 'react-bootstrap'\r\nimport axios from 'axios';\r\nimport { API_URL } from 'utils/constants'\r\nimport InputFieldRef from 'components/input/InputComponentRef'\r\nimport { toast } from 'react-toastify';\r\nimport LoadingComponent from 'components/LoadingComponent'\r\nimport Table from 'components/Table'\r\nimport { FaTrash } from 'react-icons/fa'\r\nimport { showPriceWithDecimals } from 'utils/functions';\r\n\r\nlet id_branch = localStorage.getItem(\"id_branch_office\");\r\nlet listColumns = []\r\n\r\nexport const ProductListDetailPage = (props) => {\r\n\r\n  const [objectList, setObjectList] = useState(null);\r\n  const [displayLoading, setDisplayLoading] = useState(true);\r\n  const [listDetails, setListDetails] = useState([]);\r\n  const [newDetailList, setNewDetailList] = useState([])\r\n  const [products, setProducts] = useState([]);\r\n  const [configStore, setConfigStore] = useState({tax: 19})\r\n  const [dataForm, setDataForm] = useState({\r\n    id_product : \"\",\r\n    price : \"\"\r\n  })\r\n  const [validated, setValidated] = useState(false)\r\n  const inputRef = useRef(null);\r\n  const inputRef1 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if(id_branch != props.id_branch_office){\r\n      toast.error(\"Esta lista no pertenece a esta sucursal\");\r\n      setTimeout(() => {\r\n        props.history.replace(\"/product/listProduct\");\r\n      },1500)\r\n    }else{\r\n      fetchData(true);\r\n    }\r\n  },[props.id_branch_office])\r\n\r\n  listColumns = useMemo(() => {\r\n    return [\r\n      {\r\n        Header : \"Producto\",\r\n        accessor : props1 => [props1.products.name_product]\r\n      },\r\n      {\r\n        Header : \"Precio\",\r\n        accessor : props1 => [props1.price],\r\n        Cell : props1 => {\r\n          return <span>{showPriceWithDecimals(props.configGeneral,props1.cell.row.original.price)}{props.configGeneral ? props.configGeneral.simbolo_moneda : \"\" }</span>\r\n        }\r\n      },\r\n      {\r\n        Header : \"Precio con iva\",\r\n        accessor : props1 => [ (( parseFloat(props1.price) * parseFloat(configStore.tax)) / 100) + parseFloat(props1.price)],\r\n        Cell : props1 => {\r\n          const { original } = props1.cell.row\r\n          return (<Badge variant=\"danger\" className=\"font-badge\">{showPriceWithDecimals(props.configGeneral,(( parseFloat(original.price) * parseFloat(configStore.tax)) / 100) + parseFloat(original.price),2,\",\",\".\")} {props.configGeneral ? props.configGeneral.simbolo_moneda : \"\" }</Badge>)\r\n        }\r\n      },\r\n      {\r\n        Header : \"Acciones\",\r\n        Cell : props1 => {\r\n          const { original } = props1.cell.row\r\n          return <Button variant=\"danger\" size=\"sm\" onClick={() => removeProductDetailHandler(original)}><FaTrash /></Button>\r\n        }\r\n      }\r\n    ]\r\n  },[])\r\n\r\n  const fetchData = (type = false) => {\r\n    \r\n    let promises = [\r\n      axios.get(API_URL+\"listProduct/\"+props.match.params.id),\r\n    ]\r\n\r\n    if(type){\r\n      promises.push(\r\n        axios.get(API_URL+\"product\"),\r\n      )\r\n      promises.push(\r\n        axios.get(API_URL+\"config_store\"),\r\n      )\r\n    }\r\n\r\n    Promise.all(promises).then(result => {\r\n      setObjectList(result[0].data)\r\n      setListDetails(result[0].data.details)\r\n      if(type){\r\n        setProducts(result[1].data)\r\n        setConfigStore(result[2].data)\r\n      }\r\n      setDisplayLoading(false)    \r\n    }).catch(err =>{\r\n      props.tokenExpired(err)\r\n      setDisplayLoading(false)    \r\n    })\r\n  }\r\n\r\n  const onChangeHandler = e => {\r\n    e.persist();\r\n    setDataForm({...dataForm, [e.target.name] : e.target.value});\r\n    if(e.target.name === \"id_product\"){\r\n      let prod = products.find(v => v.id == e.target.value)\r\n      setDataForm({...dataForm, [e.target.name] : e.target.value, price: prod.price})\r\n      inputRef1.current.focus()\r\n    }else{\r\n      setDataForm({...dataForm, [e.target.name] : e.target.value})\r\n    }\r\n  }\r\n\r\n  const onSubmitHandler = e => {\r\n    \r\n    const form = e.currentTarget;\r\n    e.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return\r\n    }\r\n\r\n    let selectOption = document.getElementById(\"id_product\")\r\n    let element;\r\n    for(let i = 0; i < selectOption.options.length; i++) {\r\n      if(selectOption.options[i].value === selectOption.value){\r\n        element  = selectOption.options[i]\r\n      }\r\n    }\r\n    \r\n    let objectDetailNew = {\r\n      id_product_list : objectList.id,\r\n      id_product : dataForm.id_product,\r\n      price : dataForm.price,\r\n      products : products[element.attributes.dataindex.value]\r\n    }\r\n    setListDetails(currentData => [...currentData,objectDetailNew])\r\n    clearData()\r\n  }\r\n  \r\n  const removeProductDetailHandler = dataRemove => {\r\n    setListDetails(currentData => currentData.filter(v => parseInt(v.id_product) !== parseInt(dataRemove.id_product) ))\r\n  }\r\n  \r\n  const confirmSubmitHandler = () => {\r\n    setDisplayLoading(true)\r\n    let arrayPut = [...listDetails];\r\n    let objectPut = {\r\n      detailProducts : arrayPut\r\n    }\r\n    axios.put(API_URL+\"listProductDetail/\"+props.match.params.id,objectPut).then(result => {\r\n      toast.success(\"Lista modificada con éxito\");\r\n      setTimeout(() => {\r\n        goBack();\r\n      },1500)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const goBack = () => {\r\n    props.history.replace(\"/product/listProduct\");\r\n  }\r\n  const clearData = () => {\r\n    setDataForm({\r\n      id_product: \"\",\r\n      price : \"\"\r\n    });\r\n    setValidated(false);\r\n    inputRef.current.focus()\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      {\r\n        displayLoading ? (\r\n          <LoadingComponent />\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h4 className=\"title_principal\">Detalle de la lista <span style={{textDecoration:\"underline\",textTransform: \"uppercase\"}}>{objectList ? objectList.name : \"\"}</span></h4>\r\n              </Col>\r\n              <Col>\r\n                <h4 className=\"title_principal text-right\">Total de productos <Badge variant=\"danger\" className=\"font-badge\">{listDetails.length}</Badge></h4>\r\n              </Col>\r\n            </Row>\r\n            <hr/>\r\n            <Row>\r\n              <Col>\r\n                <Form onSubmit={onSubmitHandler} noValidate validated={validated}>\r\n                  <Row className=\"justify-content-center\">\r\n                    <InputFieldRef\r\n                      ref={inputRef}\r\n                      type=\"select\"\r\n                      name=\"id_product\"\r\n                      label=\"Producto\"\r\n                      value={dataForm.id_product}\r\n                      handleChange={onChangeHandler}\r\n                      required={true}\r\n                      cols=\"col-md-4 col-sm-4 col-lg-4 col-xl-4\"\r\n                      messageErrors={[\r\n                        \"Requerido\"\r\n                      ]}\r\n                    >\r\n                      <option value=\"\">--Seleccione--</option>\r\n                      {products.map((v,i) => <option key={i} value={v.id} dataindex={i}>{v.name_product}</option>)}\r\n                    </InputFieldRef>\r\n                    <InputFieldRef\r\n                      ref={inputRef1}\r\n                      type=\"number\"\r\n                      name=\"price\"\r\n                      label=\"Precio\"\r\n                      value={dataForm.price}\r\n                      required={true}\r\n                      handleChange={onChangeHandler}\r\n                      cols=\"col-md-4 col-sm-4 col-lg-4 col-xl-4\"\r\n                      messageErrors={[\r\n                        \"Requerido\"\r\n                      ]}\r\n                    />\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\"text-center text-danger\">\r\n                      *El botón de agregar es para agregar el item a la tabla y el confirmar para almacenar en la base de datos.\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n                  <Row className=\"justify-content-center\">\r\n                  <Col sm={4} md={4} lg={4}>\r\n                      <Button variant=\"secondary\" type=\"button\" block={true} size=\"sm\" onClick={goBack}>Volver</Button>\r\n                    </Col>\r\n                    <Col sm={4} md={4} lg={4}>\r\n                      <Button variant=\"danger\" type=\"submit\" block={true} size=\"sm\">Agregar</Button>\r\n                    </Col>\r\n                    <Col sm={4} md={4} lg={4}>\r\n                      <Button variant=\"secondary\" type=\"button\" block={true} size=\"sm\" onClick={confirmSubmitHandler}>Confirmar</Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n              <Col>\r\n                <Table data={listDetails} columns={listColumns} />\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nProductListDetailPage.propTypes = {\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  id_branch_office : state.enterpriseSucursal.id_branch_office,\r\n  id_enterprise : state.enterpriseSucursal.id_enterprise,\r\n  configGeneral : state.configs.config,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListDetailPage)\r\n"],"sourceRoot":""}