{"version":3,"sources":["components/Table.jsx","pages/ProviderPage.jsx"],"names":["Styles","styled","div","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","className","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","DataTable","columns","data","menuTop","headerColor","headerFontColor","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageIndex","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","size","style","height","variant","onClick","disabled","type","defaultValue","Number","map","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","backgroundColor","color","render","isSorted","isSortedDesc","canFilter","i","getRowProps","cells","cell","getCellProps","autoRemove","val","Table","connect","id_branch_office","enterpriseSucursal","id_enterprise","props","useState","provider","setProvider","isOpen","setIsOpen","directionRegister","displayLoading","setDisplayLoading","useEffect","fetchData","confirmDeleteRegister","axios","delete","API_URL","then","result","toast","success","catch","err","tokenExpired","modifyRegister","history","replace","btoa","get","createRepresent","onHide","sm","md","lg","xs","title","block","Header","accessor","Cell","props1","placement","overlay","original","pais","nombre","city","comuna","address","social_razon","Item","confirmAlert","customUI","onClose","deleteRegister","show","aria-labelledby","centered","handleClose","closeButton","Title","Body","Footer"],"mappings":"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","file":"static/js/53.815845cf.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy, useFilters, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .button-pagination{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPage{\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .inputPageFilter{\r\n    display: inline-block;\r\n    width: 80%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .table_responsive_eddit{\r\n    overflow-x: auto;\r\n  }\r\n`\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar en ${count} registros...`}\r\n      className=\"inputPageFilter\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nfunction DataTable({ columns, data, menuTop, headerColor, headerFontColor }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      {menuTop ? (\r\n        <div className=\"pagination\">\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>{' '}\r\n          <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </Button>{' '}\r\n          <span>\r\n            Página{' '}\r\n            <strong>\r\n              {pageIndex + 1} de {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span className=\"ml-3\">\r\n            | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              className=\"inputPage\"\r\n              onChange={(e) => {\r\n                if(e.target.value > pageOptions.length){\r\n                  e.target.value = 1\r\n                }\r\n              }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n            className=\"inputPage\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      ) : ''}\r\n      <table {...getTableProps()} className=\"table table-bordered\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"text-center\">\r\n              {headerGroup.headers.map(column => (\r\n\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{ backgroundColor: headerColor ? headerColor : \"rgb(218, 236, 242)\", color: headerFontColor ? headerFontColor : \"black\" }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"text-center\">\r\n          {page.map(\r\n            (row, i) =>\r\n              prepareRow(row) || (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </Button>{' '}\r\n        <Button size=\"sm\" style={{height:'40px'}} className=\"button-pagination\" variant=\"secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>{' '}\r\n        <span>\r\n          Página{' '}\r\n          <strong>\r\n            {pageIndex + 1} de {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | <span className=\"ml-2\">Ir a la Página:{' '}</span>\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            className=\"inputPage\"\r\n            onChange={(e) => {\r\n              if(e.target.value > pageOptions.length){\r\n                e.target.value = 1\r\n              }\r\n            }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n          className=\"inputPage\"\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Mostrar {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Table = ({data,columns,menuTop,headerColor,headerFontColor}) => {\r\n\r\n  return (\r\n    <Styles>\r\n      <DataTable data={data} columns={columns} menuTop={menuTop} headerFontColor={headerFontColor} headerColor={headerColor}  />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns : PropTypes.array.isRequired,\r\n  menuTop: PropTypes.bool,\r\n  headerColor: PropTypes.string,\r\n  headerFontColor: PropTypes.string,\r\n}\r\n\r\nexport default Table\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport axios from 'axios'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Modal,\r\n  Badge\r\n} from 'react-bootstrap'\r\nimport { toast } from 'react-toastify'\r\nimport { API_URL } from 'utils/constants'\r\nimport Table from 'components/Table'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\n\r\nimport 'styles/components/modalComponents.css'\r\nimport { FaUser } from 'react-icons/fa'\r\nimport { connect } from 'react-redux'\r\nimport LoadingComponent from 'components/LoadingComponent'\r\n\r\nconst ProviderPage = (props) => {\r\n\r\n  const [provider,setProvider] = useState([])\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [directionRegister,setDirectionRegister] = useState('')\r\n  const [displayLoading, setDisplayLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  },[props.id_enterprise])\r\n\r\n  const deleteRegister = id => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui-edit'>\r\n            <h1>¿Esta seguro?</h1>\r\n            <p className=\"font-alert\">¿Desea realmente borrar este registro?</p>\r\n            <button className=\"button-alert\"\r\n              onClick={() => {\r\n                confirmDeleteRegister(id);\r\n                onClose();\r\n              }}\r\n            >\r\n              Si, Aceptar\r\n            </button>\r\n            <button className=\"button-alert\" onClick={onClose}>No</button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  const confirmDeleteRegister = id => {\r\n    setDisplayLoading(true)\r\n    axios.delete(API_URL+'provider/'+id).then(result => {\r\n      toast.success('Registro eliminado con éxito')\r\n      fetchData()\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const modifyRegister = id => {\r\n    props.history.replace('/provider/form/'+btoa(id))\r\n  }\r\n\r\n  const fetchData = () => {\r\n    axios.get(API_URL+'provider').then(result => {\r\n      setProvider(result.data)\r\n      setDisplayLoading(false)\r\n    }).catch(err => {\r\n      setDisplayLoading(false)\r\n      props.tokenExpired(err)\r\n    })\r\n  }\r\n\r\n  const goToForm = () => {\r\n    props.history.replace('/provider/form')\r\n  }\r\n\r\n  const createRepresent = data => {\r\n    props.history.replace('/provider/represent/'+data.id)\r\n  }\r\n\r\n  const onHide = () => {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {displayLoading ? (\r\n        <Container>\r\n          <LoadingComponent />\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12}>\r\n              <h4 className=\"title_principal\">Proveedores</h4>\r\n              <hr/>\r\n            </Col>\r\n            <Col sm={6} md={6} lg={6} xs={12} className=\"\">\r\n              <Button size=\"sm\" title=\"Crear Proveedor\" onClick={goToForm} variant=\"success\" block={true}>Crear Proveedor <FaPlusCircle /></Button>\r\n            </Col>\r\n            <Col sm={6} md={6} lg={6} xs={12} className=\"text-right\">\r\n              <h5 className=\"title_principal\">Total Proveedores: <Badge variant=\"danger\" className=\"font_badge\">{provider.length}</Badge></h5>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={12} md={12} lg={12} xs={12}>\r\n              <Table columns={[\r\n                {\r\n                  Header: 'Razón Social',\r\n                  accessor: 'social_razon',\r\n                  Cell: props1 => {\r\n                    return (\r\n                      <OverlayTrigger placement={'right'} overlay={\r\n                        <Tooltip id={\"tooltip-right\"}>\r\n                          <ul className=\"list-group\">\r\n                            <li className=\"list-group-item text-center\"><b>Pais:</b> {props1.cell.row.original.pais.nombre}</li>\r\n                            <li className=\"list-group-item text-center\"><b>Ciudad:</b>  {props1.cell.row.original.city}</li>\r\n                            <li className=\"list-group-item text-center\"><b>Comuna:</b>  {props1.cell.row.original.comuna}</li>\r\n                            <li className=\"list-group-item text-center\"><b>Detalles:</b>  {props1.cell.row.original.address}</li>\r\n                          </ul>\r\n                        </Tooltip>\r\n                      }>\r\n                        <Button size=\"sm\" type=\"button\" block={true} variant=\"link\" onClick={() => modifyRegister(props1.cell.row.original.id)}>{props1.cell.row.original.social_razon}</Button>\r\n                      </OverlayTrigger>\r\n                    )\r\n                  }\r\n                },\r\n                {\r\n                  Header: 'Rut',\r\n                  accessor: 'rut_provider',\r\n                },\r\n                {\r\n                  Header: 'Teléfono',\r\n                  accessor: 'phone',\r\n                },\r\n                {\r\n                  Header: 'Spin',\r\n                  accessor: 'spin',\r\n                },\r\n                {\r\n                  Header: 'Acciones',\r\n                  Cell: props => {\r\n                    const id = props.cell.row.original.id\r\n                    return(\r\n                      <DropdownButton size=\"sm\" id={'drop'+props.cell.row.original.id} title=\"Seleccione\"  block=\"true\">\r\n                        <Dropdown.Item onClick={() => createRepresent(props.cell.row.original)}>Crear Representante</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => modifyRegister(id)}>Modificar</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => deleteRegister(id)}>Eliminar</Dropdown.Item>\r\n                      </DropdownButton>\r\n                    )\r\n                  }\r\n                }\r\n              ]} data={provider} />\r\n            </Col>\r\n          </Row>\r\n          <Modal\r\n            show={isOpen}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            handleClose={onHide}\r\n          >\r\n            <Modal.Header closeButton className=\"header_dark\">\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Dirección del Registro <FaUser />\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              {directionRegister}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button size=\"sm\" onClick={onHide}>Cerrar</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n        </Container>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    id_branch_office : state.enterpriseSucursal.id_branch_office,\r\n    id_enterprise : state.enterpriseSucursal.id_enterprise,\r\n  }\r\n}\r\n\r\nProviderPage.propTypes ={\r\n  id_branch_office: PropTypes.string.isRequired,\r\n  id_enterprise : PropTypes.string.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(ProviderPage)\r\n"],"sourceRoot":""}